05 abr 2016 - 15:40:34,023 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:40:34,040 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:40:34,052 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,054 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,060 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:40:34,069 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,077 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,082 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:40:34,093 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,100 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,121 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:40:34,147 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:40:34,147 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:40:34,166 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 15:40:34,166 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 15:40:34,166 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 15:40:34,166 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:40:34,166 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:40:34,166 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:40:34,166 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:40:34,167 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:40:34,167 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:40:34,167 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:40:34,167 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:40:34,167 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 15:40:34,188 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 15:40:34,230 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:40:34,236 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:40:34,241 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:40:34,242 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:40:34,242 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:40:34,242 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:40:34,242 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:40:34,243 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:40:34,243 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:40:34,243 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:40:34,243 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:40:34,243 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:40:34,243 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:40:34,244 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:40:34,244 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:40:34,244 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:40:34,244 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:40:34,244 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:40:34,245 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:40:34,245 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:40:34,245 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:40:34,245 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:40:34,247 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:40:34,247 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:40:34,248 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:40:34,248 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:40:34,249 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,249 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,250 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:40:34,250 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,250 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,250 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,250 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,251 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:40:34,251 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,251 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,251 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,251 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,251 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,253 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:40:34,253 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,253 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,253 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,253 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,253 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,254 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:40:34,254 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:40:34,254 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:40:34,254 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:40:34,256 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:40:34,256 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:40:34,258 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:40:34,278 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:40:34,281 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 15:40:34,281 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 15:40:34,281 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 15:40:34,281 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 15:40:34,281 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 15:40:34,282 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 15:40:34,282 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 15:40:34,282 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 15:40:34,282 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:40:34,284 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 15:40:34,285 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,285 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,285 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,285 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,285 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:40:34,286 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:40:34,286 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:40:34,286 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:40:34,286 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:40:34,287 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:40:34,287 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:40:34,287 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:40:34,287 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:40:34,287 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:40:34,289 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,289 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:40:34,289 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:40:34,289 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:40:34,291 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:40:34,291 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:40:34,291 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 15:40:34,292 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 15:40:34,292 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 15:40:34,292 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:40:34,293 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 15:40:34,293 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 15:40:34,293 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 15:40:34,294 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 15:40:34,294 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 15:40:34,294 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:40:34,294 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:40:34,294 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,294 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,303 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:40:34,303 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,303 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 15:40:34,303 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,303 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:40:34,303 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 15:40:34,311 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 15:40:34,311 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 15:40:34,311 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,320 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 15:40:34,320 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 15:40:34,320 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 15:40:34,321 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 15:40:34,545 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 15:40:34,546 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:40:34,562 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:40:34,577 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:40:34,588 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,590 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,593 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:40:34,602 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,611 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,614 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:40:34,624 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,629 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,642 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 15:40:34,642 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 15:40:34,679 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:40:34,679 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 15:40:34,679 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 15:40:34,702 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:40:34,862 (main) ERROR [DataNucleus.Datastore.Schema] - La inicialización del base de datos ha fallado.
Access denied for user 'sd'@'localhost' (using password: YES)
org.datanucleus.exceptions.NucleusDataStoreException: Access denied for user 'sd'@'localhost' (using password: YES)
	at org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl.getConnection(ConnectionFactoryImpl.java:518)
	at org.datanucleus.store.rdbms.RDBMSStoreManager.<init>(RDBMSStoreManager.java:302)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:612)
	at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:301)
	at org.datanucleus.NucleusContextHelper.createStoreManagerForProperties(NucleusContextHelper.java:193)
	at org.datanucleus.PersistenceNucleusContextImpl.initialise(PersistenceNucleusContextImpl.java:428)
	at org.datanucleus.store.schema.SchemaTool.getNucleusContextForMode(SchemaTool.java:693)
	at org.datanucleus.store.schema.SchemaTool.main(SchemaTool.java:281)
Caused by: java.sql.SQLException: Access denied for user 'sd'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1086)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:928)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1750)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1290)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2493)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2311)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:834)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:416)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:347)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at org.datanucleus.store.rdbms.datasource.dbcp.DriverManagerConnectionFactory.createConnection(DriverManagerConnectionFactory.java:78)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.datanucleus.store.rdbms.datasource.dbcp.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1157)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:108)
	at org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl.getConnection(ConnectionFactoryImpl.java:503)
	... 11 more
Nested Throwables StackTrace:
java.sql.SQLException: Access denied for user 'sd'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1086)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:928)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1750)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1290)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2493)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2311)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:834)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:416)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:347)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at org.datanucleus.store.rdbms.datasource.dbcp.DriverManagerConnectionFactory.createConnection(DriverManagerConnectionFactory.java:78)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.datanucleus.store.rdbms.datasource.dbcp.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1157)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:108)
	at org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl.getConnection(ConnectionFactoryImpl.java:503)
	at org.datanucleus.store.rdbms.RDBMSStoreManager.<init>(RDBMSStoreManager.java:302)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:612)
	at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:301)
	at org.datanucleus.NucleusContextHelper.createStoreManagerForProperties(NucleusContextHelper.java:193)
	at org.datanucleus.PersistenceNucleusContextImpl.initialise(PersistenceNucleusContextImpl.java:428)
	at org.datanucleus.store.schema.SchemaTool.getNucleusContextForMode(SchemaTool.java:693)
	at org.datanucleus.store.schema.SchemaTool.main(SchemaTool.java:281)
05 abr 2016 - 15:40:34,864 (main) ERROR [DataNucleus.SchemaTool] - Error creating NucleusContext
Access denied for user 'sd'@'localhost' (using password: YES)
org.datanucleus.exceptions.NucleusDataStoreException: Access denied for user 'sd'@'localhost' (using password: YES)
	at org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl.getConnection(ConnectionFactoryImpl.java:518)
	at org.datanucleus.store.rdbms.RDBMSStoreManager.<init>(RDBMSStoreManager.java:302)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:612)
	at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:301)
	at org.datanucleus.NucleusContextHelper.createStoreManagerForProperties(NucleusContextHelper.java:193)
	at org.datanucleus.PersistenceNucleusContextImpl.initialise(PersistenceNucleusContextImpl.java:428)
	at org.datanucleus.store.schema.SchemaTool.getNucleusContextForMode(SchemaTool.java:693)
	at org.datanucleus.store.schema.SchemaTool.main(SchemaTool.java:281)
Caused by: java.sql.SQLException: Access denied for user 'sd'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1086)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:928)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1750)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1290)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2493)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2311)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:834)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:416)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:347)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at org.datanucleus.store.rdbms.datasource.dbcp.DriverManagerConnectionFactory.createConnection(DriverManagerConnectionFactory.java:78)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.datanucleus.store.rdbms.datasource.dbcp.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1157)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:108)
	at org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl.getConnection(ConnectionFactoryImpl.java:503)
	... 11 more
Nested Throwables StackTrace:
java.sql.SQLException: Access denied for user 'sd'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1086)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:928)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1750)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1290)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2493)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2311)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:834)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:416)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:347)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at org.datanucleus.store.rdbms.datasource.dbcp.DriverManagerConnectionFactory.createConnection(DriverManagerConnectionFactory.java:78)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.datanucleus.store.rdbms.datasource.dbcp.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1157)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:108)
	at org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl.getConnection(ConnectionFactoryImpl.java:503)
	at org.datanucleus.store.rdbms.RDBMSStoreManager.<init>(RDBMSStoreManager.java:302)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:612)
	at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:301)
	at org.datanucleus.NucleusContextHelper.createStoreManagerForProperties(NucleusContextHelper.java:193)
	at org.datanucleus.PersistenceNucleusContextImpl.initialise(PersistenceNucleusContextImpl.java:428)
	at org.datanucleus.store.schema.SchemaTool.getNucleusContextForMode(SchemaTool.java:693)
	at org.datanucleus.store.schema.SchemaTool.main(SchemaTool.java:281)
05 abr 2016 - 15:41:07,283 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:41:07,301 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:41:07,313 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,316 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,319 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:41:07,330 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,338 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,342 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:41:07,356 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,363 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,388 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:41:07,414 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:41:07,415 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:41:07,435 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 15:41:07,435 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 15:41:07,435 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:41:07,437 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 15:41:07,462 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 15:41:07,504 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:07,509 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:07,516 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:41:07,516 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:07,516 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:41:07,516 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:41:07,517 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:41:07,517 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:41:07,517 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:41:07,517 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:41:07,517 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:41:07,517 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:41:07,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:07,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:41:07,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:41:07,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:41:07,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:41:07,519 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:41:07,519 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:41:07,519 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:41:07,520 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:41:07,520 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:07,520 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:07,522 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:07,523 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:41:07,523 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:41:07,523 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,523 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,527 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:41:07,527 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:41:07,528 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:41:07,528 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:41:07,529 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:41:07,529 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:41:07,530 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 15:41:07,542 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:41:07,542 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,546 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:41:07,546 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:41:07,546 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:41:07,550 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:41:07,553 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 15:41:07,553 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 15:41:07,553 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 15:41:07,553 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 15:41:07,554 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 15:41:07,554 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 15:41:07,554 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 15:41:07,554 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:41:07,556 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:41:07,556 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 15:41:07,557 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,557 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,557 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,557 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,558 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:41:07,558 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:41:07,558 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:41:07,558 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:41:07,558 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:41:07,559 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:41:07,559 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:41:07,559 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:41:07,559 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:41:07,560 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:41:07,560 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:41:07,560 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:41:07,560 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:41:07,560 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:41:07,560 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:41:07,561 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:41:07,561 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,561 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:41:07,561 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,561 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:41:07,561 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:41:07,563 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:41:07,563 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:41:07,563 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:41:07,563 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:41:07,564 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 15:41:07,564 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 15:41:07,564 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 15:41:07,564 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:41:07,565 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 15:41:07,565 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 15:41:07,566 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 15:41:07,566 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 15:41:07,566 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 15:41:07,566 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:41:07,566 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:41:07,566 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,575 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:41:07,575 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,575 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 15:41:07,575 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,575 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:41:07,575 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 15:41:07,583 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:41:07,583 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 15:41:07,583 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 15:41:07,583 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 15:41:07,583 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 15:41:07,592 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 15:41:07,593 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 15:41:07,593 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 15:41:07,818 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 15:41:07,819 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 15:41:07,819 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:41:07,819 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:41:07,819 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:41:07,819 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:41:07,820 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:41:07,820 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:41:07,820 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:41:07,820 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:41:07,833 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:41:07,849 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:41:07,860 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,863 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,865 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:41:07,875 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,884 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,887 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:41:07,900 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,906 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,918 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 15:41:07,918 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 15:41:07,955 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:41:07,955 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 15:41:07,956 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 15:41:07,979 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:41:08,168 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 15:41:08,180 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,180 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,181 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,181 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,181 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,182 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,182 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,182 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,182 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,183 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,183 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,183 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,183 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,184 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,184 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,184 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,184 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,184 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,184 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,186 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,186 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,186 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,186 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,186 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,187 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,188 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,188 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,188 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,188 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,188 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,189 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,189 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,189 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,189 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,189 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,192 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,192 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,192 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,192 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,192 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,193 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,193 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,193 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,193 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,193 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,193 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,201 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 15:41:08,202 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 15:41:08,202 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 15:41:08,202 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 15:41:08,213 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459863668209`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,215 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459863668209`
05 abr 2016 - 15:41:08,217 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459863668209`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 15:41:08,257 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 40 ms
05 abr 2016 - 15:41:08,266 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 15:41:08,266 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459863668209`
05 abr 2016 - 15:41:08,266 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459863668209`
05 abr 2016 - 15:41:08,279 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 13 ms
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/accountsDB]
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/accountsDB]
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=accountsDB
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 15:41:08,282 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 15:41:08,282 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 15:41:08,282 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 15:41:08,282 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 15:41:08,283 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 15:41:08,289 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:41:08,314 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:41:08,314 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:41:08,327 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:41:08,327 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 15:41:08,332 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 15:41:08,333 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 15:41:08,336 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 15:41:08,336 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 15:41:08,338 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 15:41:08,338 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 7 ficheros (metadata/class) ...
05 abr 2016 - 15:41:08,346 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 15:41:08,347 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:41:08,347 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 15:41:08,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:41:08,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:08,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:41:08,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:41:08,350 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:41:08,350 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:41:08,350 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:41:08,350 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:41:08,350 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:41:08,352 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:41:08,385 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:08,388 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:41:08,388 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:08,388 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:41:08,388 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:41:08,388 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:41:08,388 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:41:08,389 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:41:08,389 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:41:08,389 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:41:08,389 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:08,394 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:08,399 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:08,400 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:41:08,400 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:41:08,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 15:41:08,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:41:08,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 15:41:08,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,404 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:41:08,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 15:41:08,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:41:08,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 15:41:08,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 15:41:08,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 15:41:08,405 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 15:41:08,405 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 15:41:08,405 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,405 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,405 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:41:08,405 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,409 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:41:08,409 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:41:08,410 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:41:08,410 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:41:08,410 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:41:08,411 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:41:08,411 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 7 ficheros (metadata/class)
05 abr 2016 - 15:41:08,413 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 15:41:08,414 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:08,414 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 15:41:08,417 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 15:41:08,417 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 15:41:08,417 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 15:41:08,418 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 15:41:08,418 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 15:41:08,421 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 15:41:08,421 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 15:41:08,421 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 15:41:08,422 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 15:41:08,423 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 15:41:08,423 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 15:41:08,423 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 15:41:08,423 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 15:41:08,423 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 15:41:08,429 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 15:41:08,429 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,430 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,431 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 15:41:08,431 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,432 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 15:41:08,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,432 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 15:41:08,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 15:41:08,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,435 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,438 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 15:41:08,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:41:08,438 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 15:41:08,443 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,443 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,443 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,446 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 15:41:08,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 15:41:08,451 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 15:41:08,451 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9" y isolacion "serializable"
05 abr 2016 - 15:41:08,452 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned no table
05 abr 2016 - 15:41:08,452 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `REPRODUCCION`
05 abr 2016 - 15:41:08,452 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `REPRODUCCION`
(
    `REPRODUCCION_ID` BIGINT NOT NULL AUTO_INCREMENT,
    `CANCION_ID_CANCION_OID` INTEGER NULL,
    `FECHA_REP` INTEGER NOT NULL,
    `HORA_REP` INTEGER NOT NULL,
    `PRECIO` INTEGER NOT NULL,
    `USUARIO_NOMBREUSU_OID` VARCHAR(255) BINARY NULL,
    CONSTRAINT `REPRODUCCION_PK` PRIMARY KEY (`REPRODUCCION_ID`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,488 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 36 ms
05 abr 2016 - 15:41:08,491 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned no table
05 abr 2016 - 15:41:08,491 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO`
05 abr 2016 - 15:41:08,491 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO`
(
    `NOMBREUSU` VARCHAR(255) BINARY NOT NULL,
    `CONTRASENYA_PAYPAL` VARCHAR(255) BINARY NULL,
    `IMPORTEMENSUAL` INTEGER NOT NULL,
    `NUMTARJCRED` INTEGER NOT NULL,
    `USUARIO_PAYPAL` VARCHAR(255) BINARY NULL,
    `VENTAJOSO` BIT NOT NULL,
    CONSTRAINT `USUARIO_PK` PRIMARY KEY (`NOMBREUSU`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,519 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:41:08,522 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned no table
05 abr 2016 - 15:41:08,522 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `CANCION`
05 abr 2016 - 15:41:08,522 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `CANCION`
(
    `ID_CANCION` INTEGER NOT NULL,
    `ALBUM` VARCHAR(255) BINARY NULL,
    `ARTISTA_ID_ARTISTA_OID` INTEGER NULL,
    `PRECIO` INTEGER NOT NULL,
    `TITULO` VARCHAR(255) BINARY NULL,
    `LISTACANCIONES_ID_ARTISTA_OWN` INTEGER NULL,
    `LISTACANCIONES_INTEGER_IDX` INTEGER NULL,
    CONSTRAINT `CANCION_PK` PRIMARY KEY (`ID_CANCION`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,550 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:41:08,553 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned no table
05 abr 2016 - 15:41:08,553 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `ARTISTA`
05 abr 2016 - 15:41:08,553 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `ARTISTA`
(
    `ID_ARTISTA` INTEGER NOT NULL,
    `NOMARTISTA` VARCHAR(255) BINARY NULL,
    CONSTRAINT `ARTISTA_PK` PRIMARY KEY (`ID_ARTISTA`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,589 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 36 ms
05 abr 2016 - 15:41:08,592 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned no table
05 abr 2016 - 15:41:08,592 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 15:41:08,592 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO_HISTORIALREP`
(
    `NOMBREUSU_OID` VARCHAR(255) BINARY NOT NULL,
    `REPRODUCCION_ID_EID` BIGINT NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `USUARIO_HISTORIALREP_PK` PRIMARY KEY (`NOMBREUSU_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,632 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 40 ms
05 abr 2016 - 15:41:08,637 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned no table
05 abr 2016 - 15:41:08,637 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 15:41:08,638 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO_LISTAREPRODUCCION`
(
    `NOMBREUSU_OID` VARCHAR(255) BINARY NOT NULL,
    `ID_CANCION_EID` INTEGER NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `USUARIO_LISTAREPRODUCCION_PK` PRIMARY KEY (`NOMBREUSU_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,676 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 38 ms
05 abr 2016 - 15:41:08,682 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned no table
05 abr 2016 - 15:41:08,682 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 15:41:08,683 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO_LISTAAMIGOS`
(
    `NOMBREUSU_OID` VARCHAR(255) BINARY NOT NULL,
    `NOMBREUSU_EID` VARCHAR(255) BINARY NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `USUARIO_LISTAAMIGOS_PK` PRIMARY KEY (`NOMBREUSU_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,719 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 36 ms
05 abr 2016 - 15:41:08,724 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned no table
05 abr 2016 - 15:41:08,724 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 15:41:08,724 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `CANCION_LISTAUSUARIO`
(
    `ID_CANCION_OID` INTEGER NOT NULL,
    `NOMBREUSU_EID` VARCHAR(255) BINARY NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `CANCION_LISTAUSUARIO_PK` PRIMARY KEY (`ID_CANCION_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,760 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 36 ms
05 abr 2016 - 15:41:08,765 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned no table
05 abr 2016 - 15:41:08,766 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 15:41:08,766 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `CANCION_LISTAREPRODUCCION`
(
    `ID_CANCION_OID` INTEGER NOT NULL,
    `REPRODUCCION_ID_EID` BIGINT NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `CANCION_LISTAREPRODUCCION_PK` PRIMARY KEY (`ID_CANCION_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,805 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 39 ms
05 abr 2016 - 15:41:08,812 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "REPRODUCCION_N50" en catalogo "" equema ""
05 abr 2016 - 15:41:08,812 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `REPRODUCCION_N50` ON `REPRODUCCION` (`CANCION_ID_CANCION_OID`)
05 abr 2016 - 15:41:08,850 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 37 ms
05 abr 2016 - 15:41:08,850 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "REPRODUCCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:08,850 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `REPRODUCCION_N49` ON `REPRODUCCION` (`USUARIO_NOMBREUSU_OID`)
05 abr 2016 - 15:41:08,969 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 119 ms
05 abr 2016 - 15:41:08,971 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "REPRODUCCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:08,971 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `REPRODUCCION` ADD CONSTRAINT `REPRODUCCION_FK1` FOREIGN KEY (`USUARIO_NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:41:09,062 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 91 ms
05 abr 2016 - 15:41:09,063 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "REPRODUCCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:09,063 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `REPRODUCCION` ADD CONSTRAINT `REPRODUCCION_FK2` FOREIGN KEY (`CANCION_ID_CANCION_OID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:41:09,162 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 99 ms
05 abr 2016 - 15:41:09,164 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:09,164 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_N49` ON `CANCION` (`ARTISTA_ID_ARTISTA_OID`)
05 abr 2016 - 15:41:09,200 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 35 ms
05 abr 2016 - 15:41:09,201 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:09,201 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION` ADD CONSTRAINT `CANCION_FK1` FOREIGN KEY (`ARTISTA_ID_ARTISTA_OID`) REFERENCES `ARTISTA` (`ID_ARTISTA`) 
05 abr 2016 - 15:41:09,295 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 94 ms
05 abr 2016 - 15:41:09,296 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:09,296 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION` ADD CONSTRAINT `CANCION_FK2` FOREIGN KEY (`LISTACANCIONES_ID_ARTISTA_OWN`) REFERENCES `ARTISTA` (`ID_ARTISTA`) 
05 abr 2016 - 15:41:09,390 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 94 ms
05 abr 2016 - 15:41:09,392 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_HISTORIALREP_N50" en catalogo "" equema ""
05 abr 2016 - 15:41:09,392 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_HISTORIALREP_N50` ON `USUARIO_HISTORIALREP` (`REPRODUCCION_ID_EID`)
05 abr 2016 - 15:41:09,422 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 30 ms
05 abr 2016 - 15:41:09,423 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_HISTORIALREP_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:09,423 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_HISTORIALREP_N49` ON `USUARIO_HISTORIALREP` (`NOMBREUSU_OID`)
05 abr 2016 - 15:41:09,450 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 27 ms
05 abr 2016 - 15:41:09,451 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_HISTORIALREP_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:09,451 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_HISTORIALREP` ADD CONSTRAINT `USUARIO_HISTORIALREP_FK1` FOREIGN KEY (`NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:41:09,536 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 85 ms
05 abr 2016 - 15:41:09,537 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_HISTORIALREP_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:09,537 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_HISTORIALREP` ADD CONSTRAINT `USUARIO_HISTORIALREP_FK2` FOREIGN KEY (`REPRODUCCION_ID_EID`) REFERENCES `REPRODUCCION` (`REPRODUCCION_ID`) 
05 abr 2016 - 15:41:09,613 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 76 ms
05 abr 2016 - 15:41:09,614 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAREPRODUCCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:09,614 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAREPRODUCCION_N49` ON `USUARIO_LISTAREPRODUCCION` (`ID_CANCION_EID`)
05 abr 2016 - 15:41:09,640 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 26 ms
05 abr 2016 - 15:41:09,640 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAREPRODUCCION_N50" en catalogo "" equema ""
05 abr 2016 - 15:41:09,640 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAREPRODUCCION_N50` ON `USUARIO_LISTAREPRODUCCION` (`NOMBREUSU_OID`)
05 abr 2016 - 15:41:09,666 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 26 ms
05 abr 2016 - 15:41:09,667 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAREPRODUCCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:09,667 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAREPRODUCCION` ADD CONSTRAINT `USUARIO_LISTAREPRODUCCION_FK1` FOREIGN KEY (`NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:41:09,738 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 71 ms
05 abr 2016 - 15:41:09,739 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAREPRODUCCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:09,739 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAREPRODUCCION` ADD CONSTRAINT `USUARIO_LISTAREPRODUCCION_FK2` FOREIGN KEY (`ID_CANCION_EID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:41:09,809 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 70 ms
05 abr 2016 - 15:41:09,810 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAAMIGOS_N50" en catalogo "" equema ""
05 abr 2016 - 15:41:09,810 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAAMIGOS_N50` ON `USUARIO_LISTAAMIGOS` (`NOMBREUSU_EID`)
05 abr 2016 - 15:41:09,838 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:41:09,839 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAAMIGOS_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:09,839 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAAMIGOS_N49` ON `USUARIO_LISTAAMIGOS` (`NOMBREUSU_OID`)
05 abr 2016 - 15:41:09,939 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 100 ms
05 abr 2016 - 15:41:09,940 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAAMIGOS_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:09,940 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAAMIGOS` ADD CONSTRAINT `USUARIO_LISTAAMIGOS_FK2` FOREIGN KEY (`NOMBREUSU_EID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:41:10,503 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 563 ms
05 abr 2016 - 15:41:10,504 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAAMIGOS_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:10,504 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAAMIGOS` ADD CONSTRAINT `USUARIO_LISTAAMIGOS_FK1` FOREIGN KEY (`NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:41:10,612 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 108 ms
05 abr 2016 - 15:41:10,614 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAUSUARIO_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:10,614 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAUSUARIO_N49` ON `CANCION_LISTAUSUARIO` (`ID_CANCION_OID`)
05 abr 2016 - 15:41:10,657 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 43 ms
05 abr 2016 - 15:41:10,659 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAUSUARIO_N50" en catalogo "" equema ""
05 abr 2016 - 15:41:10,660 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAUSUARIO_N50` ON `CANCION_LISTAUSUARIO` (`NOMBREUSU_EID`)
05 abr 2016 - 15:41:10,699 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 39 ms
05 abr 2016 - 15:41:10,699 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAUSUARIO_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:10,699 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAUSUARIO` ADD CONSTRAINT `CANCION_LISTAUSUARIO_FK2` FOREIGN KEY (`NOMBREUSU_EID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:41:10,786 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 87 ms
05 abr 2016 - 15:41:10,786 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAUSUARIO_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:10,787 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAUSUARIO` ADD CONSTRAINT `CANCION_LISTAUSUARIO_FK1` FOREIGN KEY (`ID_CANCION_OID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:41:11,170 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 383 ms
05 abr 2016 - 15:41:11,172 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAREPRODUCCION_N50" en catalogo "" equema ""
05 abr 2016 - 15:41:11,172 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAREPRODUCCION_N50` ON `CANCION_LISTAREPRODUCCION` (`ID_CANCION_OID`)
05 abr 2016 - 15:41:11,224 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 52 ms
05 abr 2016 - 15:41:11,225 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAREPRODUCCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:11,225 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAREPRODUCCION_N49` ON `CANCION_LISTAREPRODUCCION` (`REPRODUCCION_ID_EID`)
05 abr 2016 - 15:41:11,257 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 32 ms
05 abr 2016 - 15:41:11,257 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAREPRODUCCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:11,257 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAREPRODUCCION` ADD CONSTRAINT `CANCION_LISTAREPRODUCCION_FK2` FOREIGN KEY (`REPRODUCCION_ID_EID`) REFERENCES `REPRODUCCION` (`REPRODUCCION_ID`) 
05 abr 2016 - 15:41:11,334 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 77 ms
05 abr 2016 - 15:41:11,334 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAREPRODUCCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:11,334 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAREPRODUCCION` ADD CONSTRAINT `CANCION_LISTAREPRODUCCION_FK1` FOREIGN KEY (`ID_CANCION_OID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:41:11,415 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 81 ms
05 abr 2016 - 15:41:11,416 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9"
05 abr 2016 - 15:41:11,417 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9"
05 abr 2016 - 15:41:11,417 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 15:41:11,418 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 15:41:11,419 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 15:41:11,419 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 15:41:11,419 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 15:41:11,420 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 15:43:25,237 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:43:25,255 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:43:25,266 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,268 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,271 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:43:25,282 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,289 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,293 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:43:25,306 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,311 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,333 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:43:25,359 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:43:25,359 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:43:25,378 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 15:43:25,378 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:43:25,380 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 15:43:25,402 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 15:43:25,445 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:25,450 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:25,456 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:43:25,456 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:25,456 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:43:25,456 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:43:25,457 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:43:25,457 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:43:25,457 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:43:25,457 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:43:25,457 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:43:25,457 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:43:25,458 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:25,458 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:43:25,458 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:43:25,458 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:43:25,459 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:43:25,459 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:43:25,459 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:43:25,459 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:43:25,459 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:43:25,460 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:25,460 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:43:25,460 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:43:25,460 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:43:25,460 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:43:25,460 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:43:25,461 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:43:25,461 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:43:25,461 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:25,462 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:25,463 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:43:25,463 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:43:25,463 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,463 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,465 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:43:25,465 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,465 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,465 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,465 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,467 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,467 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:43:25,468 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:43:25,469 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:43:25,469 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:43:25,469 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:43:25,469 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:43:25,471 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:43:25,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:43:25,492 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 15:43:25,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:43:25,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 15:43:25,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:43:25,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:43:25,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:43:25,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:43:25,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:43:25,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:43:25,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:43:25,502 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:43:25,502 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:43:25,502 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 15:43:25,503 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 15:43:25,503 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 15:43:25,503 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:43:25,504 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 15:43:25,504 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 15:43:25,504 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,514 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:43:25,514 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,514 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 15:43:25,514 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,514 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:43:25,514 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 15:43:25,521 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 15:43:25,522 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 15:43:25,522 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 15:43:25,522 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 15:43:25,531 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 15:43:25,531 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 15:43:25,531 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 15:43:25,750 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 15:43:25,751 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:43:25,766 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:43:25,782 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:43:25,794 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,796 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,799 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:43:25,811 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,819 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,823 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:43:25,837 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,842 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,857 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 15:43:25,857 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 15:43:25,898 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:43:25,899 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 15:43:25,899 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 15:43:25,921 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:43:26,113 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 15:43:26,123 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,123 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,123 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,124 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,124 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,124 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,125 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,125 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,125 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,125 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,126 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,126 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,126 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,129 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,129 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,129 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,130 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,131 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,131 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,131 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,132 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,132 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,132 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,132 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,132 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,133 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,133 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,133 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,133 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,133 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,137 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,145 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 15:43:26,145 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 15:43:26,145 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 15:43:26,145 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 15:43:26,157 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459863806153`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,159 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459863806153`
05 abr 2016 - 15:43:26,161 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459863806153`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 15:43:26,195 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 34 ms
05 abr 2016 - 15:43:26,204 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 15:43:26,204 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459863806153`
05 abr 2016 - 15:43:26,204 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459863806153`
05 abr 2016 - 15:43:26,221 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 17 ms
05 abr 2016 - 15:43:26,222 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 15:43:26,223 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 15:43:26,223 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 15:43:26,223 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 15:43:26,223 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 15:43:26,223 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 15:43:26,224 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 15:43:26,224 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 15:43:26,224 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 15:43:26,224 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 15:43:26,224 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 15:43:26,224 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/accountsDB]
05 abr 2016 - 15:43:26,225 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/accountsDB]
05 abr 2016 - 15:43:26,225 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=accountsDB
05 abr 2016 - 15:43:26,225 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 15:43:26,225 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 15:43:26,225 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 15:43:26,226 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 15:43:26,226 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 15:43:26,226 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 15:43:26,226 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 15:43:26,226 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 15:43:26,227 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 15:43:26,227 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 15:43:26,228 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 15:43:26,230 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 15:43:26,248 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:43:26,291 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:43:26,291 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:43:26,307 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:43:26,307 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,307 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,307 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,307 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,307 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:43:26,310 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 15:43:26,310 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 15:43:26,313 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 15:43:26,314 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 15:43:26,318 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 15:43:26,318 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 15:43:26,319 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 15:43:26,319 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 15:43:26,319 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 15:43:26,319 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 15:43:26,319 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 15:43:26,319 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 15:43:26,319 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 7 ficheros (metadata/class) ...
05 abr 2016 - 15:43:26,340 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 15:43:26,340 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:43:26,341 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 15:43:26,342 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:43:26,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:26,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:43:26,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:43:26,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:43:26,344 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:43:26,344 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:43:26,344 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:43:26,344 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:43:26,344 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:43:26,344 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:43:26,377 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:26,379 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:43:26,380 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:26,380 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:43:26,380 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:43:26,380 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:43:26,380 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:43:26,380 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:43:26,381 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:43:26,381 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:43:26,382 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:26,386 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:26,392 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:26,394 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:43:26,395 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:43:26,395 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 15:43:26,396 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:43:26,396 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 15:43:26,397 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 15:43:26,397 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 15:43:26,397 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 15:43:26,397 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 15:43:26,398 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,398 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,398 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,398 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,398 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,399 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:43:26,400 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 15:43:26,400 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:43:26,400 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 15:43:26,400 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 15:43:26,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 15:43:26,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 15:43:26,401 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 15:43:26,401 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,401 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,401 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,405 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,405 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,405 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:43:26,405 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:43:26,406 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:43:26,407 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:43:26,407 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:43:26,407 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:43:26,407 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 7 ficheros (metadata/class)
05 abr 2016 - 15:43:26,411 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 15:43:26,411 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:26,411 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 15:43:26,414 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 15:43:26,414 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 15:43:26,414 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 15:43:26,415 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 15:43:26,416 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 15:43:26,416 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 15:43:26,416 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 15:43:26,416 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 15:43:26,416 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 15:43:26,417 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 15:43:26,417 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:26,417 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 15:43:26,418 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 15:43:26,418 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 15:43:26,418 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 15:43:26,419 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 15:43:26,420 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 15:43:26,420 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 15:43:26,420 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 15:43:26,420 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 15:43:26,420 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 15:43:26,426 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 15:43:26,427 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,428 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,429 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 15:43:26,430 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,430 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 15:43:26,430 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,431 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,431 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 15:43:26,431 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,431 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,431 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 15:43:26,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 15:43:26,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,436 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 15:43:26,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,443 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,444 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,444 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,447 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,447 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 15:43:26,448 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 15:43:26,448 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9" y isolacion "serializable"
05 abr 2016 - 15:43:26,450 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 15:43:26,451 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 15:43:26,501 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 50 ms
05 abr 2016 - 15:43:26,502 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 15:43:26,504 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 15:43:26,505 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 15:43:26,505 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 15:43:26,506 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 15:43:26,507 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 15:43:26,508 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 15:43:26,509 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 15:43:26,510 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 15:43:26,514 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 15:43:26,519 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 15:43:26,520 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 15:43:26,521 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 15:43:26,522 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 15:43:26,523 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 15:43:26,524 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 15:43:26,525 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 15:43:26,527 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 15:43:26,528 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 15:43:26,528 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 15:43:26,529 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 15:43:26,530 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 15:43:26,532 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 15:43:26,534 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 15:43:26,535 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 15:43:26,536 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 15:43:26,538 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 15:43:26,539 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 15:43:26,540 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 15:43:26,542 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 15:43:26,543 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 15:43:26,544 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 15:43:26,545 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 15:43:26,546 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 15:43:26,548 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 15:43:26,549 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 15:43:26,549 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9"
05 abr 2016 - 15:43:26,549 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9"
05 abr 2016 - 15:43:26,550 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 15:43:26,550 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 15:43:26,551 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 15:43:26,551 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 15:43:26,551 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 15:43:26,552 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 15:45:56,770 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:45:56,788 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:45:56,801 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:56,803 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:56,806 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:45:56,817 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:56,826 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:56,829 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:45:56,841 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:56,847 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:56,871 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:45:56,898 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:45:56,898 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:45:56,916 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 15:45:56,916 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 15:45:56,916 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 15:45:56,916 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 15:45:56,941 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 15:45:56,984 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:56,989 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:56,995 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:45:56,995 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:45:56,997 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:45:56,997 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:56,997 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:45:56,998 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:45:56,998 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:45:56,998 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:45:56,998 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:45:56,998 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:45:56,998 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:45:56,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:45:56,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:56,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:45:56,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:45:56,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:45:57,000 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:45:57,000 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:45:57,000 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:45:57,000 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:45:57,000 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:57,001 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:57,002 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:45:57,002 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:45:57,002 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,002 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,006 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:45:57,006 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,007 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,007 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,008 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,008 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:45:57,009 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 15:45:57,020 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:45:57,028 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:45:57,031 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 15:45:57,031 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 15:45:57,031 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 15:45:57,031 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 15:45:57,031 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 15:45:57,031 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 15:45:57,033 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 15:45:57,033 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 15:45:57,033 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:45:57,035 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 15:45:57,036 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,036 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,036 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,036 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,036 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:45:57,037 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:45:57,037 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:45:57,037 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:45:57,037 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:45:57,038 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:45:57,038 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:45:57,038 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:45:57,038 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:45:57,038 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:45:57,039 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:45:57,039 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:45:57,039 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:45:57,039 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:45:57,040 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:45:57,040 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:45:57,040 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,040 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:45:57,040 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,040 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:45:57,042 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:45:57,042 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:45:57,042 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:45:57,042 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:45:57,043 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 15:45:57,043 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 15:45:57,043 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 15:45:57,043 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:45:57,044 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 15:45:57,044 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 15:45:57,044 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 15:45:57,045 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 15:45:57,045 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 15:45:57,045 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:45:57,045 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:45:57,045 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,045 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:45:57,054 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 15:45:57,055 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 15:45:57,055 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 15:45:57,055 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:45:57,055 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:45:57,055 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,055 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 15:45:57,062 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 15:45:57,062 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 15:45:57,062 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 15:45:57,062 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 15:45:57,071 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 15:45:57,071 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 15:45:57,071 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 15:45:57,294 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 15:45:57,294 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:45:57,310 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:45:57,325 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:45:57,336 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:57,338 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:57,341 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:45:57,352 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:57,360 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:57,363 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:45:57,377 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:57,383 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:57,396 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 15:45:57,396 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 15:45:57,433 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:45:57,433 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 15:45:57,433 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 15:45:57,455 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:45:57,644 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 15:45:57,654 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,654 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,655 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,655 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,655 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,656 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,656 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,656 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,656 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,657 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,657 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,658 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,658 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,658 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,658 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,658 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,658 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,660 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,660 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,660 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,660 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,660 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,661 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,662 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,662 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,662 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,662 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,662 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,663 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,663 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,663 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,663 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,663 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,664 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,664 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,664 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,664 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,664 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,667 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,667 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,667 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,667 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,667 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,667 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,675 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 15:45:57,675 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 15:45:57,676 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 15:45:57,676 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 15:45:57,686 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459863957683`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,688 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459863957683`
05 abr 2016 - 15:45:57,690 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459863957683`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 15:45:57,724 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 34 ms
05 abr 2016 - 15:45:57,732 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 15:45:57,732 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459863957683`
05 abr 2016 - 15:45:57,732 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459863957683`
05 abr 2016 - 15:45:57,743 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 11 ms
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 15:45:57,746 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 15:45:57,747 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 15:45:57,752 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:45:57,774 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:45:57,774 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:45:57,788 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:45:57,788 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 15:45:57,793 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 15:45:57,794 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 15:45:57,798 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 15:45:57,798 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 15:45:57,800 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 7 ficheros (metadata/class) ...
05 abr 2016 - 15:45:57,821 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 15:45:57,821 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:45:57,821 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 15:45:57,823 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:45:57,823 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:57,823 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:45:57,824 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:45:57,824 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:45:57,824 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:45:57,824 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:45:57,825 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:45:57,825 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:45:57,825 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:45:57,825 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:45:57,857 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:57,859 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:45:57,861 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:57,866 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:57,871 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:57,872 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:45:57,873 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:45:57,873 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 15:45:57,873 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:45:57,874 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 15:45:57,874 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 15:45:57,874 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 15:45:57,874 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 15:45:57,874 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 15:45:57,875 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,875 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,875 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,875 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,875 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,876 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:45:57,876 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,878 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:45:57,878 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 15:45:57,878 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,880 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:45:57,880 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 15:45:57,880 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:45:57,880 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 15:45:57,880 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,882 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:45:57,882 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,883 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,884 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,884 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,884 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:45:57,884 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 7 ficheros (metadata/class)
05 abr 2016 - 15:45:57,887 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 15:45:57,887 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:57,887 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 15:45:57,890 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 15:45:57,890 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 15:45:57,890 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 15:45:57,891 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 15:45:57,891 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 15:45:57,894 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 15:45:57,894 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 15:45:57,894 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 15:45:57,895 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 15:45:57,895 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 15:45:57,896 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 15:45:57,896 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 15:45:57,896 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 15:45:57,896 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 15:45:57,901 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 15:45:57,902 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,903 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,904 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 15:45:57,904 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,905 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 15:45:57,905 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,905 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,905 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 15:45:57,905 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,906 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,906 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 15:45:57,908 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 15:45:57,908 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,908 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,912 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 15:45:57,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 15:45:57,918 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,918 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,921 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,921 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,924 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 15:45:57,924 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,924 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,924 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 15:45:57,926 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 15:45:57,926 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9" y isolacion "serializable"
05 abr 2016 - 15:45:57,927 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned no table
05 abr 2016 - 15:45:57,927 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `REPRODUCCION`
05 abr 2016 - 15:45:57,928 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `REPRODUCCION`
(
    `REPRODUCCION_ID` BIGINT NOT NULL AUTO_INCREMENT,
    `CANCION_ID_CANCION_OID` INTEGER NULL,
    `FECHA_REP` INTEGER NOT NULL,
    `HORA_REP` INTEGER NOT NULL,
    `PRECIO` INTEGER NOT NULL,
    `USUARIO_NOMBREUSU_OID` VARCHAR(255) BINARY NULL,
    CONSTRAINT `REPRODUCCION_PK` PRIMARY KEY (`REPRODUCCION_ID`)
) ENGINE=INNODB
05 abr 2016 - 15:45:57,956 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:45:57,960 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned no table
05 abr 2016 - 15:45:57,960 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO`
05 abr 2016 - 15:45:57,960 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO`
(
    `NOMBREUSU` VARCHAR(255) BINARY NOT NULL,
    `CONTRASENYA_PAYPAL` VARCHAR(255) BINARY NULL,
    `IMPORTEMENSUAL` INTEGER NOT NULL,
    `NUMTARJCRED` INTEGER NOT NULL,
    `USUARIO_PAYPAL` VARCHAR(255) BINARY NULL,
    `VENTAJOSO` BIT NOT NULL,
    CONSTRAINT `USUARIO_PK` PRIMARY KEY (`NOMBREUSU`)
) ENGINE=INNODB
05 abr 2016 - 15:45:57,994 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 34 ms
05 abr 2016 - 15:45:57,998 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned no table
05 abr 2016 - 15:45:57,998 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `CANCION`
05 abr 2016 - 15:45:57,999 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `CANCION`
(
    `ID_CANCION` INTEGER NOT NULL,
    `ALBUM` VARCHAR(255) BINARY NULL,
    `ARTISTA_ID_ARTISTA_OID` INTEGER NULL,
    `PRECIO` INTEGER NOT NULL,
    `TITULO` VARCHAR(255) BINARY NULL,
    `LISTACANCIONES_ID_ARTISTA_OWN` INTEGER NULL,
    `LISTACANCIONES_INTEGER_IDX` INTEGER NULL,
    CONSTRAINT `CANCION_PK` PRIMARY KEY (`ID_CANCION`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,032 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 33 ms
05 abr 2016 - 15:45:58,037 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned no table
05 abr 2016 - 15:45:58,037 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `ARTISTA`
05 abr 2016 - 15:45:58,037 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `ARTISTA`
(
    `ID_ARTISTA` INTEGER NOT NULL,
    `NOMARTISTA` VARCHAR(255) BINARY NULL,
    CONSTRAINT `ARTISTA_PK` PRIMARY KEY (`ID_ARTISTA`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,069 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 32 ms
05 abr 2016 - 15:45:58,073 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned no table
05 abr 2016 - 15:45:58,074 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 15:45:58,074 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO_HISTORIALREP`
(
    `NOMBREUSU_OID` VARCHAR(255) BINARY NOT NULL,
    `REPRODUCCION_ID_EID` BIGINT NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `USUARIO_HISTORIALREP_PK` PRIMARY KEY (`NOMBREUSU_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,102 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:45:58,106 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned no table
05 abr 2016 - 15:45:58,106 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 15:45:58,107 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO_LISTAREPRODUCCION`
(
    `NOMBREUSU_OID` VARCHAR(255) BINARY NOT NULL,
    `ID_CANCION_EID` INTEGER NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `USUARIO_LISTAREPRODUCCION_PK` PRIMARY KEY (`NOMBREUSU_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,137 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 30 ms
05 abr 2016 - 15:45:58,142 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned no table
05 abr 2016 - 15:45:58,142 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 15:45:58,142 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO_LISTAAMIGOS`
(
    `NOMBREUSU_OID` VARCHAR(255) BINARY NOT NULL,
    `NOMBREUSU_EID` VARCHAR(255) BINARY NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `USUARIO_LISTAAMIGOS_PK` PRIMARY KEY (`NOMBREUSU_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,174 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 32 ms
05 abr 2016 - 15:45:58,179 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned no table
05 abr 2016 - 15:45:58,179 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 15:45:58,180 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `CANCION_LISTAUSUARIO`
(
    `ID_CANCION_OID` INTEGER NOT NULL,
    `NOMBREUSU_EID` VARCHAR(255) BINARY NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `CANCION_LISTAUSUARIO_PK` PRIMARY KEY (`ID_CANCION_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,227 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 47 ms
05 abr 2016 - 15:45:58,234 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned no table
05 abr 2016 - 15:45:58,234 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 15:45:58,234 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `CANCION_LISTAREPRODUCCION`
(
    `ID_CANCION_OID` INTEGER NOT NULL,
    `REPRODUCCION_ID_EID` BIGINT NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `CANCION_LISTAREPRODUCCION_PK` PRIMARY KEY (`ID_CANCION_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,269 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 34 ms
05 abr 2016 - 15:45:58,279 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "REPRODUCCION_N50" en catalogo "" equema ""
05 abr 2016 - 15:45:58,279 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `REPRODUCCION_N50` ON `REPRODUCCION` (`CANCION_ID_CANCION_OID`)
05 abr 2016 - 15:45:58,329 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 50 ms
05 abr 2016 - 15:45:58,330 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "REPRODUCCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:58,331 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `REPRODUCCION_N49` ON `REPRODUCCION` (`USUARIO_NOMBREUSU_OID`)
05 abr 2016 - 15:45:58,364 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 33 ms
05 abr 2016 - 15:45:58,367 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "REPRODUCCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:45:58,368 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `REPRODUCCION` ADD CONSTRAINT `REPRODUCCION_FK1` FOREIGN KEY (`USUARIO_NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:45:58,469 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 101 ms
05 abr 2016 - 15:45:58,469 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "REPRODUCCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:58,470 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `REPRODUCCION` ADD CONSTRAINT `REPRODUCCION_FK2` FOREIGN KEY (`CANCION_ID_CANCION_OID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:45:58,555 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 85 ms
05 abr 2016 - 15:45:58,557 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:58,557 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_N49` ON `CANCION` (`ARTISTA_ID_ARTISTA_OID`)
05 abr 2016 - 15:45:58,590 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 33 ms
05 abr 2016 - 15:45:58,591 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:45:58,591 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION` ADD CONSTRAINT `CANCION_FK1` FOREIGN KEY (`ARTISTA_ID_ARTISTA_OID`) REFERENCES `ARTISTA` (`ID_ARTISTA`) 
05 abr 2016 - 15:45:58,675 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 84 ms
05 abr 2016 - 15:45:58,675 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:58,675 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION` ADD CONSTRAINT `CANCION_FK2` FOREIGN KEY (`LISTACANCIONES_ID_ARTISTA_OWN`) REFERENCES `ARTISTA` (`ID_ARTISTA`) 
05 abr 2016 - 15:45:58,766 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 91 ms
05 abr 2016 - 15:45:58,767 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_HISTORIALREP_N50" en catalogo "" equema ""
05 abr 2016 - 15:45:58,767 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_HISTORIALREP_N50` ON `USUARIO_HISTORIALREP` (`REPRODUCCION_ID_EID`)
05 abr 2016 - 15:45:58,798 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 30 ms
05 abr 2016 - 15:45:58,798 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_HISTORIALREP_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:58,798 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_HISTORIALREP_N49` ON `USUARIO_HISTORIALREP` (`NOMBREUSU_OID`)
05 abr 2016 - 15:45:58,826 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:45:58,827 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_HISTORIALREP_FK1" en catalogo "" equema ""
05 abr 2016 - 15:45:58,827 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_HISTORIALREP` ADD CONSTRAINT `USUARIO_HISTORIALREP_FK1` FOREIGN KEY (`NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:45:58,901 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 74 ms
05 abr 2016 - 15:45:58,901 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_HISTORIALREP_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:58,901 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_HISTORIALREP` ADD CONSTRAINT `USUARIO_HISTORIALREP_FK2` FOREIGN KEY (`REPRODUCCION_ID_EID`) REFERENCES `REPRODUCCION` (`REPRODUCCION_ID`) 
05 abr 2016 - 15:45:58,970 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 69 ms
05 abr 2016 - 15:45:58,971 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAREPRODUCCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:58,971 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAREPRODUCCION_N49` ON `USUARIO_LISTAREPRODUCCION` (`ID_CANCION_EID`)
05 abr 2016 - 15:45:58,998 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 27 ms
05 abr 2016 - 15:45:58,999 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAREPRODUCCION_N50" en catalogo "" equema ""
05 abr 2016 - 15:45:58,999 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAREPRODUCCION_N50` ON `USUARIO_LISTAREPRODUCCION` (`NOMBREUSU_OID`)
05 abr 2016 - 15:45:59,053 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 54 ms
05 abr 2016 - 15:45:59,054 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAREPRODUCCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:45:59,054 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAREPRODUCCION` ADD CONSTRAINT `USUARIO_LISTAREPRODUCCION_FK1` FOREIGN KEY (`NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:45:59,313 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 259 ms
05 abr 2016 - 15:45:59,315 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAREPRODUCCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:59,315 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAREPRODUCCION` ADD CONSTRAINT `USUARIO_LISTAREPRODUCCION_FK2` FOREIGN KEY (`ID_CANCION_EID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:45:59,404 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 89 ms
05 abr 2016 - 15:45:59,405 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAAMIGOS_N50" en catalogo "" equema ""
05 abr 2016 - 15:45:59,405 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAAMIGOS_N50` ON `USUARIO_LISTAAMIGOS` (`NOMBREUSU_EID`)
05 abr 2016 - 15:45:59,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 32 ms
05 abr 2016 - 15:45:59,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAAMIGOS_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:59,438 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAAMIGOS_N49` ON `USUARIO_LISTAAMIGOS` (`NOMBREUSU_OID`)
05 abr 2016 - 15:45:59,466 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:45:59,467 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAAMIGOS_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:59,467 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAAMIGOS` ADD CONSTRAINT `USUARIO_LISTAAMIGOS_FK2` FOREIGN KEY (`NOMBREUSU_EID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:45:59,558 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 91 ms
05 abr 2016 - 15:45:59,558 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAAMIGOS_FK1" en catalogo "" equema ""
05 abr 2016 - 15:45:59,559 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAAMIGOS` ADD CONSTRAINT `USUARIO_LISTAAMIGOS_FK1` FOREIGN KEY (`NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:45:59,653 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 94 ms
05 abr 2016 - 15:45:59,654 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAUSUARIO_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:59,654 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAUSUARIO_N49` ON `CANCION_LISTAUSUARIO` (`ID_CANCION_OID`)
05 abr 2016 - 15:45:59,694 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 40 ms
05 abr 2016 - 15:45:59,696 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAUSUARIO_N50" en catalogo "" equema ""
05 abr 2016 - 15:45:59,696 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAUSUARIO_N50` ON `CANCION_LISTAUSUARIO` (`NOMBREUSU_EID`)
05 abr 2016 - 15:45:59,727 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 31 ms
05 abr 2016 - 15:45:59,728 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAUSUARIO_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:59,728 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAUSUARIO` ADD CONSTRAINT `CANCION_LISTAUSUARIO_FK2` FOREIGN KEY (`NOMBREUSU_EID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:45:59,814 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 86 ms
05 abr 2016 - 15:45:59,815 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAUSUARIO_FK1" en catalogo "" equema ""
05 abr 2016 - 15:45:59,815 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAUSUARIO` ADD CONSTRAINT `CANCION_LISTAUSUARIO_FK1` FOREIGN KEY (`ID_CANCION_OID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:45:59,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 102 ms
05 abr 2016 - 15:45:59,918 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAREPRODUCCION_N50" en catalogo "" equema ""
05 abr 2016 - 15:45:59,918 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAREPRODUCCION_N50` ON `CANCION_LISTAREPRODUCCION` (`ID_CANCION_OID`)
05 abr 2016 - 15:45:59,948 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 30 ms
05 abr 2016 - 15:45:59,948 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAREPRODUCCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:59,948 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAREPRODUCCION_N49` ON `CANCION_LISTAREPRODUCCION` (`REPRODUCCION_ID_EID`)
05 abr 2016 - 15:45:59,976 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:45:59,977 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAREPRODUCCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:59,977 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAREPRODUCCION` ADD CONSTRAINT `CANCION_LISTAREPRODUCCION_FK2` FOREIGN KEY (`REPRODUCCION_ID_EID`) REFERENCES `REPRODUCCION` (`REPRODUCCION_ID`) 
05 abr 2016 - 15:46:00,264 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 287 ms
05 abr 2016 - 15:46:00,264 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAREPRODUCCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:46:00,264 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAREPRODUCCION` ADD CONSTRAINT `CANCION_LISTAREPRODUCCION_FK1` FOREIGN KEY (`ID_CANCION_OID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:46:00,340 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 76 ms
05 abr 2016 - 15:46:00,340 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9"
05 abr 2016 - 15:46:00,341 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9"
05 abr 2016 - 15:46:00,341 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 15:46:00,342 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 15:46:00,343 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 15:46:00,343 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 15:46:00,343 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 15:46:00,343 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 15:57:21,148 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:57:21,164 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:57:21,174 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:57:21,176 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:57:21,178 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:57:21,187 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:57:21,193 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:57:21,196 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:57:21,207 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:57:21,214 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:57:21,236 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:57:21,262 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:57:21,262 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:57:21,276 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:57:21,279 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:57:21,279 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:57:21,280 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 15:57:21,281 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 15:57:21,281 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 15:57:21,281 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:57:21,281 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:57:21,281 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:57:21,281 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:57:21,281 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:57:21,282 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:57:21,282 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:57:21,282 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:57:21,282 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 15:57:21,315 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 15:57:21,354 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:57:21,359 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:57:21,364 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:57:21,365 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:57:21,365 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:57:21,365 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:57:21,365 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:57:21,366 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:57:21,366 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:57:21,366 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:57:21,366 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:57:21,366 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:57:21,366 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:57:21,367 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:57:21,367 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:57:21,367 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:57:21,367 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:57:21,367 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:57:21,367 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:57:21,368 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:57:21,368 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:57:21,368 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:57:21,368 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:57:21,370 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:57:21,370 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:57:21,371 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:57:21,371 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,371 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:57:21,375 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:57:21,376 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:57:21,376 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:57:21,376 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:57:21,377 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:57:21,379 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:57:21,398 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:57:21,403 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:57:21,403 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 15:57:21,404 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,404 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,404 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,404 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,404 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:57:21,404 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:57:21,405 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:57:21,405 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:57:21,405 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:57:21,405 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:57:21,405 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:57:21,405 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:57:21,409 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:57:21,409 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 15:57:21,409 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 15:57:21,409 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 15:57:21,409 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:57:21,410 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 15:57:21,410 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 15:57:21,410 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\axi_e\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 15:57:21,411 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 15:57:21,411 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,414 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,414 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:57:21,414 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:57:21,414 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:57:21,414 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:57:21,414 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:57:21,420 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\axi_e\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 15:57:21,421 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 15:57:21,421 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 15:57:21,421 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 15:57:21,427 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\axi_e\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 15:57:21,428 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 15:57:21,428 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,436 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:57:21,436 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,436 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 15:57:21,436 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\axi_e\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 15:57:21,437 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 15:57:21,437 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 16:50:14,928 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:50:14,947 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 16:50:14,959 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:14,961 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:14,964 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 16:50:14,974 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:14,982 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:14,986 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 16:50:15,000 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:15,005 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:15,030 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 16:50:15,056 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 16:50:15,056 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 16:50:15,074 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 16:50:15,074 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,074 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,074 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,075 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,075 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,075 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,075 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,075 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,075 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 16:50:15,075 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:50:15,075 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 16:50:15,075 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 16:50:15,075 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 16:50:15,075 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 16:50:15,075 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 16:50:15,076 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 16:50:15,076 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 16:50:15,076 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:50:15,076 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:50:15,076 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 16:50:15,076 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 16:50:15,076 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:50:15,076 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:50:15,076 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:50:15,076 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 16:50:15,076 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 16:50:15,077 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 16:50:15,077 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 16:50:15,077 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 16:50:15,077 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 16:50:15,077 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 16:50:15,079 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 16:50:15,079 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 16:50:15,079 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 16:50:15,079 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 16:50:15,079 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 16:50:15,079 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 16:50:15,079 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 16:50:15,080 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 16:50:15,080 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 16:50:15,080 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 16:50:15,080 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 16:50:15,080 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 16:50:15,110 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Main, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 16:50:15,156 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:50:15,161 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:50:15,168 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 16:50:15,168 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:15,168 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 16:50:15,169 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 16:50:15,169 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 16:50:15,169 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 16:50:15,169 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 16:50:15,169 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 16:50:15,169 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 16:50:15,170 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 16:50:15,170 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:15,170 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 16:50:15,171 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 16:50:15,171 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 16:50:15,171 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 16:50:15,171 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 16:50:15,171 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 16:50:15,171 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 16:50:15,172 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 16:50:15,172 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:15,172 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 16:50:15,172 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 16:50:15,173 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 16:50:15,173 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 16:50:15,173 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 16:50:15,173 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 16:50:15,173 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 16:50:15,174 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 16:50:15,174 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:15,174 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 16:50:15,174 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 16:50:15,174 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 16:50:15,174 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 16:50:15,175 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 16:50:15,175 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 16:50:15,175 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 16:50:15,175 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:50:15,175 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:50:15,176 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 16:50:15,176 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 16:50:15,177 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,177 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,178 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 16:50:15,178 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,178 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,178 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,178 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,179 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 16:50:15,179 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,179 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,179 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,179 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,179 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,180 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 16:50:15,180 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,180 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,180 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,180 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,180 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:15,180 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 16:50:15,181 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 16:50:15,182 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 16:50:15,182 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 16:50:15,182 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 16:50:15,182 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 16:50:15,184 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 16:50:15,196 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 16:50:15,196 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 16:50:15,197 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 16:50:15,198 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 16:50:15,199 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:50:15,199 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:50:15,199 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:50:15,199 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 16:50:15,199 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 16:50:15,199 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 16:50:15,205 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 16:50:15,207 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 16:50:15,208 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 16:50:15,209 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 16:50:15,209 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 16:50:15,209 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 16:50:15,210 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 16:50:15,210 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 16:50:15,210 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:50:15,211 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:50:15,211 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 16:50:15,211 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 16:50:15,211 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 16:50:15,211 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 16:50:15,211 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 16:50:15,211 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 16:50:15,212 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 16:50:15,212 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 16:50:15,212 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 16:50:15,212 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 16:50:15,212 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 16:50:15,212 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 16:50:15,213 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 16:50:15,213 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 16:50:15,213 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 16:50:15,213 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 16:50:15,213 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 16:50:15,213 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:50:15,213 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 16:50:15,214 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:50:15,214 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 16:50:15,214 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 16:50:15,214 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 16:50:15,214 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 16:50:15,215 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 16:50:15,215 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 16:50:15,215 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 16:50:15,215 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 16:50:15,215 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 16:50:15,215 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 16:50:15,215 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 16:50:15,216 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 16:50:15,216 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 16:50:15,216 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 16:50:15,216 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 16:50:15,217 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 16:50:15,217 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:50:15,217 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 16:50:15,217 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 16:50:15,218 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 16:50:15,218 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 16:50:15,218 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 16:50:15,219 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 16:50:15,220 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 16:50:15,221 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 16:50:15,222 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 16:50:15,223 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 16:50:15,224 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 16:50:15,225 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 16:50:15,225 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 16:50:15,225 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:50:15,225 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 16:50:15,225 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:50:15,225 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 16:50:15,225 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 16:50:15,225 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 16:50:15,225 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 16:50:15,226 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 16:50:15,226 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 16:50:15,226 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 16:50:15,226 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 16:50:15,226 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 16:50:15,226 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 16:50:15,226 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 16:50:15,226 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 16:50:15,226 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 16:50:15,226 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 16:50:15,226 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 16:50:15,226 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 16:50:15,227 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 16:50:15,227 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 16:50:15,227 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 16:50:15,227 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 16:50:15,227 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:50:15,227 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 16:50:15,227 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:50:15,227 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 16:50:15,227 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 16:50:15,227 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 16:50:15,227 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 16:50:15,228 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 16:50:15,228 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 16:50:15,228 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 16:50:15,228 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 16:50:15,229 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 16:50:15,230 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 16:50:15,231 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 16:50:15,232 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 16:50:15,233 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 16:50:15,234 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 16:50:15,235 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 16:50:15,235 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 16:50:15,235 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 16:50:15,235 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 16:50:15,235 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 16:50:15,236 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 16:50:15,236 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 16:50:15,236 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 16:50:15,236 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 16:50:15,236 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:50:15,236 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 16:50:15,236 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 16:50:15,236 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 16:50:15,236 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 16:50:15,236 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 16:50:15,236 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 16:50:15,236 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:50:15,237 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 16:50:15,238 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 16:50:15,239 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 16:50:15,240 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 16:50:15,241 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 16:50:15,242 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 16:50:15,242 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 16:50:15,242 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 16:50:15,242 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 16:50:15,242 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:50:15,242 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 16:50:15,242 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:50:15,242 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 16:50:15,242 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 16:50:15,242 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 16:50:15,242 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 16:50:15,243 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:50:15,244 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 16:50:15,244 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:50:15,244 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 16:50:15,244 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 16:50:15,244 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 16:50:15,244 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 16:50:15,244 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 16:50:15,244 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 16:50:15,244 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 16:50:15,244 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 16:50:15,244 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 16:50:15,245 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 16:50:15,245 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 16:50:15,464 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 16:50:15,465 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 16:50:15,466 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 16:50:15,466 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 16:50:15,466 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 16:50:15,466 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 16:50:15,466 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 16:50:15,466 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 16:50:15,466 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 16:50:15,466 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 16:50:15,480 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:50:15,495 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 16:50:15,506 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:15,508 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:15,511 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 16:50:15,520 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:15,529 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:15,532 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 16:50:15,546 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:15,552 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:15,566 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 16:50:15,566 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 16:50:15,602 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:50:15,602 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 16:50:15,602 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 16:50:15,625 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:50:15,820 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 16:50:15,830 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,831 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,831 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,831 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,832 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,832 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,832 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,832 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,833 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,833 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,833 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,834 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,834 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,834 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,834 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,834 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,835 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,835 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,835 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,835 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,835 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,835 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,835 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,835 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,835 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,835 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,835 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,836 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,836 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,836 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,836 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,836 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,836 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,837 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,838 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,838 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,838 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,839 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,839 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,839 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,839 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,839 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,839 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,840 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,840 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,840 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,840 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,840 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,840 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,841 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,841 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,841 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,841 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,841 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,841 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,841 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,841 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,841 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,841 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,841 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,841 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,842 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,842 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,842 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,842 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,842 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,842 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,842 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:50:15,843 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,843 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,843 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,843 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:50:15,851 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 16:50:15,851 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 16:50:15,851 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 16:50:15,852 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 16:50:15,862 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459867815859`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 16:50:15,864 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459867815859`
05 abr 2016 - 16:50:15,866 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459867815859`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 16:50:15,901 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 35 ms
05 abr 2016 - 16:50:15,910 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 16:50:15,910 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459867815859`
05 abr 2016 - 16:50:15,910 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459867815859`
05 abr 2016 - 16:50:15,923 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 13 ms
05 abr 2016 - 16:50:15,924 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 16:50:15,924 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 16:50:15,924 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 16:50:15,924 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 16:50:15,924 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 16:50:15,924 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 16:50:15,924 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 16:50:15,924 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:50:15,924 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 16:50:15,924 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 16:50:15,925 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:50:15,926 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:50:15,926 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:50:15,927 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 16:50:15,932 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 16:50:15,955 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 16:50:15,955 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 16:50:15,967 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 16:50:15,967 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,967 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,967 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,967 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,967 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,967 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,967 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,967 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:15,967 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 16:50:15,967 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:50:15,967 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 16:50:15,968 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 16:50:15,969 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 16:50:15,972 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 16:50:15,973 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 16:50:15,976 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 16:50:15,976 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 16:50:15,976 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 16:50:15,976 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:50:15,976 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 16:50:15,977 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 16:50:15,977 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 16:50:15,977 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 16:50:15,977 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 16:50:15,977 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 16:50:15,977 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 16:50:15,977 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 16:50:15,977 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 16:50:15,977 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 16:50:15,977 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Main.class
05 abr 2016 - 16:50:15,977 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 16:50:15,977 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 16:50:15,977 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 16:50:15,977 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 16:50:15,977 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 16:50:15,977 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 8 ficheros (metadata/class) ...
05 abr 2016 - 16:50:15,999 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 16:50:16,000 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 16:50:16,000 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Main, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 16:50:16,002 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 16:50:16,003 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:16,003 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 16:50:16,003 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 16:50:16,003 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 16:50:16,004 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 16:50:16,004 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 16:50:16,004 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 16:50:16,004 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 16:50:16,004 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 16:50:16,004 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:16,005 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 16:50:16,005 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 16:50:16,005 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 16:50:16,005 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 16:50:16,005 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 16:50:16,005 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 16:50:16,005 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 16:50:16,037 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:50:16,040 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 16:50:16,040 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:16,040 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 16:50:16,040 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 16:50:16,040 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 16:50:16,040 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 16:50:16,041 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 16:50:16,041 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 16:50:16,041 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 16:50:16,041 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 16:50:16,041 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:16,042 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 16:50:16,042 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 16:50:16,042 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 16:50:16,042 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 16:50:16,042 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 16:50:16,042 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 16:50:16,042 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 16:50:16,043 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:50:16,048 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:50:16,052 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:50:16,053 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 16:50:16,054 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 16:50:16,054 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:50:16,054 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:50:16,055 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 16:50:16,055 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 16:50:16,055 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 16:50:16,055 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 16:50:16,055 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 16:50:16,056 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,056 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,056 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,056 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,056 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,057 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 16:50:16,057 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 16:50:16,058 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:50:16,058 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 16:50:16,058 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 16:50:16,058 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 16:50:16,058 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 16:50:16,058 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 16:50:16,058 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,058 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,059 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 16:50:16,059 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:50:16,059 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:50:16,059 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 16:50:16,059 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 16:50:16,060 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 16:50:16,060 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 16:50:16,060 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 16:50:16,060 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,060 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,060 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,060 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,060 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 16:50:16,061 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 16:50:16,061 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:50:16,061 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 16:50:16,061 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 16:50:16,061 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 16:50:16,061 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 16:50:16,061 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 16:50:16,062 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,062 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,062 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,062 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,062 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:16,062 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 16:50:16,064 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 16:50:16,064 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 16:50:16,065 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 16:50:16,065 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 16:50:16,065 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 16:50:16,065 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 8 ficheros (metadata/class)
05 abr 2016 - 16:50:16,068 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 16:50:16,068 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:16,068 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 16:50:16,071 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 16:50:16,073 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 16:50:16,073 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:50:16,074 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 16:50:16,074 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:50:16,074 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:50:16,075 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 16:50:16,075 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 16:50:16,075 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 16:50:16,075 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 16:50:16,075 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:16,075 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 16:50:16,076 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 16:50:16,077 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 16:50:16,077 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:50:16,078 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 16:50:16,078 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:50:16,078 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:50:16,079 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 16:50:16,079 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 16:50:16,079 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 16:50:16,084 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 16:50:16,085 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,086 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:16,087 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:50:16,087 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,088 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:50:16,088 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,088 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,088 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 16:50:16,088 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,088 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,088 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 16:50:16,089 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,089 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,089 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,089 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,090 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,090 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,090 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,090 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,090 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,090 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:16,090 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 16:50:16,090 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 16:50:16,090 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,090 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:16,094 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 16:50:16,094 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:50:16,094 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,094 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,094 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 16:50:16,094 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:50:16,095 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 16:50:16,095 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:50:16,095 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,095 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,095 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,095 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:16,095 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,095 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 16:50:16,095 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 16:50:16,095 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 16:50:16,096 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,096 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:16,096 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,096 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,096 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 16:50:16,096 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:50:16,096 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 16:50:16,096 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:50:16,096 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,096 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,096 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,096 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:16,097 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 16:50:16,097 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 16:50:16,097 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:50:16,097 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,097 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,097 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,097 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:16,097 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 16:50:16,099 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,099 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:16,099 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,100 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:16,100 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,100 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,100 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 16:50:16,100 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,100 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,100 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,100 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:50:16,100 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,102 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,102 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:50:16,103 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,103 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,103 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,103 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:16,103 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,103 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,103 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 16:50:16,103 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,103 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:16,103 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,104 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:50:16,104 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,104 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,104 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 16:50:16,104 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,104 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:16,104 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,104 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,104 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:50:16,104 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:16,104 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:50:16,107 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 16:50:16,107 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c" y isolacion "serializable"
05 abr 2016 - 16:50:16,108 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:50:16,110 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 16:50:16,150 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 40 ms
05 abr 2016 - 16:50:16,150 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 16:50:16,151 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 16:50:16,152 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 16:50:16,153 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 16:50:16,154 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 16:50:16,155 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:50:16,156 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 16:50:16,156 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 16:50:16,157 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:50:16,161 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 16:50:16,165 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 16:50:16,167 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 16:50:16,168 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 16:50:16,169 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 16:50:16,170 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 16:50:16,171 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 16:50:16,171 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 16:50:16,173 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 16:50:16,173 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 16:50:16,174 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 16:50:16,175 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 16:50:16,176 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:50:16,178 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:50:16,179 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:50:16,181 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:50:16,182 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:50:16,184 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:50:16,185 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:50:16,186 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:50:16,188 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:50:16,189 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:50:16,190 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:50:16,191 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:50:16,192 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:50:16,193 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:50:16,194 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:50:16,195 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 16:50:16,195 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 16:50:16,195 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:50:16,195 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:50:16,196 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 16:50:16,196 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 16:50:16,197 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 16:50:16,197 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 16:50:21,093 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:50:21,113 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 16:50:21,124 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:21,126 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:21,129 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 16:50:21,139 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:21,147 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:21,150 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 16:50:21,162 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:21,168 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:50:21,179 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 16:50:21,188 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 16:50:21,215 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 16:50:21,216 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 16:50:21,233 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 16:50:21,233 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:21,233 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:21,233 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:21,233 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:21,233 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:21,233 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Character,java.lang.Integer
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.String,java.lang.Double
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.nio.ByteBuffer,java.lang.String,java.lang.Long
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 16:50:21,234 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 16:50:21,235 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 16:50:21,235 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 16:50:21,235 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 16:50:21,235 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 16:50:21,235 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.lang.String,java.sql.Timestamp,[Ljava.lang.Object;,java.util.Date
05 abr 2016 - 16:50:21,235 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 16:50:21,235 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
05 abr 2016 - 16:50:21,235 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 16:50:21,235 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 16:50:21,235 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 16:50:21,235 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 16:50:21,235 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 16:50:21,236 (main) DEBUG [DataNucleus.MetaData] - Listener found initialisation for persistable class main.Usuario
05 abr 2016 - 16:50:21,237 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /META-INF/package.jdo
05 abr 2016 - 16:50:21,237 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:21,237 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /package.jdo
05 abr 2016 - 16:50:21,238 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/package.jdo
05 abr 2016 - 16:50:21,238 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main.jdo
05 abr 2016 - 16:50:21,238 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/Usuario.jdo
05 abr 2016 - 16:50:21,238 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Usuario"
05 abr 2016 - 16:50:21,268 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:50:21,279 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 16:50:21,279 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 16:50:21,279 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:50:21,280 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 16:50:21,280 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 16:50:21,280 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 16:50:21,280 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 16:50:21,281 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 16:50:21,281 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,281 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,281 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,281 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,281 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,283 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /META-INF/package.jdo
05 abr 2016 - 16:50:21,283 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:21,283 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /package.jdo
05 abr 2016 - 16:50:21,284 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/package.jdo
05 abr 2016 - 16:50:21,284 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main.jdo
05 abr 2016 - 16:50:21,284 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/Reproduccion.jdo
05 abr 2016 - 16:50:21,284 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Reproduccion"
05 abr 2016 - 16:50:21,284 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:50:21,285 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 16:50:21,285 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:50:21,286 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:50:21,286 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 16:50:21,286 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 16:50:21,286 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 16:50:21,287 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 16:50:21,287 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 16:50:21,287 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,287 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,287 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,287 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,287 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,288 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /META-INF/package.jdo
05 abr 2016 - 16:50:21,288 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:21,288 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /package.jdo
05 abr 2016 - 16:50:21,289 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/package.jdo
05 abr 2016 - 16:50:21,289 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main.jdo
05 abr 2016 - 16:50:21,289 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/Cancion.jdo
05 abr 2016 - 16:50:21,289 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Cancion"
05 abr 2016 - 16:50:21,290 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:50:21,291 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 16:50:21,292 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:50:21,292 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:50:21,292 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 16:50:21,293 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 16:50:21,293 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 16:50:21,293 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 16:50:21,293 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 16:50:21,293 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,293 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,293 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,293 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,294 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 16:50:21,296 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 16:50:21,324 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:50:21,324 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 16:50:21,324 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 16:50:21,342 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:50:21,525 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 16:50:21,535 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,535 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,535 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,536 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,536 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,536 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,536 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,536 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,537 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,537 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,538 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,538 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,538 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,538 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,538 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,538 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,539 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,539 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,539 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,539 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,539 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,539 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,539 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,539 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,539 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,539 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,540 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,540 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,540 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,540 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,540 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,540 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,540 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,541 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,542 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,542 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,542 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,542 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,542 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,543 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,543 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,543 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,543 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,543 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,544 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,544 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,544 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,544 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,544 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,544 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,544 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,544 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,544 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,545 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,546 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,546 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:50:21,546 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,546 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,546 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,546 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:50:21,554 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 16:50:21,554 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 16:50:21,554 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 16:50:21,555 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 16:50:21,564 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459867821562`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,565 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459867821562`
05 abr 2016 - 16:50:21,567 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459867821562`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 16:50:21,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 32 ms
05 abr 2016 - 16:50:21,608 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 16:50:21,608 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459867821562`
05 abr 2016 - 16:50:21,608 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459867821562`
05 abr 2016 - 16:50:21,620 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 12 ms
05 abr 2016 - 16:50:21,620 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 16:50:21,621 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 16:50:21,622 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 16:50:21,622 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:50:21,622 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:50:21,622 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:50:21,623 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 16:50:21,624 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 16:50:21,625 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 16:50:21,628 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 16:50:21,628 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 16:50:21,628 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 16:50:21,628 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:50:21,628 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 16:50:21,628 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 16:50:21,628 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 16:50:21,628 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 16:50:21,629 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 16:50:21,629 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 16:50:21,629 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 16:50:21,640 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@78dd667e"
05 abr 2016 - 16:50:21,641 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 del tipo "soft" inicializada
05 abr 2016 - 16:50:21,643 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:50:21,643 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:50:21,643 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@7d3a22a9"
05 abr 2016 - 16:50:21,652 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 16:50:21,653 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:50:21,654 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 16:50:21,654 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 16:50:21,658 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /META-INF/package.jdo
05 abr 2016 - 16:50:21,658 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:21,659 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /package.jdo
05 abr 2016 - 16:50:21,659 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/package.jdo
05 abr 2016 - 16:50:21,659 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main.jdo
05 abr 2016 - 16:50:21,660 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/Artista.jdo
05 abr 2016 - 16:50:21,660 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Artista"
05 abr 2016 - 16:50:21,660 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:50:21,661 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 16:50:21,661 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 16:50:21,662 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:50:21,662 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 16:50:21,662 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 16:50:21,663 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 16:50:21,663 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 16:50:21,663 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 16:50:21,663 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,663 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:50:21,663 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 16:50:21,664 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 16:50:21,664 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:21,665 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 16:50:21,670 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 16:50:21,670 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 16:50:21,670 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:50:21,673 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 16:50:21,673 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:50:21,673 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:50:21,673 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 16:50:21,673 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 16:50:21,673 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 16:50:21,674 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 16:50:21,674 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 16:50:21,674 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 16:50:21,676 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 16:50:21,677 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 16:50:21,677 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:50:21,679 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 16:50:21,679 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:50:21,679 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:50:21,680 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 16:50:21,680 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 16:50:21,680 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 16:50:21,685 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 16:50:21,686 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,686 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,687 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:50:21,687 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,687 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,687 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:50:21,688 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,688 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 16:50:21,688 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,689 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:21,690 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 16:50:21,690 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,690 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,691 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,691 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,691 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,691 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,691 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,691 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,691 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,691 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:21,691 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 16:50:21,691 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 16:50:21,693 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:50:21,694 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,694 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:21,694 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 16:50:21,694 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 16:50:21,694 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,694 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:21,695 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,695 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,697 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 16:50:21,697 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:50:21,697 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 16:50:21,697 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:50:21,697 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,697 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,697 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,697 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:21,697 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 16:50:21,697 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,698 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,699 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:21,699 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,699 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 16:50:21,699 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 16:50:21,701 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,701 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:21,701 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,701 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,701 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,701 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,701 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:50:21,702 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,702 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,702 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,702 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:50:21,702 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,702 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,702 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:50:21,702 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,702 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:21,702 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,702 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:50:21,705 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,705 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,706 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 16:50:21,706 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,706 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,706 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,706 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:21,706 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,706 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,706 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 16:50:21,706 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,707 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:21,707 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,707 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:50:21,707 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,707 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:50:21,707 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 16:50:21,707 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,707 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 16:50:21,709 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 16:50:21,709 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8" y isolacion "serializable"
05 abr 2016 - 16:50:21,711 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:50:21,712 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 16:50:21,751 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 38 ms
05 abr 2016 - 16:50:21,751 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 16:50:21,752 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 16:50:21,753 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 16:50:21,754 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 16:50:21,755 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:50:21,756 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:50:21,757 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 16:50:21,758 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 16:50:21,759 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 16:50:21,763 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 16:50:21,768 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 16:50:21,770 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 16:50:21,771 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 16:50:21,772 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 16:50:21,774 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 16:50:21,775 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 16:50:21,776 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 16:50:21,778 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 16:50:21,779 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 16:50:21,779 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 16:50:21,780 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 16:50:21,782 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:50:21,784 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:50:21,785 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:50:21,787 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:50:21,788 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:50:21,789 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:50:21,790 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:50:21,792 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:50:21,793 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:50:21,795 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:50:21,796 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:50:21,797 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:50:21,799 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:50:21,800 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:50:21,801 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:50:21,801 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 16:50:21,802 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 16:50:21,802 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:50:21,802 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:50:21,806 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@7d3a22a9" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 16:50:21,815 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:50:21,816 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:50:21,817 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:50:21,817 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,825 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 16:50:21,827 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943781219>,<false>,<'AxiElorza'>,<'1234'>,<'Asier'>)
05 abr 2016 - 16:50:21,831 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 4 ms (numero de lineas cambiado = 1) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8"
05 abr 2016 - 16:50:21,831 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar insertPostProcessing para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:21,832 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar insertPostProcessing para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:21,832 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar insertPostProcessing para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:21,832 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8"
05 abr 2016 - 16:50:21,832 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar postInsert para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:21,832 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaReproduccion" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:50:21,838 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,838 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaReproduccion" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:50:21,838 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar postInsert para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:21,838 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.historialRep" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:50:21,838 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,838 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "historialRep" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:50:21,838 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar postInsert para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:21,838 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaAmigos" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:50:21,839 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,839 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaAmigos" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:50:21,839 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@130d63be"
05 abr 2016 - 16:50:21,839 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 16:50:21,839 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@130d63be" (id="Iker") ha sido puesto en la cache transaccional
05 abr 2016 - 16:50:21,839 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@130d63be" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 16:50:21,839 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,839 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@293a5bf6" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 16:50:21,839 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943008503>,<true>,<'IkerCalzada'>,<'5678'>,<'Iker'>)
05 abr 2016 - 16:50:21,840 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 1) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@293a5bf6"
05 abr 2016 - 16:50:21,840 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar insertPostProcessing para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:21,840 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar insertPostProcessing para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:21,840 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar insertPostProcessing para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:21,840 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@293a5bf6"
05 abr 2016 - 16:50:21,840 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar postInsert para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:21,840 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaReproduccion" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:50:21,840 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,841 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaReproduccion" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:50:21,841 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar postInsert para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:21,841 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.historialRep" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:50:21,841 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,841 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "historialRep" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:50:21,841 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar postInsert para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:21,841 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaAmigos" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:50:21,841 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,841 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaAmigos" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:50:21,841 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@74f0ea28"
05 abr 2016 - 16:50:21,841 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 16:50:21,841 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@74f0ea28" (id="Mikel") ha sido puesto en la cache transaccional
05 abr 2016 - 16:50:21,842 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@74f0ea28" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 16:50:21,842 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,842 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3c19aaa5" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 16:50:21,842 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943556699>,<false>,<'MikelLarrea'>,<'91011'>,<'Mikel'>)
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 1) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3c19aaa5"
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar insertPostProcessing para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar insertPostProcessing para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar insertPostProcessing para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3c19aaa5"
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar postInsert para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaReproduccion" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaReproduccion" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar postInsert para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.historialRep" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "historialRep" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar postInsert para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaAmigos" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaAmigos" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:50:21,843 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:50:21,844 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 3 objetos registrados
05 abr 2016 - 16:50:21,845 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.query.cache.SoftQueryCompilationCache" inicializada
05 abr 2016 - 16:50:21,846 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryDatastoreCompilationCache" inicializada
05 abr 2016 - 16:50:21,846 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryResultsCache" inicializada
05 abr 2016 - 16:50:21,847 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:50:21,847 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:50:21,847 (main) DEBUG [DataNucleus.Persistence] - Performing reachability algorithm on object with id "Asier"
05 abr 2016 - 16:50:21,847 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") usado de la Cache nivel 1 (loadedFlags="[YYYYYYYYY]") [tamaño = 3]
05 abr 2016 - 16:50:21,847 (main) DEBUG [DataNucleus.Persistence] - Object "main.Usuario@7d3a22a9" (id="Asier") estado de vida "P_NEW" añadido a la lista de alcanzables al commit.
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Performing reachability algorithm on object with id "Iker"
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") usado de la Cache nivel 1 (loadedFlags="[YYYYYYYYY]") [tamaño = 3]
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Object "main.Usuario@130d63be" (id="Iker") estado de vida "P_NEW" añadido a la lista de alcanzables al commit.
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Performing reachability algorithm on object with id "Mikel"
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") usado de la Cache nivel 1 (loadedFlags="[YYYYYYYYY]") [tamaño = 3]
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Object "main.Usuario@74f0ea28" (id="Mikel") estado de vida "P_NEW" añadido a la lista de alcanzables al commit.
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:21,848 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:21,849 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:50:21,849 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:50:21,849 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:50:21,849 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="Asier") añadido a la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="")
05 abr 2016 - 16:50:21,850 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@74f0ea28" (id="Mikel") añadido a la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="")
05 abr 2016 - 16:50:21,850 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@130d63be" (id="Iker") añadido a la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="")
05 abr 2016 - 16:50:21,850 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc]]
05 abr 2016 - 16:50:21,851 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:50:21,854 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:50:21,855 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,855 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_NEW"->"HOLLOW"
05 abr 2016 - 16:50:21,855 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:50:21,855 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_NEW"->"HOLLOW"
05 abr 2016 - 16:50:21,855 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") fue ser borrado de la cache transactional
05 abr 2016 - 16:50:21,855 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_NEW"->"HOLLOW"
05 abr 2016 - 16:50:21,855 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") fue ser borrado de la cache transactional
05 abr 2016 - 16:50:21,855 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 12 ms
05 abr 2016 - 16:50:21,857 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@7d3a22a9 de StateManager[pc=main.Usuario@7d3a22a9, lifecycle=HOLLOW]
05 abr 2016 - 16:50:21,857 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 3]
05 abr 2016 - 16:50:21,857 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@74f0ea28 de StateManager[pc=main.Usuario@74f0ea28, lifecycle=HOLLOW]
05 abr 2016 - 16:50:21,857 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Mikel" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 2]
05 abr 2016 - 16:50:21,857 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@130d63be de StateManager[pc=main.Usuario@130d63be, lifecycle=HOLLOW]
05 abr 2016 - 16:50:21,857 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Iker" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:50:21,857 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:50:21,857 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:50:21,857 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@235834f2"
05 abr 2016 - 16:50:21,857 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:50:21,858 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:50:21,866 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario"
05 abr 2016 - 16:50:21,872 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 6 ms
05 abr 2016 - 16:50:21,872 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [symbols: this type=main.Usuario]
05 abr 2016 - 16:50:21,872 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario" para base de datos
05 abr 2016 - 16:50:21,889 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 17
05 abr 2016 - 16:50:21,889 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`"
05 abr 2016 - 16:50:21,890 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:50:21,891 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@6aaceffd, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:50:21,891 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:50:21,891 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,891 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario" ...
05 abr 2016 - 16:50:21,891 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@37271612"
05 abr 2016 - 16:50:21,891 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`
05 abr 2016 - 16:50:21,892 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 1 ms
05 abr 2016 - 16:50:21,894 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 3 ms
05 abr 2016 - 16:50:21,896 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 16:50:21,896 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@10d68fcd" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:50:21,897 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@10d68fcd" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:50:21,897 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Asier" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@10d68fcd"
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Iker" no esta en la Cache de nivel 1 [tamaño = 1]
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1ebd319f" (id="main.Usuario:Iker") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@1ebd319f" (id="Iker") ha sido puesto en la cache transaccional
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Iker" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@1ebd319f"
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Mikel" no esta en la Cache de nivel 1 [tamaño = 2]
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@3c0be339" (id="main.Usuario:Mikel") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@3c0be339" (id="Mikel") ha sido puesto en la cache transaccional
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Mikel" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@3c0be339"
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@6aaceffd]]
05 abr 2016 - 16:50:21,898 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:50:21,900 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:50:21,900 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,900 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@10d68fcd" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_CLEAN"->"HOLLOW"
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@10d68fcd" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@1ebd319f" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_CLEAN"->"HOLLOW"
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@1ebd319f" (id="main.Usuario:Iker") fue ser borrado de la cache transactional
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@3c0be339" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_CLEAN"->"HOLLOW"
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@3c0be339" (id="main.Usuario:Mikel") fue ser borrado de la cache transactional
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 3 ms
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@1ebd319f de StateManager[pc=main.Usuario@1ebd319f, lifecycle=HOLLOW]
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Iker" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 3]
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@10d68fcd de StateManager[pc=main.Usuario@10d68fcd, lifecycle=HOLLOW]
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 2]
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@3c0be339 de StateManager[pc=main.Usuario@3c0be339, lifecycle=HOLLOW]
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Mikel" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@6e509ffa"
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:50:21,901 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:50:21,902 (main) DEBUG [DataNucleus.Query] - JDOQL Single-String de "UPDATE Usuario.class SET ventajoso=false WHERE this.nombreUsu = 'Asier'"
05 abr 2016 - 16:50:21,904 (main) INFO  [DataNucleus.JDO] - Exception thrown
JDOQL Single-String Query tiene que empezar con SELECT
org.datanucleus.exceptions.NucleusUserException: JDOQL Single-String Query tiene que empezar con SELECT
	at org.datanucleus.query.JDOQLSingleStringParser$Compiler.compileSelect(JDOQLSingleStringParser.java:146)
	at org.datanucleus.query.JDOQLSingleStringParser$Compiler.compile(JDOQLSingleStringParser.java:117)
	at org.datanucleus.query.JDOQLSingleStringParser$Compiler.access$000(JDOQLSingleStringParser.java:106)
	at org.datanucleus.query.JDOQLSingleStringParser.parse(JDOQLSingleStringParser.java:98)
	at org.datanucleus.store.query.AbstractJDOQLQuery.<init>(AbstractJDOQLQuery.java:120)
	at org.datanucleus.store.rdbms.query.JDOQLQuery.<init>(JDOQLQuery.java:135)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:612)
	at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:330)
	at org.datanucleus.store.query.QueryManagerImpl.newQuery(QueryManagerImpl.java:239)
	at org.datanucleus.api.jdo.JDOPersistenceManager.newQuery(JDOPersistenceManager.java:1320)
	at org.datanucleus.api.jdo.JDOPersistenceManager.newQuery(JDOPersistenceManager.java:1266)
	at main.Main.main(Unknown Source)
05 abr 2016 - 16:50:21,905 (main) DEBUG [DataNucleus.Transaction] - Haciendo rollback de la transacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:50:21,905 (main) DEBUG [DataNucleus.Transaction] - Rolling back [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:50:21,905 (main) DEBUG [DataNucleus.Transaction] - Transacción rolled back en 0 ms
05 abr 2016 - 16:50:21,906 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:50:21,906 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:50:21,906 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@11fc564b"
05 abr 2016 - 16:50:21,906 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:50:21,906 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:50:21,906 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu = 'iker'"
05 abr 2016 - 16:50:21,908 (main) INFO  [DataNucleus.JDO] - Exception thrown
Invalid operator "=". Did you mean to use "=="?
org.datanucleus.store.query.QueryCompilerSyntaxException: Invalid operator "=". Did you mean to use "=="?
	at org.datanucleus.query.compiler.JDOQLParser.processRelationalExpression(JDOQLParser.java:492)
	at org.datanucleus.query.compiler.JDOQLParser.processAndExpression(JDOQLParser.java:441)
	at org.datanucleus.query.compiler.JDOQLParser.processExclusiveOrExpression(JDOQLParser.java:427)
	at org.datanucleus.query.compiler.JDOQLParser.processInclusiveOrExpression(JDOQLParser.java:413)
	at org.datanucleus.query.compiler.JDOQLParser.processConditionalAndExpression(JDOQLParser.java:399)
	at org.datanucleus.query.compiler.JDOQLParser.processConditionalOrExpression(JDOQLParser.java:380)
	at org.datanucleus.query.compiler.JDOQLParser.processExpression(JDOQLParser.java:369)
	at org.datanucleus.query.compiler.JDOQLParser.parse(JDOQLParser.java:92)
	at org.datanucleus.query.compiler.JavaQueryCompiler.compileFilter(JavaQueryCompiler.java:462)
	at org.datanucleus.query.compiler.JDOQLCompiler.compile(JDOQLCompiler.java:113)
	at org.datanucleus.store.query.AbstractJDOQLQuery.compileGeneric(AbstractJDOQLQuery.java:365)
	at org.datanucleus.store.query.AbstractJDOQLQuery.compileInternal(AbstractJDOQLQuery.java:410)
	at org.datanucleus.store.rdbms.query.JDOQLQuery.compileInternal(JDOQLQuery.java:234)
	at org.datanucleus.store.query.Query.performDeletePersistentAll(Query.java:2112)
	at org.datanucleus.store.query.AbstractJavaQuery.performDeletePersistentAll(AbstractJavaQuery.java:112)
	at org.datanucleus.store.query.Query.deletePersistentAll(Query.java:2091)
	at org.datanucleus.store.query.Query.deletePersistentAll(Query.java:2047)
	at org.datanucleus.store.query.Query.deletePersistentAll(Query.java:2036)
	at org.datanucleus.api.jdo.JDOQuery.deletePersistentAll(JDOQuery.java:159)
	at main.Main.main(Unknown Source)
05 abr 2016 - 16:50:21,908 (main) DEBUG [DataNucleus.Transaction] - Haciendo rollback de la transacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:50:21,908 (main) DEBUG [DataNucleus.Transaction] - Rolling back [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:50:21,908 (main) DEBUG [DataNucleus.Transaction] - Transacción rolled back en 0 ms
05 abr 2016 - 16:50:21,908 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:50:21,908 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:50:21,909 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@fd07cbb"
05 abr 2016 - 16:50:21,909 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:50:21,909 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:50:21,909 (main) DEBUG [DataNucleus.Query] - Query "SELECT FROM main.Usuario FetchPlan [default]" de lenguaje "JDOQL" existe, por eso utilizamos la compilacion general de antes.
05 abr 2016 - 16:50:21,909 (main) DEBUG [DataNucleus.Query] - Query "SELECT FROM main.Usuario FetchPlan [default]" de lenguaje "JDOQL" para la base de datos "rdbms-mysql" existe, por eso utilizamos la compilacion de datastore de antes
05 abr 2016 - 16:50:21,910 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:50:21,910 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@7748410a, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:50:21,910 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:50:21,910 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,911 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario" ...
05 abr 2016 - 16:50:21,911 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@60015ef5"
05 abr 2016 - 16:50:21,911 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`
05 abr 2016 - 16:50:21,911 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 0 ms
05 abr 2016 - 16:50:21,911 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 0 ms
05 abr 2016 - 16:50:21,912 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 16:50:21,912 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@2f54a33d" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:50:21,912 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@2f54a33d" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:50:21,912 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Asier" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@2f54a33d"
05 abr 2016 - 16:50:21,912 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Iker" no esta en la Cache de nivel 1 [tamaño = 1]
05 abr 2016 - 16:50:21,912 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1018bde2" (id="main.Usuario:Iker") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:50:21,912 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@1018bde2" (id="Iker") ha sido puesto en la cache transaccional
05 abr 2016 - 16:50:21,912 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Iker" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@1018bde2"
05 abr 2016 - 16:50:21,912 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Mikel" no esta en la Cache de nivel 1 [tamaño = 2]
05 abr 2016 - 16:50:21,912 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@65b3f4a4" (id="main.Usuario:Mikel") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:50:21,912 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@65b3f4a4" (id="Mikel") ha sido puesto en la cache transaccional
05 abr 2016 - 16:50:21,912 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Mikel" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@65b3f4a4"
05 abr 2016 - 16:50:21,913 (main) DEBUG [DataNucleus.Persistence] - Borrando el objeto de persistencia : "main.Usuario@2f54a33d"
05 abr 2016 - 16:50:21,913 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@2f54a33d" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_CLEAN"->"P_DELETED"
05 abr 2016 - 16:50:21,913 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:50:21,913 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:50:21,914 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@2f54a33d" va a ser borrado de la tabla "`USUARIO`"
05 abr 2016 - 16:50:21,914 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@2f54a33d" va a llamar preDelete para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:21,916 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@2f54a33d" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,918 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,918 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@dd0c991" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:50:21,919 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAREPRODUCCION` WHERE `NOMBREUSU_OID`=<'Asier'>
05 abr 2016 - 16:50:21,924 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 5 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@dd0c991"
05 abr 2016 - 16:50:21,924 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@dd0c991"
05 abr 2016 - 16:50:21,924 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@2f54a33d" va a llamar preDelete para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:21,924 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@2f54a33d" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,924 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,925 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@6497b078" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:50:21,925 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_HISTORIALREP` WHERE `NOMBREUSU_OID`=<'Asier'>
05 abr 2016 - 16:50:21,926 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@6497b078"
05 abr 2016 - 16:50:21,926 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@6497b078"
05 abr 2016 - 16:50:21,926 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@2f54a33d" va a llamar preDelete para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:21,927 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@2f54a33d" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,927 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,927 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@46fa7c39" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:50:21,927 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAAMIGOS` WHERE `NOMBREUSU_OID`=<'Asier'>
05 abr 2016 - 16:50:21,929 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 2 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@46fa7c39"
05 abr 2016 - 16:50:21,929 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@46fa7c39"
05 abr 2016 - 16:50:21,929 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,929 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@4a668b6e" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:50:21,929 (main) DEBUG [DataNucleus.Datastore.Persist] - El statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" ya es batchable
05 abr 2016 - 16:50:21,929 (main) DEBUG [DataNucleus.Datastore.Persist] - Añadiendo statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" al batch para procesar (tamaño de batch = 1)
05 abr 2016 - 16:50:21,930 (main) DEBUG [DataNucleus.Persistence] - Borrando el objeto de persistencia : "main.Usuario@1018bde2"
05 abr 2016 - 16:50:21,930 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@1018bde2" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_CLEAN"->"P_DELETED"
05 abr 2016 - 16:50:21,930 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:50:21,930 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:50:21,930 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@1018bde2" va a ser borrado de la tabla "`USUARIO`"
05 abr 2016 - 16:50:21,930 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@1018bde2" va a llamar preDelete para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:21,930 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@1018bde2" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,930 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,930 (main) DEBUG [DataNucleus.Datastore.Native] - BATCH [DELETE FROM `USUARIO` WHERE `NOMBREUSU`=<'Asier'>]
05 abr 2016 - 16:50:21,932 (main) DEBUG [DataNucleus.Datastore] - Tiempo de cumplir = 2 ms (numero de lineas cambiado = [1]) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@4a668b6e"
05 abr 2016 - 16:50:21,933 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7e9131d5" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:50:21,933 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAREPRODUCCION` WHERE `NOMBREUSU_OID`=<'Iker'>
05 abr 2016 - 16:50:21,933 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7e9131d5"
05 abr 2016 - 16:50:21,933 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7e9131d5"
05 abr 2016 - 16:50:21,933 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@1018bde2" va a llamar preDelete para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:21,933 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@1018bde2" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,933 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,933 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2525ff7e" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:50:21,933 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_HISTORIALREP` WHERE `NOMBREUSU_OID`=<'Iker'>
05 abr 2016 - 16:50:21,934 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2525ff7e"
05 abr 2016 - 16:50:21,934 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2525ff7e"
05 abr 2016 - 16:50:21,934 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@1018bde2" va a llamar preDelete para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:21,934 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@1018bde2" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,934 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,934 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@44a7bfbc" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:50:21,934 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAAMIGOS` WHERE `NOMBREUSU_OID`=<'Iker'>
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@44a7bfbc"
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@44a7bfbc"
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@37858383" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Datastore.Persist] - El statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" ya es batchable
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Datastore.Persist] - Añadiendo statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" al batch para procesar (tamaño de batch = 1)
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Persistence] - Borrando el objeto de persistencia : "main.Usuario@65b3f4a4"
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@65b3f4a4" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_CLEAN"->"P_DELETED"
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@65b3f4a4" va a ser borrado de la tabla "`USUARIO`"
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@65b3f4a4" va a llamar preDelete para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@65b3f4a4" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,935 (main) DEBUG [DataNucleus.Datastore.Native] - BATCH [DELETE FROM `USUARIO` WHERE `NOMBREUSU`=<'Iker'>]
05 abr 2016 - 16:50:21,936 (main) DEBUG [DataNucleus.Datastore] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = [1]) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@37858383"
05 abr 2016 - 16:50:21,936 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@5136d012" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:50:21,936 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAREPRODUCCION` WHERE `NOMBREUSU_OID`=<'Mikel'>
05 abr 2016 - 16:50:21,936 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@5136d012"
05 abr 2016 - 16:50:21,936 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@5136d012"
05 abr 2016 - 16:50:21,936 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@65b3f4a4" va a llamar preDelete para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:50:21,937 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@65b3f4a4" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,937 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,937 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@52102734" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:50:21,937 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_HISTORIALREP` WHERE `NOMBREUSU_OID`=<'Mikel'>
05 abr 2016 - 16:50:21,937 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@52102734"
05 abr 2016 - 16:50:21,937 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@52102734"
05 abr 2016 - 16:50:21,937 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@65b3f4a4" va a llamar preDelete para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:50:21,937 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@65b3f4a4" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:50:21,937 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,938 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@13b13b5d" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:50:21,938 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAAMIGOS` WHERE `NOMBREUSU_OID`=<'Mikel'>
05 abr 2016 - 16:50:21,938 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@13b13b5d"
05 abr 2016 - 16:50:21,938 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@13b13b5d"
05 abr 2016 - 16:50:21,938 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,938 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@29647f75" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:50:21,938 (main) DEBUG [DataNucleus.Datastore.Persist] - El statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" ya es batchable
05 abr 2016 - 16:50:21,938 (main) DEBUG [DataNucleus.Datastore.Persist] - Añadiendo statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" al batch para procesar (tamaño de batch = 1)
05 abr 2016 - 16:50:21,938 (main) DEBUG [DataNucleus.Datastore.Native] - BATCH [DELETE FROM `USUARIO` WHERE `NOMBREUSU`=<'Mikel'>]
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Datastore] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = [1]) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@29647f75"
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Persistence] - Manejar de relaciones : empezando
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Persistence] - Manejar de relaciones : terminado
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@2f54a33d" (id="Asier") borrado de la Cache de nivel 2
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1018bde2" (id="Iker") borrado de la Cache de nivel 2
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@65b3f4a4" (id="Mikel") borrado de la Cache de nivel 2
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@7748410a]]
05 abr 2016 - 16:50:21,939 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:50:21,943 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:50:21,943 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:50:21,943 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@2f54a33d" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_DELETED"->""
05 abr 2016 - 16:50:21,943 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@2f54a33d" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:50:21,943 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@2f54a33d de StateManager[pc=main.Usuario@2f54a33d, lifecycle=P_DELETED]
05 abr 2016 - 16:50:21,943 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 3]
05 abr 2016 - 16:50:21,943 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@1018bde2" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_DELETED"->""
05 abr 2016 - 16:50:21,944 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@1018bde2" (id="main.Usuario:Iker") fue ser borrado de la cache transactional
05 abr 2016 - 16:50:21,944 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@1018bde2 de StateManager[pc=main.Usuario@1018bde2, lifecycle=P_DELETED]
05 abr 2016 - 16:50:21,944 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Iker" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 2]
05 abr 2016 - 16:50:21,944 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@65b3f4a4" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_DELETED"->""
05 abr 2016 - 16:50:21,944 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@65b3f4a4" (id="main.Usuario:Mikel") fue ser borrado de la cache transactional
05 abr 2016 - 16:50:21,944 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@65b3f4a4 de StateManager[pc=main.Usuario@65b3f4a4, lifecycle=P_DELETED]
05 abr 2016 - 16:50:21,944 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Mikel" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:50:21,944 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 6 ms
05 abr 2016 - 16:50:21,944 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:50:21,944 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:51:24,489 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:51:24,506 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 16:51:24,518 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:24,521 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:24,524 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 16:51:24,535 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:24,542 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:24,545 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 16:51:24,559 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:24,566 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:24,578 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 16:51:24,587 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 16:51:24,614 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 16:51:24,615 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 16:51:24,632 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 16:51:24,632 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:24,632 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:24,632 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:24,632 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:24,632 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:24,632 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:24,632 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:24,632 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:24,633 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 16:51:24,633 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:51:24,633 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Character,java.lang.Integer
05 abr 2016 - 16:51:24,633 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 16:51:24,633 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 16:51:24,633 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 16:51:24,633 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 16:51:24,633 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 16:51:24,633 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 16:51:24,633 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.String,java.lang.Double
05 abr 2016 - 16:51:24,633 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.nio.ByteBuffer,java.lang.String,java.lang.Long
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.lang.String,java.sql.Timestamp,[Ljava.lang.Object;,java.util.Date
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 16:51:24,634 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 16:51:24,635 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 16:51:24,635 (main) DEBUG [DataNucleus.MetaData] - Listener found initialisation for persistable class main.Usuario
05 abr 2016 - 16:51:24,636 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /META-INF/package.jdo
05 abr 2016 - 16:51:24,636 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:24,637 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /package.jdo
05 abr 2016 - 16:51:24,637 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/package.jdo
05 abr 2016 - 16:51:24,637 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main.jdo
05 abr 2016 - 16:51:24,637 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/Usuario.jdo
05 abr 2016 - 16:51:24,638 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Usuario"
05 abr 2016 - 16:51:24,668 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:24,680 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 16:51:24,681 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 16:51:24,681 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:51:24,681 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 16:51:24,681 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 16:51:24,682 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 16:51:24,682 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 16:51:24,682 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 16:51:24,682 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,683 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,683 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,683 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,683 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,684 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /META-INF/package.jdo
05 abr 2016 - 16:51:24,685 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:24,685 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /package.jdo
05 abr 2016 - 16:51:24,686 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/package.jdo
05 abr 2016 - 16:51:24,686 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main.jdo
05 abr 2016 - 16:51:24,686 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/Reproduccion.jdo
05 abr 2016 - 16:51:24,686 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Reproduccion"
05 abr 2016 - 16:51:24,686 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:24,687 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 16:51:24,687 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:51:24,688 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:51:24,688 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 16:51:24,688 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 16:51:24,688 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 16:51:24,689 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 16:51:24,689 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 16:51:24,689 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,689 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,689 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,689 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,689 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,690 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /META-INF/package.jdo
05 abr 2016 - 16:51:24,690 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:24,690 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /package.jdo
05 abr 2016 - 16:51:24,691 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/package.jdo
05 abr 2016 - 16:51:24,691 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main.jdo
05 abr 2016 - 16:51:24,691 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/Cancion.jdo
05 abr 2016 - 16:51:24,691 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Cancion"
05 abr 2016 - 16:51:24,691 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:24,693 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 16:51:24,693 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:51:24,694 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:51:24,694 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 16:51:24,694 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 16:51:24,694 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 16:51:24,695 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 16:51:24,695 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 16:51:24,695 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,695 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,695 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,695 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:24,696 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 16:51:24,698 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 16:51:24,725 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:51:24,725 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 16:51:24,725 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 16:51:24,742 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:51:24,929 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 16:51:24,939 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,939 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,939 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,940 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,940 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,940 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,940 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,940 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,941 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,941 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,943 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,943 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,943 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,943 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,943 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,943 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,943 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,943 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,943 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,945 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,945 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,949 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,950 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,950 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,950 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,950 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,950 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:51:24,950 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,950 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,951 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,951 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:24,959 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 16:51:24,959 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 16:51:24,959 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 16:51:24,959 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 16:51:24,969 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459867884966`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 16:51:24,970 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459867884966`
05 abr 2016 - 16:51:24,972 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459867884966`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 16:51:25,009 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 37 ms
05 abr 2016 - 16:51:25,017 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 16:51:25,018 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459867884966`
05 abr 2016 - 16:51:25,018 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459867884966`
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 12 ms
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 16:51:25,030 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 16:51:25,031 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 16:51:25,031 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 16:51:25,031 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:51:25,031 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:51:25,031 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:25,033 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 16:51:25,034 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 16:51:25,034 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 16:51:25,039 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 16:51:25,039 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 16:51:25,039 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 16:51:25,039 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:51:25,039 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 16:51:25,039 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 16:51:25,039 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 16:51:25,039 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 16:51:25,039 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 16:51:25,039 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 16:51:25,040 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 16:51:25,052 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@78dd667e"
05 abr 2016 - 16:51:25,054 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 del tipo "soft" inicializada
05 abr 2016 - 16:51:25,056 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:25,056 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:51:25,057 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@7d3a22a9"
05 abr 2016 - 16:51:25,066 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 16:51:25,067 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:25,068 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 16:51:25,069 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 16:51:25,072 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /META-INF/package.jdo
05 abr 2016 - 16:51:25,073 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:25,074 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /package.jdo
05 abr 2016 - 16:51:25,074 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/package.jdo
05 abr 2016 - 16:51:25,074 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main.jdo
05 abr 2016 - 16:51:25,074 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/Artista.jdo
05 abr 2016 - 16:51:25,075 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Artista"
05 abr 2016 - 16:51:25,075 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:25,076 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 16:51:25,076 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 16:51:25,077 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:51:25,077 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 16:51:25,077 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 16:51:25,077 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 16:51:25,078 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 16:51:25,078 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 16:51:25,078 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:25,078 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:25,078 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 16:51:25,079 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 16:51:25,079 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:25,079 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 16:51:25,084 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 16:51:25,085 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 16:51:25,085 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:51:25,088 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 16:51:25,088 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:51:25,089 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:51:25,089 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 16:51:25,089 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 16:51:25,089 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 16:51:25,089 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 16:51:25,090 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:25,090 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 16:51:25,093 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 16:51:25,093 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 16:51:25,093 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:51:25,097 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 16:51:25,097 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:51:25,098 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:51:25,098 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 16:51:25,098 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 16:51:25,098 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 16:51:25,105 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 16:51:25,106 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,106 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,107 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:51:25,107 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,107 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,108 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:51:25,108 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,108 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 16:51:25,109 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,110 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:25,110 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 16:51:25,111 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,111 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,111 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,111 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,111 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,111 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,111 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,111 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,112 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,112 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:25,112 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 16:51:25,112 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 16:51:25,114 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:25,114 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,114 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:25,114 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 16:51:25,114 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 16:51:25,114 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,114 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:25,115 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,115 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,118 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 16:51:25,118 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:25,119 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 16:51:25,119 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:25,119 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,119 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,119 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,119 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:25,119 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 16:51:25,119 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 16:51:25,119 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,119 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:25,120 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,121 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 16:51:25,121 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 16:51:25,122 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,123 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:25,123 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,123 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,123 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,123 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,123 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:51:25,123 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,123 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,123 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,124 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:51:25,124 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,124 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,124 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:51:25,124 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,124 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:25,124 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,124 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:51:25,126 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,126 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,126 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 16:51:25,126 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,126 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,127 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,127 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:25,127 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,127 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,127 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 16:51:25,128 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,128 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:25,128 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,128 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:25,128 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,128 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:25,128 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 16:51:25,128 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,129 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:25,131 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 16:51:25,131 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8" y isolacion "serializable"
05 abr 2016 - 16:51:25,132 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:51:25,133 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 16:51:25,165 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 32 ms
05 abr 2016 - 16:51:25,165 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 16:51:25,166 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 16:51:25,167 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 16:51:25,168 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 16:51:25,169 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:51:25,170 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:51:25,171 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 16:51:25,172 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 16:51:25,172 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 16:51:25,176 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 16:51:25,180 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 16:51:25,183 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 16:51:25,184 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 16:51:25,185 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 16:51:25,186 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 16:51:25,187 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 16:51:25,188 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 16:51:25,190 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 16:51:25,191 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 16:51:25,191 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 16:51:25,192 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 16:51:25,193 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:51:25,195 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:51:25,197 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:51:25,198 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:51:25,199 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:51:25,201 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:51:25,202 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:51:25,203 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:51:25,205 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:51:25,206 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:51:25,207 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:51:25,208 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:51:25,209 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:51:25,210 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:51:25,211 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:51:25,211 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 16:51:25,212 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 16:51:25,212 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:51:25,212 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:25,216 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@7d3a22a9" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 16:51:25,226 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:51:25,227 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:25,227 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:51:25,227 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,236 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 16:51:25,240 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943781219>,<false>,<'AxiElorza'>,<'1234'>,<'Asier'>)
05 abr 2016 - 16:51:25,244 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 4 ms (numero de lineas cambiado = 1) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8"
05 abr 2016 - 16:51:25,244 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar insertPostProcessing para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:25,244 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar insertPostProcessing para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:25,244 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar insertPostProcessing para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:25,244 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8"
05 abr 2016 - 16:51:25,244 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar postInsert para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:25,244 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaReproduccion" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:25,251 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,251 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaReproduccion" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:25,251 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar postInsert para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:25,251 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.historialRep" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:25,251 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,251 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "historialRep" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:25,251 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar postInsert para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:25,251 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaAmigos" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:25,251 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,251 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaAmigos" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:25,252 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@130d63be"
05 abr 2016 - 16:51:25,252 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 16:51:25,252 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@130d63be" (id="Iker") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:25,252 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@130d63be" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 16:51:25,252 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,252 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@293a5bf6" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 16:51:25,252 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943008503>,<true>,<'IkerCalzada'>,<'5678'>,<'Iker'>)
05 abr 2016 - 16:51:25,253 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 1) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@293a5bf6"
05 abr 2016 - 16:51:25,253 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar insertPostProcessing para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:25,253 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar insertPostProcessing para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:25,253 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar insertPostProcessing para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:25,253 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@293a5bf6"
05 abr 2016 - 16:51:25,253 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar postInsert para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:25,253 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaReproduccion" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:25,253 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,253 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaReproduccion" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:25,253 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar postInsert para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:25,253 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.historialRep" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "historialRep" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar postInsert para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaAmigos" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaAmigos" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@74f0ea28"
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@74f0ea28" (id="Mikel") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@74f0ea28" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3c19aaa5" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 16:51:25,254 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943556699>,<false>,<'MikelLarrea'>,<'91011'>,<'Mikel'>)
05 abr 2016 - 16:51:25,255 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 1) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3c19aaa5"
05 abr 2016 - 16:51:25,255 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar insertPostProcessing para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:25,255 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar insertPostProcessing para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:25,255 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar insertPostProcessing para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:25,255 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3c19aaa5"
05 abr 2016 - 16:51:25,255 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar postInsert para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:25,255 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaReproduccion" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:25,255 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,255 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaReproduccion" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:25,255 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar postInsert para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:25,255 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.historialRep" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:25,256 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,256 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "historialRep" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:25,256 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar postInsert para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:25,256 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaAmigos" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:25,256 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,256 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaAmigos" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:25,256 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:51:25,256 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 3 objetos registrados
05 abr 2016 - 16:51:25,257 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.query.cache.SoftQueryCompilationCache" inicializada
05 abr 2016 - 16:51:25,258 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryDatastoreCompilationCache" inicializada
05 abr 2016 - 16:51:25,259 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryResultsCache" inicializada
05 abr 2016 - 16:51:25,259 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:25,259 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:51:25,259 (main) DEBUG [DataNucleus.Persistence] - Performing reachability algorithm on object with id "Asier"
05 abr 2016 - 16:51:25,259 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") usado de la Cache nivel 1 (loadedFlags="[YYYYYYYYY]") [tamaño = 3]
05 abr 2016 - 16:51:25,260 (main) DEBUG [DataNucleus.Persistence] - Object "main.Usuario@7d3a22a9" (id="Asier") estado de vida "P_NEW" añadido a la lista de alcanzables al commit.
05 abr 2016 - 16:51:25,260 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:25,260 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:25,260 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:25,260 (main) DEBUG [DataNucleus.Persistence] - Performing reachability algorithm on object with id "Iker"
05 abr 2016 - 16:51:25,260 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") usado de la Cache nivel 1 (loadedFlags="[YYYYYYYYY]") [tamaño = 3]
05 abr 2016 - 16:51:25,260 (main) DEBUG [DataNucleus.Persistence] - Object "main.Usuario@130d63be" (id="Iker") estado de vida "P_NEW" añadido a la lista de alcanzables al commit.
05 abr 2016 - 16:51:25,260 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:25,261 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:25,261 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:25,261 (main) DEBUG [DataNucleus.Persistence] - Performing reachability algorithm on object with id "Mikel"
05 abr 2016 - 16:51:25,261 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") usado de la Cache nivel 1 (loadedFlags="[YYYYYYYYY]") [tamaño = 3]
05 abr 2016 - 16:51:25,261 (main) DEBUG [DataNucleus.Persistence] - Object "main.Usuario@74f0ea28" (id="Mikel") estado de vida "P_NEW" añadido a la lista de alcanzables al commit.
05 abr 2016 - 16:51:25,261 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:25,261 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:25,261 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:25,261 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:51:25,261 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:25,261 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:51:25,261 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="Asier") añadido a la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="")
05 abr 2016 - 16:51:25,262 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@74f0ea28" (id="Mikel") añadido a la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="")
05 abr 2016 - 16:51:25,262 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@130d63be" (id="Iker") añadido a la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="")
05 abr 2016 - 16:51:25,263 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc]]
05 abr 2016 - 16:51:25,263 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:51:25,266 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:25,267 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,267 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_NEW"->"HOLLOW"
05 abr 2016 - 16:51:25,267 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:25,267 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_NEW"->"HOLLOW"
05 abr 2016 - 16:51:25,267 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:25,267 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_NEW"->"HOLLOW"
05 abr 2016 - 16:51:25,267 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:25,267 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 11 ms
05 abr 2016 - 16:51:25,268 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@7d3a22a9 de StateManager[pc=main.Usuario@7d3a22a9, lifecycle=HOLLOW]
05 abr 2016 - 16:51:25,268 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 3]
05 abr 2016 - 16:51:25,268 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@74f0ea28 de StateManager[pc=main.Usuario@74f0ea28, lifecycle=HOLLOW]
05 abr 2016 - 16:51:25,268 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Mikel" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 2]
05 abr 2016 - 16:51:25,268 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@130d63be de StateManager[pc=main.Usuario@130d63be, lifecycle=HOLLOW]
05 abr 2016 - 16:51:25,268 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Iker" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:51:25,268 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:51:25,268 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:51:25,269 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@235834f2"
05 abr 2016 - 16:51:25,269 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:25,269 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:51:25,278 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario"
05 abr 2016 - 16:51:25,284 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 6 ms
05 abr 2016 - 16:51:25,284 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [symbols: this type=main.Usuario]
05 abr 2016 - 16:51:25,284 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario" para base de datos
05 abr 2016 - 16:51:25,299 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 15
05 abr 2016 - 16:51:25,299 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`"
05 abr 2016 - 16:51:25,301 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:51:25,301 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@6aaceffd, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:25,301 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:51:25,301 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,301 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario" ...
05 abr 2016 - 16:51:25,301 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@37271612"
05 abr 2016 - 16:51:25,301 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`
05 abr 2016 - 16:51:25,302 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 1 ms
05 abr 2016 - 16:51:25,304 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 3 ms
05 abr 2016 - 16:51:25,306 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 16:51:25,307 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@10d68fcd" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:51:25,307 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@10d68fcd" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:25,308 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Asier" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@10d68fcd"
05 abr 2016 - 16:51:25,308 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Iker" no esta en la Cache de nivel 1 [tamaño = 1]
05 abr 2016 - 16:51:25,308 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1ebd319f" (id="main.Usuario:Iker") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:51:25,308 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@1ebd319f" (id="Iker") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:25,308 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Iker" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@1ebd319f"
05 abr 2016 - 16:51:25,308 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Mikel" no esta en la Cache de nivel 1 [tamaño = 2]
05 abr 2016 - 16:51:25,308 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@3c0be339" (id="main.Usuario:Mikel") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:51:25,308 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@3c0be339" (id="Mikel") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:25,308 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Mikel" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@3c0be339"
05 abr 2016 - 16:51:25,308 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:51:25,309 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:51:25,309 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:25,309 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:51:25,309 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:51:25,309 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@6aaceffd]]
05 abr 2016 - 16:51:25,309 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:51:25,309 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:25,310 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,310 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@10d68fcd" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_CLEAN"->"HOLLOW"
05 abr 2016 - 16:51:25,310 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@10d68fcd" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:25,310 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@1ebd319f" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_CLEAN"->"HOLLOW"
05 abr 2016 - 16:51:25,310 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@1ebd319f" (id="main.Usuario:Iker") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:25,310 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@3c0be339" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_CLEAN"->"HOLLOW"
05 abr 2016 - 16:51:25,310 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@3c0be339" (id="main.Usuario:Mikel") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:25,310 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 2 ms
05 abr 2016 - 16:51:25,310 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@1ebd319f de StateManager[pc=main.Usuario@1ebd319f, lifecycle=HOLLOW]
05 abr 2016 - 16:51:25,310 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Iker" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 3]
05 abr 2016 - 16:51:25,310 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@10d68fcd de StateManager[pc=main.Usuario@10d68fcd, lifecycle=HOLLOW]
05 abr 2016 - 16:51:25,310 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 2]
05 abr 2016 - 16:51:25,311 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@3c0be339 de StateManager[pc=main.Usuario@3c0be339, lifecycle=HOLLOW]
05 abr 2016 - 16:51:25,311 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Mikel" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:51:25,311 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:51:25,311 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:51:25,311 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@6e509ffa"
05 abr 2016 - 16:51:25,311 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:25,311 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:51:25,312 (main) DEBUG [DataNucleus.Query] - JDOQL Single-String de "UPDATE Usuario.class SET ventajoso=false WHERE this.nombreUsu = 'Asier'"
05 abr 2016 - 16:51:25,314 (main) INFO  [DataNucleus.JDO] - Exception thrown
JDOQL Single-String Query tiene que empezar con SELECT
org.datanucleus.exceptions.NucleusUserException: JDOQL Single-String Query tiene que empezar con SELECT
	at org.datanucleus.query.JDOQLSingleStringParser$Compiler.compileSelect(JDOQLSingleStringParser.java:146)
	at org.datanucleus.query.JDOQLSingleStringParser$Compiler.compile(JDOQLSingleStringParser.java:117)
	at org.datanucleus.query.JDOQLSingleStringParser$Compiler.access$000(JDOQLSingleStringParser.java:106)
	at org.datanucleus.query.JDOQLSingleStringParser.parse(JDOQLSingleStringParser.java:98)
	at org.datanucleus.store.query.AbstractJDOQLQuery.<init>(AbstractJDOQLQuery.java:120)
	at org.datanucleus.store.rdbms.query.JDOQLQuery.<init>(JDOQLQuery.java:135)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:612)
	at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:330)
	at org.datanucleus.store.query.QueryManagerImpl.newQuery(QueryManagerImpl.java:239)
	at org.datanucleus.api.jdo.JDOPersistenceManager.newQuery(JDOPersistenceManager.java:1320)
	at org.datanucleus.api.jdo.JDOPersistenceManager.newQuery(JDOPersistenceManager.java:1266)
	at main.Main.main(Unknown Source)
05 abr 2016 - 16:51:25,315 (main) DEBUG [DataNucleus.Transaction] - Haciendo rollback de la transacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:51:25,316 (main) DEBUG [DataNucleus.Transaction] - Rolling back [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:25,316 (main) DEBUG [DataNucleus.Transaction] - Transacción rolled back en 1 ms
05 abr 2016 - 16:51:25,316 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:51:25,316 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:51:25,316 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@11fc564b"
05 abr 2016 - 16:51:25,316 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:25,316 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:51:25,317 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu = 'iker'"
05 abr 2016 - 16:51:25,318 (main) INFO  [DataNucleus.JDO] - Exception thrown
Invalid operator "=". Did you mean to use "=="?
org.datanucleus.store.query.QueryCompilerSyntaxException: Invalid operator "=". Did you mean to use "=="?
	at org.datanucleus.query.compiler.JDOQLParser.processRelationalExpression(JDOQLParser.java:492)
	at org.datanucleus.query.compiler.JDOQLParser.processAndExpression(JDOQLParser.java:441)
	at org.datanucleus.query.compiler.JDOQLParser.processExclusiveOrExpression(JDOQLParser.java:427)
	at org.datanucleus.query.compiler.JDOQLParser.processInclusiveOrExpression(JDOQLParser.java:413)
	at org.datanucleus.query.compiler.JDOQLParser.processConditionalAndExpression(JDOQLParser.java:399)
	at org.datanucleus.query.compiler.JDOQLParser.processConditionalOrExpression(JDOQLParser.java:380)
	at org.datanucleus.query.compiler.JDOQLParser.processExpression(JDOQLParser.java:369)
	at org.datanucleus.query.compiler.JDOQLParser.parse(JDOQLParser.java:92)
	at org.datanucleus.query.compiler.JavaQueryCompiler.compileFilter(JavaQueryCompiler.java:462)
	at org.datanucleus.query.compiler.JDOQLCompiler.compile(JDOQLCompiler.java:113)
	at org.datanucleus.store.query.AbstractJDOQLQuery.compileGeneric(AbstractJDOQLQuery.java:365)
	at org.datanucleus.store.query.AbstractJDOQLQuery.compileInternal(AbstractJDOQLQuery.java:410)
	at org.datanucleus.store.rdbms.query.JDOQLQuery.compileInternal(JDOQLQuery.java:234)
	at org.datanucleus.store.query.Query.performDeletePersistentAll(Query.java:2112)
	at org.datanucleus.store.query.AbstractJavaQuery.performDeletePersistentAll(AbstractJavaQuery.java:112)
	at org.datanucleus.store.query.Query.deletePersistentAll(Query.java:2091)
	at org.datanucleus.store.query.Query.deletePersistentAll(Query.java:2047)
	at org.datanucleus.store.query.Query.deletePersistentAll(Query.java:2036)
	at org.datanucleus.api.jdo.JDOQuery.deletePersistentAll(JDOQuery.java:159)
	at main.Main.main(Unknown Source)
05 abr 2016 - 16:51:25,318 (main) DEBUG [DataNucleus.Transaction] - Haciendo rollback de la transacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:51:25,318 (main) DEBUG [DataNucleus.Transaction] - Rolling back [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:25,318 (main) DEBUG [DataNucleus.Transaction] - Transacción rolled back en 0 ms
05 abr 2016 - 16:51:25,318 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:51:25,319 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:51:25,319 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@fd07cbb"
05 abr 2016 - 16:51:25,319 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:25,319 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:51:25,319 (main) DEBUG [DataNucleus.Query] - Query "SELECT FROM main.Usuario FetchPlan [default]" de lenguaje "JDOQL" existe, por eso utilizamos la compilacion general de antes.
05 abr 2016 - 16:51:25,319 (main) DEBUG [DataNucleus.Query] - Query "SELECT FROM main.Usuario FetchPlan [default]" de lenguaje "JDOQL" para la base de datos "rdbms-mysql" existe, por eso utilizamos la compilacion de datastore de antes
05 abr 2016 - 16:51:25,320 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:51:25,320 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@7748410a, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:25,321 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:51:25,321 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,321 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario" ...
05 abr 2016 - 16:51:25,321 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@60015ef5"
05 abr 2016 - 16:51:25,321 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`
05 abr 2016 - 16:51:25,322 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 1 ms
05 abr 2016 - 16:51:25,322 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 1 ms
05 abr 2016 - 16:51:25,322 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 16:51:25,322 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@2f54a33d" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:51:25,322 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@2f54a33d" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:25,322 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Asier" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@2f54a33d"
05 abr 2016 - 16:51:25,322 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Iker" no esta en la Cache de nivel 1 [tamaño = 1]
05 abr 2016 - 16:51:25,322 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1018bde2" (id="main.Usuario:Iker") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:51:25,322 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@1018bde2" (id="Iker") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:25,322 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Iker" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@1018bde2"
05 abr 2016 - 16:51:25,322 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Mikel" no esta en la Cache de nivel 1 [tamaño = 2]
05 abr 2016 - 16:51:25,322 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@65b3f4a4" (id="main.Usuario:Mikel") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:51:25,323 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@65b3f4a4" (id="Mikel") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:25,323 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Mikel" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@65b3f4a4"
05 abr 2016 - 16:51:25,323 (main) DEBUG [DataNucleus.Persistence] - Borrando el objeto de persistencia : "main.Usuario@2f54a33d"
05 abr 2016 - 16:51:25,323 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@2f54a33d" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_CLEAN"->"P_DELETED"
05 abr 2016 - 16:51:25,323 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:51:25,323 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:25,325 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@2f54a33d" va a ser borrado de la tabla "`USUARIO`"
05 abr 2016 - 16:51:25,325 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@2f54a33d" va a llamar preDelete para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:25,327 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@2f54a33d" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,328 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,329 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@dd0c991" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:51:25,330 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAREPRODUCCION` WHERE `NOMBREUSU_OID`=<'Asier'>
05 abr 2016 - 16:51:25,330 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@dd0c991"
05 abr 2016 - 16:51:25,330 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@dd0c991"
05 abr 2016 - 16:51:25,330 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@2f54a33d" va a llamar preDelete para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:25,331 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@2f54a33d" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,331 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,331 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@6497b078" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:51:25,331 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_HISTORIALREP` WHERE `NOMBREUSU_OID`=<'Asier'>
05 abr 2016 - 16:51:25,332 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@6497b078"
05 abr 2016 - 16:51:25,332 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@6497b078"
05 abr 2016 - 16:51:25,332 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@2f54a33d" va a llamar preDelete para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:25,332 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@2f54a33d" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,332 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,332 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@46fa7c39" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:51:25,333 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAAMIGOS` WHERE `NOMBREUSU_OID`=<'Asier'>
05 abr 2016 - 16:51:25,333 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@46fa7c39"
05 abr 2016 - 16:51:25,333 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@46fa7c39"
05 abr 2016 - 16:51:25,333 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,333 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@4a668b6e" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:51:25,333 (main) DEBUG [DataNucleus.Datastore.Persist] - El statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" ya es batchable
05 abr 2016 - 16:51:25,334 (main) DEBUG [DataNucleus.Datastore.Persist] - Añadiendo statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" al batch para procesar (tamaño de batch = 1)
05 abr 2016 - 16:51:25,334 (main) DEBUG [DataNucleus.Persistence] - Borrando el objeto de persistencia : "main.Usuario@1018bde2"
05 abr 2016 - 16:51:25,334 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@1018bde2" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_CLEAN"->"P_DELETED"
05 abr 2016 - 16:51:25,334 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:51:25,334 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:25,334 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@1018bde2" va a ser borrado de la tabla "`USUARIO`"
05 abr 2016 - 16:51:25,334 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@1018bde2" va a llamar preDelete para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:25,335 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@1018bde2" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,335 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,335 (main) DEBUG [DataNucleus.Datastore.Native] - BATCH [DELETE FROM `USUARIO` WHERE `NOMBREUSU`=<'Asier'>]
05 abr 2016 - 16:51:25,338 (main) DEBUG [DataNucleus.Datastore] - Tiempo de cumplir = 3 ms (numero de lineas cambiado = [1]) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@4a668b6e"
05 abr 2016 - 16:51:25,338 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7e9131d5" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:51:25,339 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAREPRODUCCION` WHERE `NOMBREUSU_OID`=<'Iker'>
05 abr 2016 - 16:51:25,339 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7e9131d5"
05 abr 2016 - 16:51:25,339 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7e9131d5"
05 abr 2016 - 16:51:25,339 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@1018bde2" va a llamar preDelete para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:25,340 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@1018bde2" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,340 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,340 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2525ff7e" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:51:25,340 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_HISTORIALREP` WHERE `NOMBREUSU_OID`=<'Iker'>
05 abr 2016 - 16:51:25,341 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2525ff7e"
05 abr 2016 - 16:51:25,341 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2525ff7e"
05 abr 2016 - 16:51:25,341 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@1018bde2" va a llamar preDelete para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:25,341 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@1018bde2" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,341 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,342 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@44a7bfbc" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:51:25,342 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAAMIGOS` WHERE `NOMBREUSU_OID`=<'Iker'>
05 abr 2016 - 16:51:25,342 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@44a7bfbc"
05 abr 2016 - 16:51:25,342 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@44a7bfbc"
05 abr 2016 - 16:51:25,342 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,342 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@37858383" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:51:25,342 (main) DEBUG [DataNucleus.Datastore.Persist] - El statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" ya es batchable
05 abr 2016 - 16:51:25,343 (main) DEBUG [DataNucleus.Datastore.Persist] - Añadiendo statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" al batch para procesar (tamaño de batch = 1)
05 abr 2016 - 16:51:25,343 (main) DEBUG [DataNucleus.Persistence] - Borrando el objeto de persistencia : "main.Usuario@65b3f4a4"
05 abr 2016 - 16:51:25,343 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@65b3f4a4" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_CLEAN"->"P_DELETED"
05 abr 2016 - 16:51:25,343 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:51:25,343 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:25,343 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@65b3f4a4" va a ser borrado de la tabla "`USUARIO`"
05 abr 2016 - 16:51:25,343 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@65b3f4a4" va a llamar preDelete para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:25,343 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@65b3f4a4" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,343 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,343 (main) DEBUG [DataNucleus.Datastore.Native] - BATCH [DELETE FROM `USUARIO` WHERE `NOMBREUSU`=<'Iker'>]
05 abr 2016 - 16:51:25,344 (main) DEBUG [DataNucleus.Datastore] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = [1]) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@37858383"
05 abr 2016 - 16:51:25,344 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@5136d012" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:51:25,344 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAREPRODUCCION` WHERE `NOMBREUSU_OID`=<'Mikel'>
05 abr 2016 - 16:51:25,345 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@5136d012"
05 abr 2016 - 16:51:25,345 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@5136d012"
05 abr 2016 - 16:51:25,345 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@65b3f4a4" va a llamar preDelete para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:25,345 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@65b3f4a4" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,345 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,345 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@52102734" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:51:25,345 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_HISTORIALREP` WHERE `NOMBREUSU_OID`=<'Mikel'>
05 abr 2016 - 16:51:25,345 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@52102734"
05 abr 2016 - 16:51:25,345 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@52102734"
05 abr 2016 - 16:51:25,346 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@65b3f4a4" va a llamar preDelete para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:25,346 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@65b3f4a4" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:25,346 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,346 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@13b13b5d" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:51:25,346 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAAMIGOS` WHERE `NOMBREUSU_OID`=<'Mikel'>
05 abr 2016 - 16:51:25,347 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@13b13b5d"
05 abr 2016 - 16:51:25,347 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@13b13b5d"
05 abr 2016 - 16:51:25,347 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,347 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@29647f75" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3"
05 abr 2016 - 16:51:25,347 (main) DEBUG [DataNucleus.Datastore.Persist] - El statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" ya es batchable
05 abr 2016 - 16:51:25,347 (main) DEBUG [DataNucleus.Datastore.Persist] - Añadiendo statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" al batch para procesar (tamaño de batch = 1)
05 abr 2016 - 16:51:25,347 (main) DEBUG [DataNucleus.Datastore.Native] - BATCH [DELETE FROM `USUARIO` WHERE `NOMBREUSU`=<'Mikel'>]
05 abr 2016 - 16:51:25,347 (main) DEBUG [DataNucleus.Datastore] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = [1]) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@29647f75"
05 abr 2016 - 16:51:25,347 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:51:25,347 (main) DEBUG [DataNucleus.Persistence] - Manejar de relaciones : empezando
05 abr 2016 - 16:51:25,347 (main) DEBUG [DataNucleus.Persistence] - Manejar de relaciones : terminado
05 abr 2016 - 16:51:25,348 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:51:25,348 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:25,348 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:51:25,348 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:51:25,348 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@2f54a33d" (id="Asier") borrado de la Cache de nivel 2
05 abr 2016 - 16:51:25,348 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1018bde2" (id="Iker") borrado de la Cache de nivel 2
05 abr 2016 - 16:51:25,348 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@65b3f4a4" (id="Mikel") borrado de la Cache de nivel 2
05 abr 2016 - 16:51:25,348 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@7748410a]]
05 abr 2016 - 16:51:25,348 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:51:25,351 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7c83dc97 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@740773a3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@2f54a33d" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_DELETED"->""
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@2f54a33d" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@2f54a33d de StateManager[pc=main.Usuario@2f54a33d, lifecycle=P_DELETED]
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 3]
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@1018bde2" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_DELETED"->""
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@1018bde2" (id="main.Usuario:Iker") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@1018bde2 de StateManager[pc=main.Usuario@1018bde2, lifecycle=P_DELETED]
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Iker" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 2]
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@65b3f4a4" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_DELETED"->""
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@65b3f4a4" (id="main.Usuario:Mikel") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@65b3f4a4 de StateManager[pc=main.Usuario@65b3f4a4, lifecycle=P_DELETED]
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Mikel" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 5 ms
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:51:25,352 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:51:48,354 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:51:48,373 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 16:51:48,384 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:48,386 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:48,389 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 16:51:48,399 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:48,407 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:48,411 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 16:51:48,426 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:48,435 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:48,456 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 16:51:48,482 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 16:51:48,482 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 16:51:48,498 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 16:51:48,499 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:48,499 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:48,499 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:48,499 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:48,499 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:48,499 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:48,499 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:48,499 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:48,500 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 16:51:48,500 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:51:48,500 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 16:51:48,500 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 16:51:48,500 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 16:51:48,500 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 16:51:48,500 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 16:51:48,500 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 16:51:48,500 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 16:51:48,501 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:51:48,501 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:51:48,501 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 16:51:48,501 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 16:51:48,501 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:51:48,501 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:51:48,501 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:51:48,501 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 16:51:48,501 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 16:51:48,501 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 16:51:48,501 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 16:51:48,501 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 16:51:48,502 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 16:51:48,502 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 16:51:48,503 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 16:51:48,503 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 16:51:48,504 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 16:51:48,504 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 16:51:48,504 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 16:51:48,504 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 16:51:48,504 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 16:51:48,504 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 16:51:48,504 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 16:51:48,504 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 16:51:48,504 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 16:51:48,505 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 16:51:48,528 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Main, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 16:51:48,572 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:48,578 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:48,585 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 16:51:48,585 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:48,586 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 16:51:48,586 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 16:51:48,586 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 16:51:48,586 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 16:51:48,586 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 16:51:48,586 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 16:51:48,586 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 16:51:48,587 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 16:51:48,587 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:48,587 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 16:51:48,587 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 16:51:48,588 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 16:51:48,588 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 16:51:48,588 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 16:51:48,588 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 16:51:48,588 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 16:51:48,588 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 16:51:48,589 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:48,589 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 16:51:48,589 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 16:51:48,589 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 16:51:48,589 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 16:51:48,590 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 16:51:48,590 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 16:51:48,590 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 16:51:48,590 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 16:51:48,590 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:48,590 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 16:51:48,591 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 16:51:48,591 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 16:51:48,591 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 16:51:48,591 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 16:51:48,591 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 16:51:48,591 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 16:51:48,592 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:48,592 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:48,593 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 16:51:48,593 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 16:51:48,594 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,594 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,595 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 16:51:48,595 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,595 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,595 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,595 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,596 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 16:51:48,596 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,596 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,596 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,596 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,596 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,596 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 16:51:48,596 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,596 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,596 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,596 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,597 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:48,597 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 16:51:48,598 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 16:51:48,599 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 16:51:48,599 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 16:51:48,599 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 16:51:48,599 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 16:51:48,601 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 16:51:48,612 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 16:51:48,613 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 16:51:48,614 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:51:48,615 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:51:48,615 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 16:51:48,615 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 16:51:48,615 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:51:48,615 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:51:48,615 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:51:48,615 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 16:51:48,615 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 16:51:48,615 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 16:51:48,620 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 16:51:48,623 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 16:51:48,623 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 16:51:48,623 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 16:51:48,623 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 16:51:48,624 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 16:51:48,624 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 16:51:48,624 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 16:51:48,624 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 16:51:48,624 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 16:51:48,624 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 16:51:48,624 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 16:51:48,624 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 16:51:48,624 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 16:51:48,624 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 16:51:48,624 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 16:51:48,624 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 16:51:48,625 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 16:51:48,625 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 16:51:48,626 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 16:51:48,626 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:51:48,626 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:51:48,627 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 16:51:48,627 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 16:51:48,627 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 16:51:48,627 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 16:51:48,627 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 16:51:48,627 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 16:51:48,628 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 16:51:48,628 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 16:51:48,628 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 16:51:48,628 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 16:51:48,628 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 16:51:48,629 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 16:51:48,629 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 16:51:48,629 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 16:51:48,629 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 16:51:48,629 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 16:51:48,629 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 16:51:48,629 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:51:48,629 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 16:51:48,630 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:51:48,630 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 16:51:48,630 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 16:51:48,630 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 16:51:48,631 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 16:51:48,631 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 16:51:48,631 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 16:51:48,631 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 16:51:48,631 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 16:51:48,631 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 16:51:48,631 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 16:51:48,632 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 16:51:48,632 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 16:51:48,632 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 16:51:48,633 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 16:51:48,633 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 16:51:48,633 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 16:51:48,633 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:51:48,634 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 16:51:48,634 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 16:51:48,634 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 16:51:48,635 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 16:51:48,635 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 16:51:48,635 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 16:51:48,636 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 16:51:48,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:51:48,638 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 16:51:48,639 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 16:51:48,640 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 16:51:48,640 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 16:51:48,640 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 16:51:48,640 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 16:51:48,640 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:51:48,640 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:51:48,640 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 16:51:48,640 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 16:51:48,640 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 16:51:48,640 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 16:51:48,640 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 16:51:48,641 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:51:48,642 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 16:51:48,642 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 16:51:48,642 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 16:51:48,642 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 16:51:48,642 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 16:51:48,642 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 16:51:48,642 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 16:51:48,642 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 16:51:48,642 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 16:51:48,643 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 16:51:48,643 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 16:51:48,643 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 16:51:48,643 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 16:51:48,643 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 16:51:48,643 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 16:51:48,643 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 16:51:48,643 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 16:51:48,643 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 16:51:48,643 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 16:51:48,643 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 16:51:48,643 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:51:48,644 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 16:51:48,644 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:51:48,644 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 16:51:48,644 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 16:51:48,644 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 16:51:48,644 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 16:51:48,644 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 16:51:48,645 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 16:51:48,645 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 16:51:48,645 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 16:51:48,645 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 16:51:48,645 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:51:48,645 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:51:48,646 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 16:51:48,647 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 16:51:48,648 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:51:48,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 16:51:48,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 16:51:48,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 16:51:48,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 16:51:48,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 16:51:48,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 16:51:48,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 16:51:48,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 16:51:48,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 16:51:48,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 16:51:48,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 16:51:48,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 16:51:48,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 16:51:48,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 16:51:48,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 16:51:48,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 16:51:48,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 16:51:48,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 16:51:48,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 16:51:48,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 16:51:48,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 16:51:48,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 16:51:48,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 16:51:48,651 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 16:51:48,652 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 16:51:48,652 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 16:51:48,652 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 16:51:48,652 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 16:51:48,652 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 16:51:48,653 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:48,654 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:51:48,655 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 16:51:48,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 16:51:48,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 16:51:48,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:51:48,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:51:48,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 16:51:48,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 16:51:48,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 16:51:48,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 16:51:48,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 16:51:48,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 16:51:48,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 16:51:48,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 16:51:48,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 16:51:48,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 16:51:48,659 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 16:51:48,660 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 16:51:48,660 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:51:48,660 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 16:51:48,660 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:51:48,660 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 16:51:48,660 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 16:51:48,660 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 16:51:48,660 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 16:51:48,660 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 16:51:48,660 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 16:51:48,660 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 16:51:48,660 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 16:51:48,661 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 16:51:48,661 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 16:51:48,661 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 16:51:48,880 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 16:51:48,880 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 16:51:48,881 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 16:51:48,881 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 16:51:48,881 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 16:51:48,881 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 16:51:48,881 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 16:51:48,881 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 16:51:48,881 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 16:51:48,881 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 16:51:48,895 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:51:48,911 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 16:51:48,922 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:48,924 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:48,927 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 16:51:48,936 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:48,944 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:48,947 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 16:51:48,957 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:48,963 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:48,977 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 16:51:48,977 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 16:51:49,015 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:51:49,015 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 16:51:49,015 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 16:51:49,037 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:51:49,233 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 16:51:49,244 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,244 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,244 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,245 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,245 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,246 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,246 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,246 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,246 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,246 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,247 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,247 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,247 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,247 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,248 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,248 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,248 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,248 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,248 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,248 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,248 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,248 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,249 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,249 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,249 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,249 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,249 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,249 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,249 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,249 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,249 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,250 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,250 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,251 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,252 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,252 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,252 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,252 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,252 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,253 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,253 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,253 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,253 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,253 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,254 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,254 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,254 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,254 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,254 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,254 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,255 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,256 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,256 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,256 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,256 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,256 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:51:49,257 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,257 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,257 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,257 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:49,265 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 16:51:49,265 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 16:51:49,265 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 16:51:49,265 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 16:51:49,276 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459867909273`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,278 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459867909273`
05 abr 2016 - 16:51:49,280 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459867909273`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 16:51:49,324 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 44 ms
05 abr 2016 - 16:51:49,332 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 16:51:49,333 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459867909273`
05 abr 2016 - 16:51:49,333 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459867909273`
05 abr 2016 - 16:51:49,345 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 12 ms
05 abr 2016 - 16:51:49,346 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 16:51:49,346 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 16:51:49,346 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 16:51:49,346 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 16:51:49,346 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 16:51:49,346 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 16:51:49,347 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 16:51:49,347 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:51:49,347 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 16:51:49,347 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 16:51:49,347 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 16:51:49,347 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:51:49,347 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:51:49,347 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 16:51:49,347 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 16:51:49,347 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 16:51:49,347 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 16:51:49,348 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 16:51:49,348 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 16:51:49,348 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 16:51:49,348 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 16:51:49,348 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 16:51:49,348 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:51:49,348 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:51:49,349 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:49,350 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 16:51:49,355 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 16:51:49,379 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 16:51:49,379 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 16:51:49,391 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 16:51:49,391 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:49,391 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:49,391 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:49,391 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:49,391 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:49,391 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:49,391 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:49,391 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:49,391 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 16:51:49,391 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 16:51:49,392 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 16:51:49,393 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 16:51:49,393 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 16:51:49,393 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 16:51:49,393 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 16:51:49,393 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 16:51:49,393 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 16:51:49,393 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 16:51:49,397 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 16:51:49,398 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 16:51:49,402 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 16:51:49,402 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 16:51:49,402 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 16:51:49,402 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:51:49,402 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 16:51:49,402 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 16:51:49,403 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 16:51:49,403 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 16:51:49,403 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 16:51:49,403 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 16:51:49,403 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 16:51:49,403 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 16:51:49,403 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 16:51:49,403 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 16:51:49,403 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Main.class
05 abr 2016 - 16:51:49,403 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 16:51:49,403 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 16:51:49,403 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 16:51:49,403 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 16:51:49,403 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 16:51:49,403 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 8 ficheros (metadata/class) ...
05 abr 2016 - 16:51:49,427 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 16:51:49,427 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 16:51:49,427 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Main, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 16:51:49,428 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 16:51:49,429 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:49,429 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 16:51:49,429 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 16:51:49,429 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 16:51:49,429 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 16:51:49,430 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 16:51:49,430 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 16:51:49,430 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 16:51:49,430 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 16:51:49,430 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:49,431 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 16:51:49,431 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 16:51:49,431 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 16:51:49,431 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 16:51:49,431 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 16:51:49,431 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 16:51:49,431 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 16:51:49,463 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:49,466 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 16:51:49,466 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:49,466 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 16:51:49,466 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 16:51:49,466 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 16:51:49,467 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 16:51:49,467 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 16:51:49,467 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 16:51:49,467 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 16:51:49,467 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 16:51:49,468 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:49,468 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 16:51:49,468 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 16:51:49,468 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 16:51:49,468 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 16:51:49,468 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 16:51:49,468 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 16:51:49,469 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 16:51:49,469 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:49,474 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:49,479 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:49,480 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 16:51:49,480 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 16:51:49,481 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:51:49,481 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:51:49,481 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 16:51:49,481 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 16:51:49,482 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 16:51:49,482 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 16:51:49,482 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 16:51:49,482 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,482 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,482 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,482 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,482 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,484 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 16:51:49,484 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 16:51:49,484 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:51:49,484 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 16:51:49,485 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 16:51:49,485 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 16:51:49,485 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 16:51:49,485 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 16:51:49,485 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,485 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,485 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 16:51:49,486 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:51:49,486 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:51:49,486 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 16:51:49,486 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 16:51:49,486 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 16:51:49,486 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 16:51:49,486 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 16:51:49,486 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,487 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,487 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,487 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,487 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 16:51:49,487 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 16:51:49,488 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:51:49,488 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 16:51:49,488 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 16:51:49,488 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 16:51:49,488 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 16:51:49,488 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 16:51:49,488 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,488 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,488 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,488 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,489 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:49,489 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 16:51:49,489 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 16:51:49,490 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 16:51:49,491 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 16:51:49,491 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 16:51:49,491 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 16:51:49,491 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 8 ficheros (metadata/class)
05 abr 2016 - 16:51:49,494 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 16:51:49,494 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:49,494 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 16:51:49,497 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 16:51:49,497 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 16:51:49,497 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:51:49,499 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 16:51:49,499 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:51:49,499 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:51:49,499 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 16:51:49,499 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 16:51:49,499 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 16:51:49,500 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 16:51:49,500 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:49,500 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 16:51:49,502 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 16:51:49,502 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 16:51:49,502 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:51:49,503 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 16:51:49,503 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:51:49,503 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:51:49,504 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 16:51:49,504 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 16:51:49,504 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 16:51:49,509 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 16:51:49,510 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,511 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:49,512 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:51:49,512 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,513 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:51:49,513 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,513 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,513 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 16:51:49,513 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,513 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,513 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 16:51:49,514 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,514 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,514 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,514 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,515 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,515 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,515 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,515 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,515 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,515 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:49,515 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 16:51:49,515 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 16:51:49,515 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,515 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:49,519 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 16:51:49,519 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:49,519 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,519 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,519 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 16:51:49,520 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:49,520 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 16:51:49,520 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:49,520 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,520 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,520 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,520 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:49,520 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,521 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 16:51:49,521 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 16:51:49,521 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 16:51:49,521 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,521 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:49,521 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,521 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,521 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 16:51:49,521 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:49,521 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 16:51:49,522 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:49,522 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,522 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,522 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,522 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:49,522 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 16:51:49,522 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 16:51:49,522 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:49,523 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,523 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,523 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,523 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:49,523 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 16:51:49,525 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,525 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:49,525 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,525 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:49,525 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,526 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,526 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 16:51:49,526 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,526 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,526 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,526 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:51:49,526 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,528 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,528 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:51:49,528 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 16:51:49,529 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,530 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:49,530 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,530 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,530 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:49,530 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:49,530 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:51:49,532 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 16:51:49,532 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c" y isolacion "serializable"
05 abr 2016 - 16:51:49,533 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:51:49,534 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 16:51:49,568 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 34 ms
05 abr 2016 - 16:51:49,568 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 16:51:49,569 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 16:51:49,570 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 16:51:49,571 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 16:51:49,572 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 16:51:49,573 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:51:49,574 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 16:51:49,575 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 16:51:49,576 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:51:49,579 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 16:51:49,583 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 16:51:49,585 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 16:51:49,586 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 16:51:49,587 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 16:51:49,588 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 16:51:49,589 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 16:51:49,590 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 16:51:49,591 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 16:51:49,592 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 16:51:49,592 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 16:51:49,593 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 16:51:49,594 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:51:49,596 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:51:49,598 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:51:49,599 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:51:49,600 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:51:49,602 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:51:49,603 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:51:49,604 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:51:49,605 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:51:49,607 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:51:49,608 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:51:49,609 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:51:49,610 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:51:49,611 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:51:49,612 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:51:49,612 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 16:51:49,613 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 16:51:49,613 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:51:49,613 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:49,614 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 16:51:49,614 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 16:51:49,614 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 16:51:49,615 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 16:51:52,530 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:51:52,546 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 16:51:52,557 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:52,560 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:52,563 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 16:51:52,572 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:52,580 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:52,583 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 16:51:52,597 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:52,603 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:51:52,613 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 16:51:52,622 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 16:51:52,650 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 16:51:52,650 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 16:51:52,667 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 16:51:52,667 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:52,667 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:52,667 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:52,667 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:52,667 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:52,667 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:52,667 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:52,668 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 16:51:52,668 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 16:51:52,668 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:51:52,668 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Character,java.lang.Integer
05 abr 2016 - 16:51:52,668 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 16:51:52,668 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 16:51:52,668 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 16:51:52,668 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 16:51:52,668 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 16:51:52,668 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 16:51:52,668 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.String,java.lang.Double
05 abr 2016 - 16:51:52,668 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.nio.ByteBuffer,java.lang.String,java.lang.Long
05 abr 2016 - 16:51:52,669 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 16:51:52,669 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 16:51:52,669 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 16:51:52,669 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 16:51:52,669 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 16:51:52,669 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 16:51:52,669 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.lang.String,java.sql.Timestamp,[Ljava.lang.Object;,java.util.Date
05 abr 2016 - 16:51:52,669 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 16:51:52,669 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
05 abr 2016 - 16:51:52,669 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 16:51:52,669 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 16:51:52,670 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 16:51:52,670 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 16:51:52,670 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 16:51:52,671 (main) DEBUG [DataNucleus.MetaData] - Listener found initialisation for persistable class main.Usuario
05 abr 2016 - 16:51:52,672 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /META-INF/package.jdo
05 abr 2016 - 16:51:52,672 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:52,672 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /package.jdo
05 abr 2016 - 16:51:52,672 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/package.jdo
05 abr 2016 - 16:51:52,673 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main.jdo
05 abr 2016 - 16:51:52,673 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/Usuario.jdo
05 abr 2016 - 16:51:52,673 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Usuario"
05 abr 2016 - 16:51:52,703 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:52,715 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 16:51:52,716 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 16:51:52,716 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:51:52,716 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 16:51:52,716 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 16:51:52,717 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 16:51:52,717 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 16:51:52,717 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 16:51:52,718 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,718 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,718 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,718 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,718 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,719 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /META-INF/package.jdo
05 abr 2016 - 16:51:52,720 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:52,720 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /package.jdo
05 abr 2016 - 16:51:52,720 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/package.jdo
05 abr 2016 - 16:51:52,721 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main.jdo
05 abr 2016 - 16:51:52,721 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/Reproduccion.jdo
05 abr 2016 - 16:51:52,721 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Reproduccion"
05 abr 2016 - 16:51:52,721 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:52,722 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 16:51:52,722 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:51:52,723 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:51:52,723 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 16:51:52,723 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 16:51:52,723 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 16:51:52,724 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 16:51:52,724 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 16:51:52,724 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,724 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,724 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,724 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,724 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,725 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /META-INF/package.jdo
05 abr 2016 - 16:51:52,725 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:52,725 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /package.jdo
05 abr 2016 - 16:51:52,726 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/package.jdo
05 abr 2016 - 16:51:52,726 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main.jdo
05 abr 2016 - 16:51:52,726 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/Cancion.jdo
05 abr 2016 - 16:51:52,726 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Cancion"
05 abr 2016 - 16:51:52,726 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:52,728 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 16:51:52,728 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:51:52,729 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:51:52,729 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 16:51:52,729 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 16:51:52,729 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 16:51:52,730 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 16:51:52,730 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 16:51:52,730 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,730 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,730 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,730 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:52,731 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 16:51:52,733 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 16:51:52,761 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:51:52,761 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 16:51:52,761 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 16:51:52,777 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:51:52,958 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 16:51:52,968 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,968 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,968 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,969 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,969 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,970 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,970 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,970 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,970 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,970 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,971 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,971 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,971 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,975 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,975 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,976 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,976 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,976 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,976 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,977 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,977 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,977 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,977 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,977 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,977 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,977 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,977 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,977 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,978 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,978 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,978 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,978 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,978 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,978 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,978 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,978 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,978 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,978 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,978 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,978 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,979 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,979 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,979 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,979 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,979 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,979 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,979 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,980 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:51:52,980 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,980 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,980 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,980 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:51:52,988 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 16:51:52,988 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 16:51:52,988 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 16:51:52,988 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 16:51:53,000 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459867912997`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,001 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459867912997`
05 abr 2016 - 16:51:53,003 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459867912997`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 16:51:53,053 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 50 ms
05 abr 2016 - 16:51:53,064 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 16:51:53,065 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459867912997`
05 abr 2016 - 16:51:53,065 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459867912997`
05 abr 2016 - 16:51:53,081 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 16 ms
05 abr 2016 - 16:51:53,082 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 16:51:53,082 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 16:51:53,082 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 16:51:53,083 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 16:51:53,083 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 16:51:53,083 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 16:51:53,083 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 16:51:53,083 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:51:53,084 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 16:51:53,084 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 16:51:53,084 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 16:51:53,084 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:51:53,084 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:51:53,085 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 16:51:53,085 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 16:51:53,085 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 16:51:53,085 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 16:51:53,085 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 16:51:53,085 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 16:51:53,085 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 16:51:53,086 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 16:51:53,086 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 16:51:53,086 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:51:53,086 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:51:53,087 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:53,089 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 16:51:53,092 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 16:51:53,093 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 16:51:53,099 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 16:51:53,099 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 16:51:53,099 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 16:51:53,099 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:51:53,099 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 16:51:53,099 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 16:51:53,099 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 16:51:53,099 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 16:51:53,099 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 16:51:53,100 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 16:51:53,100 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 16:51:53,121 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@78dd667e"
05 abr 2016 - 16:51:53,122 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 del tipo "soft" inicializada
05 abr 2016 - 16:51:53,124 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:53,125 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:51:53,125 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@7d3a22a9"
05 abr 2016 - 16:51:53,137 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 16:51:53,138 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:53,140 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 16:51:53,141 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 16:51:53,145 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /META-INF/package.jdo
05 abr 2016 - 16:51:53,145 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:53,146 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /package.jdo
05 abr 2016 - 16:51:53,146 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/package.jdo
05 abr 2016 - 16:51:53,146 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main.jdo
05 abr 2016 - 16:51:53,147 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/Artista.jdo
05 abr 2016 - 16:51:53,147 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Artista"
05 abr 2016 - 16:51:53,147 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:51:53,148 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 16:51:53,148 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 16:51:53,148 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:51:53,149 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 16:51:53,149 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 16:51:53,149 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 16:51:53,149 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 16:51:53,150 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 16:51:53,150 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:53,150 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:51:53,150 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 16:51:53,150 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 16:51:53,151 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:53,151 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 16:51:53,157 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 16:51:53,157 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 16:51:53,157 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:51:53,159 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 16:51:53,160 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:51:53,160 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:51:53,160 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 16:51:53,160 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 16:51:53,160 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 16:51:53,161 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 16:51:53,161 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 16:51:53,161 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 16:51:53,163 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 16:51:53,163 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 16:51:53,164 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:51:53,166 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 16:51:53,167 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:51:53,167 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:51:53,167 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 16:51:53,167 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 16:51:53,167 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 16:51:53,173 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 16:51:53,173 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,174 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,175 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:51:53,175 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,175 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,175 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:51:53,175 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,176 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 16:51:53,176 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,177 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:53,177 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 16:51:53,177 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,178 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,178 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,178 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,178 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,178 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,178 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,178 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,178 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,178 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:53,178 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 16:51:53,179 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 16:51:53,180 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:53,180 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,181 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:53,181 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 16:51:53,181 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 16:51:53,181 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,181 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:53,181 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,181 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,183 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 16:51:53,183 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,184 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,185 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 16:51:53,185 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:53,185 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 16:51:53,185 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:51:53,185 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,185 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,185 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,185 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:53,185 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,185 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 16:51:53,186 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 16:51:53,187 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,187 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:53,188 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,188 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,188 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,188 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,188 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:51:53,188 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,188 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,188 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,188 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:51:53,188 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,188 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,188 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:51:53,189 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,189 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:53,189 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,189 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:51:53,190 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,191 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,191 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 16:51:53,191 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,191 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,191 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,192 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:53,192 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,192 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,192 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 16:51:53,192 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,192 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:53,192 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,192 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:51:53,192 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,192 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:51:53,193 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 16:51:53,193 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,193 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 16:51:53,196 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 16:51:53,196 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8" y isolacion "serializable"
05 abr 2016 - 16:51:53,197 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:51:53,198 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 16:51:53,234 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 36 ms
05 abr 2016 - 16:51:53,234 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 16:51:53,235 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 16:51:53,236 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 16:51:53,237 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 16:51:53,238 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:51:53,239 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:51:53,240 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 16:51:53,241 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 16:51:53,242 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 16:51:53,245 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 16:51:53,250 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 16:51:53,252 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 16:51:53,253 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 16:51:53,253 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 16:51:53,254 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 16:51:53,255 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 16:51:53,256 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 16:51:53,257 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 16:51:53,258 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 16:51:53,259 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 16:51:53,260 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 16:51:53,262 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:51:53,264 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:51:53,265 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:51:53,267 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:51:53,268 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:51:53,270 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:51:53,271 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:51:53,272 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:51:53,274 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:51:53,275 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:51:53,276 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:51:53,277 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:51:53,278 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:51:53,280 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:51:53,281 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:51:53,281 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 16:51:53,281 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 16:51:53,281 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:51:53,282 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:53,286 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@7d3a22a9" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 16:51:53,297 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:51:53,297 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:53,298 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:51:53,298 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,307 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 16:51:53,308 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943781219>,<false>,<'AxiElorza'>,<'1234'>,<'Asier'>)
05 abr 2016 - 16:51:53,312 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 4 ms (numero de lineas cambiado = 1) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8"
05 abr 2016 - 16:51:53,312 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar insertPostProcessing para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:53,313 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar insertPostProcessing para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:53,313 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar insertPostProcessing para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:53,313 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8"
05 abr 2016 - 16:51:53,313 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar postInsert para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:53,313 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaReproduccion" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaReproduccion" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar postInsert para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.historialRep" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "historialRep" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar postInsert para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaAmigos" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaAmigos" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@130d63be"
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 16:51:53,320 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@130d63be" (id="Iker") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:53,321 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@130d63be" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 16:51:53,321 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,321 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@293a5bf6" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 16:51:53,321 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943008503>,<true>,<'IkerCalzada'>,<'5678'>,<'Iker'>)
05 abr 2016 - 16:51:53,322 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 1) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@293a5bf6"
05 abr 2016 - 16:51:53,322 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar insertPostProcessing para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:53,322 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar insertPostProcessing para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:53,322 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar insertPostProcessing para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:53,322 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@293a5bf6"
05 abr 2016 - 16:51:53,322 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar postInsert para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:53,322 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaReproduccion" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:53,322 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,322 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaReproduccion" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:53,323 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar postInsert para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:53,323 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.historialRep" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:53,323 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,323 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "historialRep" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:53,323 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar postInsert para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:53,323 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaAmigos" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:53,323 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,323 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaAmigos" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:53,323 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@74f0ea28"
05 abr 2016 - 16:51:53,323 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 16:51:53,323 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@74f0ea28" (id="Mikel") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:53,324 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@74f0ea28" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 16:51:53,324 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,324 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3c19aaa5" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 16:51:53,324 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943556699>,<false>,<'MikelLarrea'>,<'91011'>,<'Mikel'>)
05 abr 2016 - 16:51:53,325 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 1) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3c19aaa5"
05 abr 2016 - 16:51:53,325 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar insertPostProcessing para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:53,325 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar insertPostProcessing para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:53,325 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar insertPostProcessing para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:53,325 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3c19aaa5"
05 abr 2016 - 16:51:53,325 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar postInsert para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:53,325 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaReproduccion" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:53,325 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,325 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaReproduccion" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:53,325 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar postInsert para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:53,325 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.historialRep" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:53,325 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,326 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "historialRep" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:53,326 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar postInsert para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:53,326 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaAmigos" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:51:53,326 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,326 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaAmigos" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:51:53,326 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:51:53,326 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 3 objetos registrados
05 abr 2016 - 16:51:53,328 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.query.cache.SoftQueryCompilationCache" inicializada
05 abr 2016 - 16:51:53,328 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryDatastoreCompilationCache" inicializada
05 abr 2016 - 16:51:53,329 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryResultsCache" inicializada
05 abr 2016 - 16:51:53,329 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:53,329 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:51:53,329 (main) DEBUG [DataNucleus.Persistence] - Performing reachability algorithm on object with id "Asier"
05 abr 2016 - 16:51:53,329 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") usado de la Cache nivel 1 (loadedFlags="[YYYYYYYYY]") [tamaño = 3]
05 abr 2016 - 16:51:53,330 (main) DEBUG [DataNucleus.Persistence] - Object "main.Usuario@7d3a22a9" (id="Asier") estado de vida "P_NEW" añadido a la lista de alcanzables al commit.
05 abr 2016 - 16:51:53,330 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:53,330 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:53,330 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:53,330 (main) DEBUG [DataNucleus.Persistence] - Performing reachability algorithm on object with id "Iker"
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") usado de la Cache nivel 1 (loadedFlags="[YYYYYYYYY]") [tamaño = 3]
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Persistence] - Object "main.Usuario@130d63be" (id="Iker") estado de vida "P_NEW" añadido a la lista de alcanzables al commit.
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Persistence] - Performing reachability algorithm on object with id "Mikel"
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") usado de la Cache nivel 1 (loadedFlags="[YYYYYYYYY]") [tamaño = 3]
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Persistence] - Object "main.Usuario@74f0ea28" (id="Mikel") estado de vida "P_NEW" añadido a la lista de alcanzables al commit.
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:53,331 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:51:53,332 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="Asier") añadido a la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="")
05 abr 2016 - 16:51:53,333 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@74f0ea28" (id="Mikel") añadido a la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="")
05 abr 2016 - 16:51:53,333 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@130d63be" (id="Iker") añadido a la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="")
05 abr 2016 - 16:51:53,333 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc]]
05 abr 2016 - 16:51:53,333 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:51:53,337 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:53,338 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,339 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_NEW"->"HOLLOW"
05 abr 2016 - 16:51:53,339 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:53,339 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_NEW"->"HOLLOW"
05 abr 2016 - 16:51:53,339 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:53,339 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_NEW"->"HOLLOW"
05 abr 2016 - 16:51:53,339 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:53,339 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 13 ms
05 abr 2016 - 16:51:53,340 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@7d3a22a9 de StateManager[pc=main.Usuario@7d3a22a9, lifecycle=HOLLOW]
05 abr 2016 - 16:51:53,340 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 3]
05 abr 2016 - 16:51:53,340 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@74f0ea28 de StateManager[pc=main.Usuario@74f0ea28, lifecycle=HOLLOW]
05 abr 2016 - 16:51:53,340 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Mikel" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 2]
05 abr 2016 - 16:51:53,340 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@130d63be de StateManager[pc=main.Usuario@130d63be, lifecycle=HOLLOW]
05 abr 2016 - 16:51:53,340 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Iker" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:51:53,340 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:51:53,341 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:51:53,342 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@235834f2"
05 abr 2016 - 16:51:53,342 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:53,342 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:51:53,351 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario"
05 abr 2016 - 16:51:53,357 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 6 ms
05 abr 2016 - 16:51:53,357 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [symbols: this type=main.Usuario]
05 abr 2016 - 16:51:53,357 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario" para base de datos
05 abr 2016 - 16:51:53,372 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 15
05 abr 2016 - 16:51:53,372 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`"
05 abr 2016 - 16:51:53,373 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:51:53,374 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@6aaceffd, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:53,374 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:51:53,374 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,374 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario" ...
05 abr 2016 - 16:51:53,374 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@37271612"
05 abr 2016 - 16:51:53,374 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`
05 abr 2016 - 16:51:53,375 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 1 ms
05 abr 2016 - 16:51:53,378 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 4 ms
05 abr 2016 - 16:51:53,380 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 16:51:53,380 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@10d68fcd" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:51:53,381 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@10d68fcd" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:53,381 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Asier" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@10d68fcd"
05 abr 2016 - 16:51:53,381 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Iker" no esta en la Cache de nivel 1 [tamaño = 1]
05 abr 2016 - 16:51:53,381 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1ebd319f" (id="main.Usuario:Iker") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:51:53,381 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@1ebd319f" (id="Iker") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:53,381 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Iker" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@1ebd319f"
05 abr 2016 - 16:51:53,382 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Mikel" no esta en la Cache de nivel 1 [tamaño = 2]
05 abr 2016 - 16:51:53,382 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@3c0be339" (id="main.Usuario:Mikel") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:51:53,382 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@3c0be339" (id="Mikel") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:53,382 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Mikel" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@3c0be339"
05 abr 2016 - 16:51:53,382 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:51:53,382 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:51:53,382 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:53,382 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:51:53,382 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:51:53,382 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@6aaceffd]]
05 abr 2016 - 16:51:53,382 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:51:53,383 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@10d68fcd" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_CLEAN"->"HOLLOW"
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@10d68fcd" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@1ebd319f" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_CLEAN"->"HOLLOW"
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@1ebd319f" (id="main.Usuario:Iker") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@3c0be339" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_CLEAN"->"HOLLOW"
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@3c0be339" (id="main.Usuario:Mikel") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 2 ms
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@1ebd319f de StateManager[pc=main.Usuario@1ebd319f, lifecycle=HOLLOW]
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Iker" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 3]
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@10d68fcd de StateManager[pc=main.Usuario@10d68fcd, lifecycle=HOLLOW]
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 2]
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@3c0be339 de StateManager[pc=main.Usuario@3c0be339, lifecycle=HOLLOW]
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Mikel" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:51:53,384 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:51:53,385 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@6e509ffa"
05 abr 2016 - 16:51:53,385 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:53,385 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:51:53,386 (main) DEBUG [DataNucleus.Query] - JDOQL Single-String de "UPDATE Usuario.class SET ventajoso==false WHERE this.nombreUsu == 'Asier'"
05 abr 2016 - 16:51:53,387 (main) INFO  [DataNucleus.JDO] - Exception thrown
JDOQL Single-String Query tiene que empezar con SELECT
org.datanucleus.exceptions.NucleusUserException: JDOQL Single-String Query tiene que empezar con SELECT
	at org.datanucleus.query.JDOQLSingleStringParser$Compiler.compileSelect(JDOQLSingleStringParser.java:146)
	at org.datanucleus.query.JDOQLSingleStringParser$Compiler.compile(JDOQLSingleStringParser.java:117)
	at org.datanucleus.query.JDOQLSingleStringParser$Compiler.access$000(JDOQLSingleStringParser.java:106)
	at org.datanucleus.query.JDOQLSingleStringParser.parse(JDOQLSingleStringParser.java:98)
	at org.datanucleus.store.query.AbstractJDOQLQuery.<init>(AbstractJDOQLQuery.java:120)
	at org.datanucleus.store.rdbms.query.JDOQLQuery.<init>(JDOQLQuery.java:135)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:612)
	at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:330)
	at org.datanucleus.store.query.QueryManagerImpl.newQuery(QueryManagerImpl.java:239)
	at org.datanucleus.api.jdo.JDOPersistenceManager.newQuery(JDOPersistenceManager.java:1320)
	at org.datanucleus.api.jdo.JDOPersistenceManager.newQuery(JDOPersistenceManager.java:1266)
	at main.Main.main(Unknown Source)
05 abr 2016 - 16:51:53,389 (main) DEBUG [DataNucleus.Transaction] - Haciendo rollback de la transacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:51:53,389 (main) DEBUG [DataNucleus.Transaction] - Rolling back [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:53,389 (main) DEBUG [DataNucleus.Transaction] - Transacción rolled back en 0 ms
05 abr 2016 - 16:51:53,389 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:51:53,389 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:51:53,389 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@11fc564b"
05 abr 2016 - 16:51:53,389 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:53,389 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:51:53,390 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'iker'"
05 abr 2016 - 16:51:53,397 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 6 ms
05 abr 2016 - 16:51:53,397 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [filter:DyadicExpression{PrimaryExpression{this.nombreUsu}  =  Literal{iker}}]
  [symbols: this type=main.Usuario]
05 abr 2016 - 16:51:53,397 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'iker'" para base de datos
05 abr 2016 - 16:51:53,401 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 4
05 abr 2016 - 16:51:53,401 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario WHERE this.nombreUsu == 'iker' Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0` WHERE `A0`.`NOMBREUSU` = 'iker'"
05 abr 2016 - 16:51:53,402 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@c03cf28 [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:51:53,403 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@1329eff, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:53,403 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@c03cf28 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@6497b078, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:51:53,403 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@c03cf28 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@6497b078, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,403 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'iker'" ...
05 abr 2016 - 16:51:53,403 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@46fa7c39"
05 abr 2016 - 16:51:53,403 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0` WHERE `A0`.`NOMBREUSU` = 'iker'
05 abr 2016 - 16:51:53,404 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 1 ms
05 abr 2016 - 16:51:53,404 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 1 ms
05 abr 2016 - 16:51:53,404 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:51:53,404 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:51:53,404 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:53,404 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:51:53,404 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:51:53,405 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@1329eff]]
05 abr 2016 - 16:51:53,405 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@c03cf28 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@6497b078, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:51:53,405 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@c03cf28 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@6497b078, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:53,406 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@c03cf28 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@6497b078, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,406 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 2 ms
05 abr 2016 - 16:51:53,406 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:51:53,406 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:51:53,406 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@5f683daf"
05 abr 2016 - 16:51:53,406 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:53,406 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:51:53,406 (main) DEBUG [DataNucleus.Query] - Query "SELECT FROM main.Usuario FetchPlan [default]" de lenguaje "JDOQL" existe, por eso utilizamos la compilacion general de antes.
05 abr 2016 - 16:51:53,406 (main) DEBUG [DataNucleus.Query] - Query "SELECT FROM main.Usuario FetchPlan [default]" de lenguaje "JDOQL" para la base de datos "rdbms-mysql" existe, por eso utilizamos la compilacion de datastore de antes
05 abr 2016 - 16:51:53,407 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:51:53,408 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@6c779568, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:51:53,408 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:51:53,408 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,408 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario" ...
05 abr 2016 - 16:51:53,408 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@2e1d27ba"
05 abr 2016 - 16:51:53,408 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`
05 abr 2016 - 16:51:53,408 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 0 ms
05 abr 2016 - 16:51:53,409 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 1 ms
05 abr 2016 - 16:51:53,409 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 16:51:53,409 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@61d6015a" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:51:53,409 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@61d6015a" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:53,409 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Asier" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@61d6015a"
05 abr 2016 - 16:51:53,409 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Iker" no esta en la Cache de nivel 1 [tamaño = 1]
05 abr 2016 - 16:51:53,409 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@2525ff7e" (id="main.Usuario:Iker") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:51:53,409 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@2525ff7e" (id="Iker") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:53,409 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Iker" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@2525ff7e"
05 abr 2016 - 16:51:53,410 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Mikel" no esta en la Cache de nivel 1 [tamaño = 2]
05 abr 2016 - 16:51:53,410 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@524d6d96" (id="main.Usuario:Mikel") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:51:53,410 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@524d6d96" (id="Mikel") ha sido puesto en la cache transaccional
05 abr 2016 - 16:51:53,410 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Mikel" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@524d6d96"
05 abr 2016 - 16:51:53,410 (main) DEBUG [DataNucleus.Persistence] - Borrando el objeto de persistencia : "main.Usuario@61d6015a"
05 abr 2016 - 16:51:53,410 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@61d6015a" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_CLEAN"->"P_DELETED"
05 abr 2016 - 16:51:53,410 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:51:53,410 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:53,412 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@61d6015a" va a ser borrado de la tabla "`USUARIO`"
05 abr 2016 - 16:51:53,412 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@61d6015a" va a llamar preDelete para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:53,413 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@61d6015a" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,415 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,415 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@29647f75" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794"
05 abr 2016 - 16:51:53,416 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAREPRODUCCION` WHERE `NOMBREUSU_OID`=<'Asier'>
05 abr 2016 - 16:51:53,417 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@29647f75"
05 abr 2016 - 16:51:53,417 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@29647f75"
05 abr 2016 - 16:51:53,417 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@61d6015a" va a llamar preDelete para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:53,417 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@61d6015a" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,417 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,418 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@865dd6" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794"
05 abr 2016 - 16:51:53,418 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_HISTORIALREP` WHERE `NOMBREUSU_OID`=<'Asier'>
05 abr 2016 - 16:51:53,418 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@865dd6"
05 abr 2016 - 16:51:53,418 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@865dd6"
05 abr 2016 - 16:51:53,418 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@61d6015a" va a llamar preDelete para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:53,419 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@61d6015a" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,419 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,419 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@62e7f11d" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794"
05 abr 2016 - 16:51:53,419 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAAMIGOS` WHERE `NOMBREUSU_OID`=<'Asier'>
05 abr 2016 - 16:51:53,420 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@62e7f11d"
05 abr 2016 - 16:51:53,420 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@62e7f11d"
05 abr 2016 - 16:51:53,420 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,420 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2abf4075" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794"
05 abr 2016 - 16:51:53,420 (main) DEBUG [DataNucleus.Datastore.Persist] - El statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" ya es batchable
05 abr 2016 - 16:51:53,421 (main) DEBUG [DataNucleus.Datastore.Persist] - Añadiendo statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" al batch para procesar (tamaño de batch = 1)
05 abr 2016 - 16:51:53,421 (main) DEBUG [DataNucleus.Persistence] - Borrando el objeto de persistencia : "main.Usuario@2525ff7e"
05 abr 2016 - 16:51:53,421 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@2525ff7e" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_CLEAN"->"P_DELETED"
05 abr 2016 - 16:51:53,421 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:51:53,421 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:53,421 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@2525ff7e" va a ser borrado de la tabla "`USUARIO`"
05 abr 2016 - 16:51:53,421 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@2525ff7e" va a llamar preDelete para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:53,422 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@2525ff7e" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,422 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,422 (main) DEBUG [DataNucleus.Datastore.Native] - BATCH [DELETE FROM `USUARIO` WHERE `NOMBREUSU`=<'Asier'>]
05 abr 2016 - 16:51:53,425 (main) DEBUG [DataNucleus.Datastore] - Tiempo de cumplir = 3 ms (numero de lineas cambiado = [1]) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2abf4075"
05 abr 2016 - 16:51:53,425 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@77eca502" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794"
05 abr 2016 - 16:51:53,426 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAREPRODUCCION` WHERE `NOMBREUSU_OID`=<'Iker'>
05 abr 2016 - 16:51:53,426 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@77eca502"
05 abr 2016 - 16:51:53,426 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@77eca502"
05 abr 2016 - 16:51:53,426 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@2525ff7e" va a llamar preDelete para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:53,426 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@2525ff7e" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,426 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,426 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@61386958" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794"
05 abr 2016 - 16:51:53,427 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_HISTORIALREP` WHERE `NOMBREUSU_OID`=<'Iker'>
05 abr 2016 - 16:51:53,427 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@61386958"
05 abr 2016 - 16:51:53,427 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@61386958"
05 abr 2016 - 16:51:53,427 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@2525ff7e" va a llamar preDelete para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:53,427 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@2525ff7e" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,427 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,427 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@49dc7102" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794"
05 abr 2016 - 16:51:53,427 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAAMIGOS` WHERE `NOMBREUSU_OID`=<'Iker'>
05 abr 2016 - 16:51:53,428 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@49dc7102"
05 abr 2016 - 16:51:53,428 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@49dc7102"
05 abr 2016 - 16:51:53,428 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,428 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@10959ece" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794"
05 abr 2016 - 16:51:53,428 (main) DEBUG [DataNucleus.Datastore.Persist] - El statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" ya es batchable
05 abr 2016 - 16:51:53,428 (main) DEBUG [DataNucleus.Datastore.Persist] - Añadiendo statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" al batch para procesar (tamaño de batch = 1)
05 abr 2016 - 16:51:53,428 (main) DEBUG [DataNucleus.Persistence] - Borrando el objeto de persistencia : "main.Usuario@524d6d96"
05 abr 2016 - 16:51:53,428 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@524d6d96" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_CLEAN"->"P_DELETED"
05 abr 2016 - 16:51:53,428 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:51:53,429 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:53,429 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@524d6d96" va a ser borrado de la tabla "`USUARIO`"
05 abr 2016 - 16:51:53,429 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@524d6d96" va a llamar preDelete para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:51:53,429 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@524d6d96" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,429 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,429 (main) DEBUG [DataNucleus.Datastore.Native] - BATCH [DELETE FROM `USUARIO` WHERE `NOMBREUSU`=<'Iker'>]
05 abr 2016 - 16:51:53,430 (main) DEBUG [DataNucleus.Datastore] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = [1]) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@10959ece"
05 abr 2016 - 16:51:53,430 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3e6ef8ad" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794"
05 abr 2016 - 16:51:53,430 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAREPRODUCCION` WHERE `NOMBREUSU_OID`=<'Mikel'>
05 abr 2016 - 16:51:53,430 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3e6ef8ad"
05 abr 2016 - 16:51:53,430 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3e6ef8ad"
05 abr 2016 - 16:51:53,430 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@524d6d96" va a llamar preDelete para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:51:53,430 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@524d6d96" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,431 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,431 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3d1cfad4" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794"
05 abr 2016 - 16:51:53,431 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_HISTORIALREP` WHERE `NOMBREUSU_OID`=<'Mikel'>
05 abr 2016 - 16:51:53,431 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3d1cfad4"
05 abr 2016 - 16:51:53,431 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3d1cfad4"
05 abr 2016 - 16:51:53,431 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@524d6d96" va a llamar preDelete para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:51:53,432 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@524d6d96" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:51:53,432 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,432 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2e55dd0c" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794"
05 abr 2016 - 16:51:53,432 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAAMIGOS` WHERE `NOMBREUSU_OID`=<'Mikel'>
05 abr 2016 - 16:51:53,432 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2e55dd0c"
05 abr 2016 - 16:51:53,432 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2e55dd0c"
05 abr 2016 - 16:51:53,432 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,432 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@378542de" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794"
05 abr 2016 - 16:51:53,432 (main) DEBUG [DataNucleus.Datastore.Persist] - El statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" ya es batchable
05 abr 2016 - 16:51:53,432 (main) DEBUG [DataNucleus.Datastore.Persist] - Añadiendo statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" al batch para procesar (tamaño de batch = 1)
05 abr 2016 - 16:51:53,433 (main) DEBUG [DataNucleus.Datastore.Native] - BATCH [DELETE FROM `USUARIO` WHERE `NOMBREUSU`=<'Mikel'>]
05 abr 2016 - 16:51:53,433 (main) DEBUG [DataNucleus.Datastore] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = [1]) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@378542de"
05 abr 2016 - 16:51:53,433 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:51:53,433 (main) DEBUG [DataNucleus.Persistence] - Manejar de relaciones : empezando
05 abr 2016 - 16:51:53,433 (main) DEBUG [DataNucleus.Persistence] - Manejar de relaciones : terminado
05 abr 2016 - 16:51:53,433 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:51:53,433 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:51:53,433 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:51:53,433 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:51:53,433 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@61d6015a" (id="Asier") borrado de la Cache de nivel 2
05 abr 2016 - 16:51:53,433 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@2525ff7e" (id="Iker") borrado de la Cache de nivel 2
05 abr 2016 - 16:51:53,433 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@524d6d96" (id="Mikel") borrado de la Cache de nivel 2
05 abr 2016 - 16:51:53,434 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@6c779568]]
05 abr 2016 - 16:51:53,434 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:51:53,438 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@6f27a732 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@f381794, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@61d6015a" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_DELETED"->""
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@61d6015a" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@61d6015a de StateManager[pc=main.Usuario@61d6015a, lifecycle=P_DELETED]
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 3]
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@2525ff7e" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_DELETED"->""
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@2525ff7e" (id="main.Usuario:Iker") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@2525ff7e de StateManager[pc=main.Usuario@2525ff7e, lifecycle=P_DELETED]
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Iker" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 2]
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@524d6d96" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_DELETED"->""
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@524d6d96" (id="main.Usuario:Mikel") fue ser borrado de la cache transactional
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@524d6d96 de StateManager[pc=main.Usuario@524d6d96, lifecycle=P_DELETED]
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Mikel" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 6 ms
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:51:53,439 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:59:07,799 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:59:07,818 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 16:59:07,831 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:07,834 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:07,836 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 16:59:07,846 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:07,854 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:07,857 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 16:59:07,868 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:07,874 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:07,896 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 16:59:07,922 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 16:59:07,923 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 16:59:07,937 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 16:59:07,937 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:07,937 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 16:59:07,938 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 16:59:07,939 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 16:59:07,941 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 16:59:07,941 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 16:59:07,941 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 16:59:07,941 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 16:59:07,941 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 16:59:07,941 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 16:59:07,941 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 16:59:07,941 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 16:59:07,941 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 16:59:07,941 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 16:59:07,941 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 16:59:07,942 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 16:59:07,965 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Main, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 16:59:08,008 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:59:08,013 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:59:08,020 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 16:59:08,021 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:08,021 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 16:59:08,021 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 16:59:08,021 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 16:59:08,022 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 16:59:08,022 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 16:59:08,022 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 16:59:08,022 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 16:59:08,023 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 16:59:08,023 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:08,023 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 16:59:08,024 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 16:59:08,024 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 16:59:08,024 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 16:59:08,024 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 16:59:08,024 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 16:59:08,024 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 16:59:08,025 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 16:59:08,025 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:08,025 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 16:59:08,025 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 16:59:08,026 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 16:59:08,026 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 16:59:08,026 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 16:59:08,026 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 16:59:08,026 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 16:59:08,026 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 16:59:08,027 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:08,027 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 16:59:08,027 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 16:59:08,027 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 16:59:08,027 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 16:59:08,027 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 16:59:08,027 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 16:59:08,028 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 16:59:08,028 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:59:08,028 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:59:08,029 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 16:59:08,029 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 16:59:08,030 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,030 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,031 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 16:59:08,031 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,031 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,031 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,031 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,032 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 16:59:08,032 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,032 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,032 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,032 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,032 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,032 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 16:59:08,032 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,032 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,033 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,033 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,033 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:08,033 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 16:59:08,034 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 16:59:08,035 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 16:59:08,035 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 16:59:08,035 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 16:59:08,036 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 16:59:08,037 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 16:59:08,048 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 16:59:08,049 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:59:08,050 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 16:59:08,051 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 16:59:08,051 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:59:08,051 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:59:08,051 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:59:08,051 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 16:59:08,051 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 16:59:08,051 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 16:59:08,056 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 16:59:08,059 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 16:59:08,059 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 16:59:08,059 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 16:59:08,060 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 16:59:08,060 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 16:59:08,060 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 16:59:08,060 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 16:59:08,060 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 16:59:08,060 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 16:59:08,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 16:59:08,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 16:59:08,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 16:59:08,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 16:59:08,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 16:59:08,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 16:59:08,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 16:59:08,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 16:59:08,062 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 16:59:08,063 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 16:59:08,063 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:59:08,063 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:59:08,063 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 16:59:08,063 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 16:59:08,063 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 16:59:08,064 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 16:59:08,064 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 16:59:08,064 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 16:59:08,065 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 16:59:08,065 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 16:59:08,065 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 16:59:08,065 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 16:59:08,065 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 16:59:08,065 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 16:59:08,065 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 16:59:08,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 16:59:08,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 16:59:08,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 16:59:08,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 16:59:08,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:59:08,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 16:59:08,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:59:08,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 16:59:08,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 16:59:08,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 16:59:08,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 16:59:08,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 16:59:08,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 16:59:08,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 16:59:08,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 16:59:08,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 16:59:08,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 16:59:08,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 16:59:08,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 16:59:08,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 16:59:08,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 16:59:08,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 16:59:08,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 16:59:08,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:59:08,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 16:59:08,071 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 16:59:08,071 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 16:59:08,071 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 16:59:08,071 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 16:59:08,072 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 16:59:08,073 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 16:59:08,074 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 16:59:08,075 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:59:08,076 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 16:59:08,077 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 16:59:08,078 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 16:59:08,078 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 16:59:08,078 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:59:08,078 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 16:59:08,078 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:59:08,078 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 16:59:08,078 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 16:59:08,078 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 16:59:08,078 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 16:59:08,079 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 16:59:08,080 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 16:59:08,080 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:59:08,080 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 16:59:08,080 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:59:08,080 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 16:59:08,080 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 16:59:08,080 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 16:59:08,080 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 16:59:08,081 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 16:59:08,081 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 16:59:08,081 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 16:59:08,081 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 16:59:08,081 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 16:59:08,081 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 16:59:08,082 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 16:59:08,083 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:59:08,084 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 16:59:08,085 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:59:08,086 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 16:59:08,086 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:59:08,086 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 16:59:08,086 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 16:59:08,086 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 16:59:08,086 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 16:59:08,086 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 16:59:08,086 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 16:59:08,086 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 16:59:08,086 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 16:59:08,086 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 16:59:08,086 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 16:59:08,087 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 16:59:08,087 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 16:59:08,087 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 16:59:08,087 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 16:59:08,087 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 16:59:08,087 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 16:59:08,087 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 16:59:08,087 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 16:59:08,087 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 16:59:08,087 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 16:59:08,087 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 16:59:08,087 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 16:59:08,088 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 16:59:08,088 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 16:59:08,088 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 16:59:08,088 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 16:59:08,089 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:59:08,090 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 16:59:08,091 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 16:59:08,092 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 16:59:08,093 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 16:59:08,094 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 16:59:08,095 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 16:59:08,095 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 16:59:08,095 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 16:59:08,095 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 16:59:08,095 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:59:08,095 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 16:59:08,095 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 16:59:08,095 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 16:59:08,095 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:59:08,096 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 16:59:08,097 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 16:59:08,098 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 16:59:08,098 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 16:59:08,098 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 16:59:08,429 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 16:59:08,430 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 16:59:08,431 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 16:59:08,431 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 16:59:08,431 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 16:59:08,431 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 16:59:08,431 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 16:59:08,431 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 16:59:08,431 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 16:59:08,431 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 16:59:08,446 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:59:08,462 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 16:59:08,477 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:08,479 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:08,482 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 16:59:08,495 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:08,503 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:08,506 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 16:59:08,520 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:08,525 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:08,539 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 16:59:08,539 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 16:59:08,576 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:59:08,577 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 16:59:08,577 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 16:59:08,598 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:59:08,792 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 16:59:08,802 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,803 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,803 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,803 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,804 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,804 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,804 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,805 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,805 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,805 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,806 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,806 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,806 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,806 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,807 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,807 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,807 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,807 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,807 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,807 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,807 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,807 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,808 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,808 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,808 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,808 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,808 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,808 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,808 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,808 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,808 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,809 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,809 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,810 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,811 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,811 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,811 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,811 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,811 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,812 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,812 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,812 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,812 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,812 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,812 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,813 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,813 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,813 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,813 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,813 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,813 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,813 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,813 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,813 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,814 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,814 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,814 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,814 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,814 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,814 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,814 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,814 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,814 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,814 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,814 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,815 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,815 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,815 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:59:08,815 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,816 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,816 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,816 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:59:08,824 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 16:59:08,824 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 16:59:08,824 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 16:59:08,824 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 16:59:08,835 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459868348832`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 16:59:08,837 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459868348832`
05 abr 2016 - 16:59:08,839 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459868348832`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 16:59:08,882 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 43 ms
05 abr 2016 - 16:59:08,891 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 16:59:08,891 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459868348832`
05 abr 2016 - 16:59:08,891 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459868348832`
05 abr 2016 - 16:59:08,905 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 14 ms
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 16:59:08,906 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 16:59:08,907 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 16:59:08,907 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 16:59:08,907 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 16:59:08,907 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 16:59:08,907 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 16:59:08,907 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 16:59:08,907 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:59:08,907 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:59:08,908 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:59:08,909 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 16:59:08,914 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 16:59:08,937 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 16:59:08,938 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 16:59:08,951 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 16:59:08,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 16:59:08,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:59:08,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:59:08,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 16:59:08,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 16:59:08,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 16:59:08,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 16:59:08,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 16:59:08,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 16:59:08,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 16:59:08,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 16:59:08,953 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 16:59:08,953 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 16:59:08,956 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 16:59:08,957 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 16:59:08,960 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 16:59:08,960 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 16:59:08,960 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 16:59:08,961 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:59:08,961 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 16:59:08,961 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 16:59:08,961 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 16:59:08,961 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 16:59:08,961 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 16:59:08,961 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 16:59:08,961 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 16:59:08,961 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 16:59:08,961 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 16:59:08,961 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 16:59:08,961 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Main.class
05 abr 2016 - 16:59:08,961 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 16:59:08,961 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 16:59:08,961 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 16:59:08,961 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 16:59:08,962 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 16:59:08,962 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 8 ficheros (metadata/class) ...
05 abr 2016 - 16:59:08,985 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 16:59:08,985 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 16:59:08,986 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Main, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 16:59:08,988 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 16:59:08,988 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:08,988 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 16:59:08,989 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 16:59:08,989 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 16:59:08,989 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 16:59:08,989 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 16:59:08,989 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 16:59:08,989 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 16:59:08,990 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 16:59:08,990 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:08,990 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 16:59:08,990 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 16:59:08,990 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 16:59:08,990 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 16:59:08,991 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 16:59:08,991 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 16:59:08,991 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 16:59:09,023 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:59:09,025 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 16:59:09,025 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:09,026 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 16:59:09,026 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 16:59:09,026 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 16:59:09,026 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 16:59:09,026 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 16:59:09,026 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 16:59:09,026 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 16:59:09,027 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 16:59:09,027 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:09,027 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 16:59:09,027 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 16:59:09,027 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 16:59:09,027 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 16:59:09,028 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 16:59:09,028 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 16:59:09,028 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 16:59:09,028 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:59:09,033 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:59:09,037 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:59:09,039 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 16:59:09,039 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 16:59:09,039 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:59:09,039 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:59:09,040 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 16:59:09,040 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 16:59:09,040 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 16:59:09,040 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 16:59:09,040 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 16:59:09,041 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,041 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,041 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,041 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,041 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,042 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 16:59:09,043 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 16:59:09,043 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:59:09,043 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 16:59:09,043 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 16:59:09,043 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 16:59:09,043 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 16:59:09,043 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 16:59:09,043 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,044 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,044 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 16:59:09,044 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:59:09,044 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:59:09,044 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 16:59:09,045 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 16:59:09,045 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 16:59:09,045 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 16:59:09,045 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 16:59:09,045 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,045 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,045 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,045 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,046 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 16:59:09,046 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 16:59:09,046 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:59:09,046 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 16:59:09,046 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 16:59:09,046 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 16:59:09,046 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 16:59:09,047 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 16:59:09,047 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,047 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,047 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,047 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,047 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:09,047 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 16:59:09,048 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 16:59:09,048 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 16:59:09,049 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 16:59:09,049 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 16:59:09,049 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 16:59:09,049 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 8 ficheros (metadata/class)
05 abr 2016 - 16:59:09,052 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 16:59:09,053 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:09,053 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 16:59:09,056 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 16:59:09,056 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 16:59:09,056 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:59:09,057 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 16:59:09,058 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:59:09,058 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:59:09,058 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 16:59:09,058 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 16:59:09,058 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 16:59:09,058 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 16:59:09,058 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:09,059 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 16:59:09,060 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 16:59:09,060 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 16:59:09,060 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:59:09,061 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 16:59:09,061 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:59:09,062 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:59:09,062 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 16:59:09,062 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 16:59:09,062 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 16:59:09,067 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 16:59:09,068 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,069 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:09,071 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:59:09,071 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,071 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:59:09,071 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,072 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,072 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 16:59:09,072 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,072 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,072 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 16:59:09,073 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,073 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,073 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,073 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,073 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,073 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,073 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,073 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,074 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,074 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:09,074 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 16:59:09,074 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 16:59:09,074 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,074 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:09,078 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 16:59:09,078 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:59:09,078 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,078 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,078 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 16:59:09,078 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:59:09,078 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 16:59:09,078 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:59:09,079 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,079 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,079 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,079 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:09,079 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,079 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 16:59:09,079 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 16:59:09,079 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 16:59:09,079 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 16:59:09,080 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 16:59:09,081 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:59:09,081 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,081 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,081 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,081 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:09,081 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 16:59:09,083 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,083 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:09,083 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,083 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:09,083 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,083 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,083 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 16:59:09,083 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,083 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,084 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,084 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:59:09,084 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,086 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,086 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:59:09,086 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,086 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,086 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,086 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:09,087 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,087 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,087 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 16:59:09,087 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,087 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:09,087 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,087 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:59:09,087 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,087 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,087 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 16:59:09,087 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,087 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:09,088 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,088 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,088 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:59:09,088 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:09,088 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:59:09,090 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 16:59:09,090 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c" y isolacion "serializable"
05 abr 2016 - 16:59:09,091 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:59:09,092 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 16:59:09,126 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 34 ms
05 abr 2016 - 16:59:09,127 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 16:59:09,129 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 16:59:09,131 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 16:59:09,132 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 16:59:09,135 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 16:59:09,136 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:59:09,137 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 16:59:09,138 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 16:59:09,139 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:59:09,142 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 16:59:09,146 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 16:59:09,149 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 16:59:09,150 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 16:59:09,150 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 16:59:09,151 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 16:59:09,152 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 16:59:09,153 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 16:59:09,154 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 16:59:09,155 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 16:59:09,156 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 16:59:09,156 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 16:59:09,158 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:59:09,159 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:59:09,160 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:59:09,162 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:59:09,163 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:59:09,165 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:59:09,167 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:59:09,168 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:59:09,170 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:59:09,171 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:59:09,172 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:59:09,174 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:59:09,175 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:59:09,176 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:59:09,177 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:59:09,177 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 16:59:09,178 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 16:59:09,178 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:59:09,178 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:59:09,180 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 16:59:09,180 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 16:59:09,180 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 16:59:09,180 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 16:59:16,757 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:59:16,774 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 16:59:16,786 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:16,788 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:16,791 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 16:59:16,801 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:16,809 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:16,814 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 16:59:16,829 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:16,834 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 16:59:16,845 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 16:59:16,855 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 16:59:16,884 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 16:59:16,884 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 16:59:16,899 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 16:59:16,899 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:16,899 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Character,java.lang.Integer
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 16:59:16,900 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.String,java.lang.Double
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.nio.ByteBuffer,java.lang.String,java.lang.Long
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.lang.String,java.sql.Timestamp,[Ljava.lang.Object;,java.util.Date
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 16:59:16,901 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 16:59:16,902 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 16:59:16,902 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 16:59:16,902 (main) DEBUG [DataNucleus.MetaData] - Listener found initialisation for persistable class main.Usuario
05 abr 2016 - 16:59:16,903 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /META-INF/package.jdo
05 abr 2016 - 16:59:16,904 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:16,904 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /package.jdo
05 abr 2016 - 16:59:16,904 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/package.jdo
05 abr 2016 - 16:59:16,905 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main.jdo
05 abr 2016 - 16:59:16,905 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/Usuario.jdo
05 abr 2016 - 16:59:16,905 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Usuario"
05 abr 2016 - 16:59:16,934 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:59:16,945 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 16:59:16,945 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 16:59:16,946 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:59:16,946 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 16:59:16,946 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 16:59:16,947 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 16:59:16,947 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 16:59:16,947 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 16:59:16,947 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,947 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,947 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,948 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,948 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,949 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /META-INF/package.jdo
05 abr 2016 - 16:59:16,950 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:16,950 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /package.jdo
05 abr 2016 - 16:59:16,950 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/package.jdo
05 abr 2016 - 16:59:16,951 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main.jdo
05 abr 2016 - 16:59:16,951 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/Reproduccion.jdo
05 abr 2016 - 16:59:16,951 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Reproduccion"
05 abr 2016 - 16:59:16,951 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:59:16,952 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 16:59:16,952 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:59:16,952 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:59:16,953 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 16:59:16,953 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 16:59:16,953 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 16:59:16,954 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 16:59:16,954 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 16:59:16,954 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,954 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,954 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,954 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,954 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,955 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /META-INF/package.jdo
05 abr 2016 - 16:59:16,956 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:16,956 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /package.jdo
05 abr 2016 - 16:59:16,956 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/package.jdo
05 abr 2016 - 16:59:16,956 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main.jdo
05 abr 2016 - 16:59:16,957 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/Cancion.jdo
05 abr 2016 - 16:59:16,957 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Cancion"
05 abr 2016 - 16:59:16,957 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:59:16,959 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 16:59:16,959 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 16:59:16,959 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:59:16,960 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 16:59:16,960 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 16:59:16,960 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 16:59:16,961 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 16:59:16,961 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 16:59:16,961 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,961 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,961 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,961 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:16,962 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 16:59:16,964 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 16:59:16,992 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:59:16,992 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 16:59:16,992 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 16:59:17,009 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 16:59:17,194 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 16:59:17,204 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,204 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,204 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,204 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,205 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,205 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,205 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,205 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,206 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,206 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,206 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,207 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,207 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,207 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,207 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,207 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,208 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,208 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,208 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,208 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,208 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,208 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,208 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,208 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,208 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,208 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,209 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,209 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,209 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,209 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,209 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,209 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,209 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,210 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,211 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,211 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,211 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,211 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,211 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,212 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,212 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,212 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,212 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,212 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,213 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,213 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,213 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,213 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,213 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,214 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,215 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,215 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,215 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,215 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,215 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 16:59:17,216 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,216 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,216 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,216 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 16:59:17,226 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 16:59:17,226 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 16:59:17,226 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 16:59:17,226 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 16:59:17,237 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459868357234`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,238 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459868357234`
05 abr 2016 - 16:59:17,239 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459868357234`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 16:59:17,277 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 38 ms
05 abr 2016 - 16:59:17,285 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 16:59:17,286 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459868357234`
05 abr 2016 - 16:59:17,286 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459868357234`
05 abr 2016 - 16:59:17,300 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 14 ms
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 16:59:17,301 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 16:59:17,302 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 16:59:17,302 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 16:59:17,302 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 16:59:17,302 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 16:59:17,302 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 16:59:17,302 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 16:59:17,302 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 16:59:17,302 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 16:59:17,302 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:59:17,303 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:59:17,304 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 16:59:17,305 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 16:59:17,305 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 16:59:17,309 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 16:59:17,309 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 16:59:17,309 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 16:59:17,309 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 16:59:17,309 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 16:59:17,309 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 16:59:17,309 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 16:59:17,309 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 16:59:17,309 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 16:59:17,309 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 16:59:17,309 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 16:59:17,321 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@78dd667e"
05 abr 2016 - 16:59:17,322 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 del tipo "soft" inicializada
05 abr 2016 - 16:59:17,324 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:59:17,324 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:59:17,325 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@7d3a22a9"
05 abr 2016 - 16:59:17,334 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 16:59:17,334 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:59:17,335 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 16:59:17,336 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 16:59:17,341 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /META-INF/package.jdo
05 abr 2016 - 16:59:17,342 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:17,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /package.jdo
05 abr 2016 - 16:59:17,344 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/package.jdo
05 abr 2016 - 16:59:17,344 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main.jdo
05 abr 2016 - 16:59:17,345 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/Artista.jdo
05 abr 2016 - 16:59:17,345 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Artista"
05 abr 2016 - 16:59:17,345 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 16:59:17,346 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 16:59:17,347 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 16:59:17,347 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 16:59:17,348 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 16:59:17,348 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 16:59:17,348 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 16:59:17,348 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 16:59:17,348 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 16:59:17,349 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:17,349 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 16:59:17,349 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 16:59:17,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 16:59:17,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:17,350 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 16:59:17,354 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 16:59:17,355 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 16:59:17,355 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:59:17,357 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 16:59:17,358 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:59:17,358 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:59:17,358 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 16:59:17,358 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 16:59:17,359 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 16:59:17,359 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 16:59:17,359 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 16:59:17,360 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 16:59:17,364 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 16:59:17,364 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 16:59:17,364 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 16:59:17,368 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 16:59:17,368 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 16:59:17,369 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 16:59:17,369 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 16:59:17,369 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 16:59:17,369 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 16:59:17,377 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 16:59:17,378 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,378 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,379 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:59:17,379 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,379 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,379 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 16:59:17,380 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,380 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 16:59:17,380 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,382 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:17,382 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 16:59:17,383 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,383 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,383 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,383 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,383 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,383 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,383 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,383 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,383 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,384 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:17,384 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 16:59:17,384 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 16:59:17,386 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:59:17,386 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,386 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:17,386 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 16:59:17,386 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 16:59:17,387 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,387 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:17,387 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,387 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,389 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 16:59:17,389 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,390 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,391 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 16:59:17,391 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:59:17,391 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 16:59:17,391 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 16:59:17,391 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,391 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,391 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,391 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:17,391 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,391 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 16:59:17,392 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 16:59:17,393 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,394 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:17,394 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,394 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,394 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,394 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,394 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:59:17,394 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,394 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,394 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,395 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:59:17,395 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,395 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,395 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 16:59:17,395 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,395 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:17,395 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,395 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 16:59:17,397 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,397 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,397 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 16:59:17,398 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,398 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,398 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,398 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:17,398 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,398 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,398 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 16:59:17,398 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,398 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:17,398 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,398 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 16:59:17,399 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,399 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 16:59:17,399 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 16:59:17,399 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,399 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 16:59:17,402 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 16:59:17,402 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8" y isolacion "serializable"
05 abr 2016 - 16:59:17,403 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:59:17,404 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 16:59:17,444 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 40 ms
05 abr 2016 - 16:59:17,444 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 16:59:17,445 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 16:59:17,447 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 16:59:17,448 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 16:59:17,449 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:59:17,450 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 16:59:17,452 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 16:59:17,453 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 16:59:17,454 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 16:59:17,459 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 16:59:17,464 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 16:59:17,466 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 16:59:17,468 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 16:59:17,469 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 16:59:17,470 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 16:59:17,471 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 16:59:17,472 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 16:59:17,474 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 16:59:17,475 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 16:59:17,476 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 16:59:17,477 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 16:59:17,478 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:59:17,481 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:59:17,482 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 16:59:17,483 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:59:17,485 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:59:17,486 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 16:59:17,488 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:59:17,489 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:59:17,491 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 16:59:17,492 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:59:17,493 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:59:17,495 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 16:59:17,496 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:59:17,497 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:59:17,499 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 16:59:17,499 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 16:59:17,499 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 16:59:17,499 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 16:59:17,500 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:59:17,504 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@7d3a22a9" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 16:59:17,515 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:59:17,516 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:59:17,516 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:59:17,517 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,525 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 16:59:17,527 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943781219>,<false>,<'AxiElorza'>,<'1234'>,<'Asier'>)
05 abr 2016 - 16:59:17,528 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 1) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8"
05 abr 2016 - 16:59:17,528 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar insertPostProcessing para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:17,528 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar insertPostProcessing para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:17,528 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar insertPostProcessing para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:17,528 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8"
05 abr 2016 - 16:59:17,529 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar postInsert para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:17,529 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaReproduccion" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:59:17,535 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaReproduccion" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar postInsert para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.historialRep" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "historialRep" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@7d3a22a9" va a llamar postInsert para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaAmigos" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@7d3a22a9" campo "listaAmigos" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@130d63be"
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@130d63be" (id="Iker") ha sido puesto en la cache transaccional
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@130d63be" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 16:59:17,536 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,537 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@293a5bf6" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 16:59:17,537 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943008503>,<true>,<'IkerCalzada'>,<'5678'>,<'Iker'>)
05 abr 2016 - 16:59:17,538 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 1) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@293a5bf6"
05 abr 2016 - 16:59:17,538 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar insertPostProcessing para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:17,538 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar insertPostProcessing para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:17,538 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar insertPostProcessing para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:17,538 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@293a5bf6"
05 abr 2016 - 16:59:17,538 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar postInsert para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:17,538 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaReproduccion" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:59:17,538 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,538 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaReproduccion" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:59:17,538 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar postInsert para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:17,539 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.historialRep" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:59:17,539 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,539 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "historialRep" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:59:17,539 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@130d63be" va a llamar postInsert para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:17,539 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaAmigos" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:59:17,539 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,539 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@130d63be" campo "listaAmigos" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:59:17,539 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@74f0ea28"
05 abr 2016 - 16:59:17,539 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 16:59:17,540 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@74f0ea28" (id="Mikel") ha sido puesto en la cache transaccional
05 abr 2016 - 16:59:17,540 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@74f0ea28" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 16:59:17,540 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,540 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3c19aaa5" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 16:59:17,540 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943556699>,<false>,<'MikelLarrea'>,<'91011'>,<'Mikel'>)
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 1) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3c19aaa5"
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar insertPostProcessing para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar insertPostProcessing para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar insertPostProcessing para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3c19aaa5"
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar postInsert para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaReproduccion" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaReproduccion" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar postInsert para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.historialRep" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,541 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "historialRep" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:59:17,542 (main) DEBUG [DataNucleus.Persistence] - Persistencia del objeto "main.Usuario@74f0ea28" va a llamar postInsert para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:17,542 (main) DEBUG [DataNucleus.Persistence] - El campo "main.Usuario.listaAmigos" va a ser persistido por "cascade-persist".
05 abr 2016 - 16:59:17,542 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,542 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@74f0ea28" campo "listaAmigos" va a ser inicializado por un contenedor con 0 valores
05 abr 2016 - 16:59:17,542 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:59:17,542 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 3 objetos registrados
05 abr 2016 - 16:59:17,544 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.query.cache.SoftQueryCompilationCache" inicializada
05 abr 2016 - 16:59:17,544 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryDatastoreCompilationCache" inicializada
05 abr 2016 - 16:59:17,545 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryResultsCache" inicializada
05 abr 2016 - 16:59:17,545 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:59:17,545 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:59:17,545 (main) DEBUG [DataNucleus.Persistence] - Performing reachability algorithm on object with id "Asier"
05 abr 2016 - 16:59:17,545 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") usado de la Cache nivel 1 (loadedFlags="[YYYYYYYYY]") [tamaño = 3]
05 abr 2016 - 16:59:17,546 (main) DEBUG [DataNucleus.Persistence] - Object "main.Usuario@7d3a22a9" (id="Asier") estado de vida "P_NEW" añadido a la lista de alcanzables al commit.
05 abr 2016 - 16:59:17,546 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Performing reachability algorithm on object with id "Iker"
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") usado de la Cache nivel 1 (loadedFlags="[YYYYYYYYY]") [tamaño = 3]
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Object "main.Usuario@130d63be" (id="Iker") estado de vida "P_NEW" añadido a la lista de alcanzables al commit.
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Performing reachability algorithm on object with id "Mikel"
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") usado de la Cache nivel 1 (loadedFlags="[YYYYYYYYY]") [tamaño = 3]
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Object "main.Usuario@74f0ea28" (id="Mikel") estado de vida "P_NEW" añadido a la lista de alcanzables al commit.
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Haciendo la calculación de alcanzables con el contenedor de SCO al campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:59:17,547 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:59:17,548 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="Asier") añadido a la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="")
05 abr 2016 - 16:59:17,549 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@74f0ea28" (id="Mikel") añadido a la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="")
05 abr 2016 - 16:59:17,549 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@130d63be" (id="Iker") añadido a la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="")
05 abr 2016 - 16:59:17,549 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc]]
05 abr 2016 - 16:59:17,549 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:59:17,553 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:59:17,554 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,555 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_NEW"->"HOLLOW"
05 abr 2016 - 16:59:17,555 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:59:17,555 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_NEW"->"HOLLOW"
05 abr 2016 - 16:59:17,556 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@130d63be" (id="main.Usuario:Iker") fue ser borrado de la cache transactional
05 abr 2016 - 16:59:17,556 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_NEW"->"HOLLOW"
05 abr 2016 - 16:59:17,556 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@74f0ea28" (id="main.Usuario:Mikel") fue ser borrado de la cache transactional
05 abr 2016 - 16:59:17,556 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 14 ms
05 abr 2016 - 16:59:17,556 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@7d3a22a9 de StateManager[pc=main.Usuario@7d3a22a9, lifecycle=HOLLOW]
05 abr 2016 - 16:59:17,556 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 3]
05 abr 2016 - 16:59:17,556 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@74f0ea28 de StateManager[pc=main.Usuario@74f0ea28, lifecycle=HOLLOW]
05 abr 2016 - 16:59:17,556 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Mikel" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 2]
05 abr 2016 - 16:59:17,556 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@130d63be de StateManager[pc=main.Usuario@130d63be, lifecycle=HOLLOW]
05 abr 2016 - 16:59:17,556 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Iker" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:59:17,556 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:59:17,556 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:59:17,557 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@235834f2"
05 abr 2016 - 16:59:17,557 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:59:17,557 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:59:17,566 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario"
05 abr 2016 - 16:59:17,572 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 5 ms
05 abr 2016 - 16:59:17,572 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [symbols: this type=main.Usuario]
05 abr 2016 - 16:59:17,572 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario" para base de datos
05 abr 2016 - 16:59:17,587 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 15
05 abr 2016 - 16:59:17,587 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`"
05 abr 2016 - 16:59:17,588 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:59:17,589 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@6aaceffd, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:59:17,589 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:59:17,589 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,589 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario" ...
05 abr 2016 - 16:59:17,589 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@37271612"
05 abr 2016 - 16:59:17,589 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`
05 abr 2016 - 16:59:17,590 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 1 ms
05 abr 2016 - 16:59:17,593 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 4 ms
05 abr 2016 - 16:59:17,595 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 16:59:17,595 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@10d68fcd" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:59:17,596 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@10d68fcd" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:59:17,596 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Asier" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@10d68fcd"
05 abr 2016 - 16:59:17,596 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Iker" no esta en la Cache de nivel 1 [tamaño = 1]
05 abr 2016 - 16:59:17,596 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1ebd319f" (id="main.Usuario:Iker") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:59:17,596 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@1ebd319f" (id="Iker") ha sido puesto en la cache transaccional
05 abr 2016 - 16:59:17,596 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Iker" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@1ebd319f"
05 abr 2016 - 16:59:17,597 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Mikel" no esta en la Cache de nivel 1 [tamaño = 2]
05 abr 2016 - 16:59:17,597 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@3c0be339" (id="main.Usuario:Mikel") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:59:17,597 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@3c0be339" (id="Mikel") ha sido puesto en la cache transaccional
05 abr 2016 - 16:59:17,597 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Mikel" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@3c0be339"
05 abr 2016 - 16:59:17,597 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:59:17,597 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:59:17,597 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:59:17,597 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:59:17,597 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:59:17,597 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@6aaceffd]]
05 abr 2016 - 16:59:17,597 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:59:17,598 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:59:17,598 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@e4487af [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@c86b9e3, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,598 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@10d68fcd" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_CLEAN"->"HOLLOW"
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@10d68fcd" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@1ebd319f" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_CLEAN"->"HOLLOW"
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@1ebd319f" (id="main.Usuario:Iker") fue ser borrado de la cache transactional
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@3c0be339" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_CLEAN"->"HOLLOW"
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@3c0be339" (id="main.Usuario:Mikel") fue ser borrado de la cache transactional
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 2 ms
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@1ebd319f de StateManager[pc=main.Usuario@1ebd319f, lifecycle=HOLLOW]
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Iker" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 3]
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@10d68fcd de StateManager[pc=main.Usuario@10d68fcd, lifecycle=HOLLOW]
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 2]
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@3c0be339 de StateManager[pc=main.Usuario@3c0be339, lifecycle=HOLLOW]
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Mikel" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:59:17,599 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:59:17,600 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@6e509ffa"
05 abr 2016 - 16:59:17,600 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:59:17,600 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:59:17,601 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'Asier'"
05 abr 2016 - 16:59:17,608 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 7 ms
05 abr 2016 - 16:59:17,608 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [filter:DyadicExpression{PrimaryExpression{this.nombreUsu}  =  Literal{Asier}}]
  [symbols: this type=main.Usuario]
05 abr 2016 - 16:59:17,608 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'Asier'" para base de datos
05 abr 2016 - 16:59:17,612 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 4
05 abr 2016 - 16:59:17,612 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario WHERE this.nombreUsu == 'Asier' Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0` WHERE `A0`.`NOMBREUSU` = 'Asier'"
05 abr 2016 - 16:59:17,613 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@574b560f [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:59:17,613 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@ba54932, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:59:17,613 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@574b560f [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@28975c28, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:59:17,614 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@574b560f [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@28975c28, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,614 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'Asier'" ...
05 abr 2016 - 16:59:17,614 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@157853da"
05 abr 2016 - 16:59:17,614 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0` WHERE `A0`.`NOMBREUSU` = 'Asier'
05 abr 2016 - 16:59:17,616 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 2 ms
05 abr 2016 - 16:59:17,616 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 2 ms
05 abr 2016 - 16:59:17,617 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 16:59:17,617 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@236e3f4e" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:59:17,617 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@236e3f4e" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:59:17,617 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Asier" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@236e3f4e"
05 abr 2016 - 16:59:17,617 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@236e3f4e" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_CLEAN"->"P_DIRTY"
05 abr 2016 - 16:59:17,617 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:59:17,617 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:59:17,620 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:59:17,620 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:59:17,620 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:59:17,620 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@236e3f4e" (id="main.Usuario@236e3f4e") cambiado en la Cache de nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") para campos "[5]"
05 abr 2016 - 16:59:17,620 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@ba54932]]
05 abr 2016 - 16:59:17,621 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@574b560f [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@28975c28, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:59:17,621 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@574b560f [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@28975c28, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:59:17,622 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@574b560f [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@28975c28, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,622 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@236e3f4e" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_DIRTY"->"HOLLOW"
05 abr 2016 - 16:59:17,622 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@236e3f4e" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:59:17,622 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 5 ms
05 abr 2016 - 16:59:17,622 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@236e3f4e de StateManager[pc=main.Usuario@236e3f4e, lifecycle=HOLLOW]
05 abr 2016 - 16:59:17,622 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:59:17,622 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:59:17,622 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:59:17,623 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@87a85e1"
05 abr 2016 - 16:59:17,623 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:59:17,623 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:59:17,623 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'iker'"
05 abr 2016 - 16:59:17,623 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 0 ms
05 abr 2016 - 16:59:17,623 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [filter:DyadicExpression{PrimaryExpression{this.nombreUsu}  =  Literal{iker}}]
  [symbols: this type=main.Usuario]
05 abr 2016 - 16:59:17,623 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'iker'" para base de datos
05 abr 2016 - 16:59:17,624 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 1
05 abr 2016 - 16:59:17,624 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario WHERE this.nombreUsu == 'iker' Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0` WHERE `A0`.`NOMBREUSU` = 'iker'"
05 abr 2016 - 16:59:17,625 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@53aad5d5 [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:59:17,625 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@46fa7c39, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:59:17,625 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@53aad5d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@1fb700ee, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:59:17,625 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@53aad5d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@1fb700ee, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,625 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'iker'" ...
05 abr 2016 - 16:59:17,626 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@5f683daf"
05 abr 2016 - 16:59:17,626 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0` WHERE `A0`.`NOMBREUSU` = 'iker'
05 abr 2016 - 16:59:17,626 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 0 ms
05 abr 2016 - 16:59:17,626 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 1 ms
05 abr 2016 - 16:59:17,627 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:59:17,627 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:59:17,627 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:59:17,627 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:59:17,627 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:59:17,627 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@46fa7c39]]
05 abr 2016 - 16:59:17,627 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@53aad5d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@1fb700ee, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:59:17,628 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@53aad5d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@1fb700ee, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:59:17,628 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@53aad5d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@1fb700ee, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,628 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 1 ms
05 abr 2016 - 16:59:17,628 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:59:17,628 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 16:59:17,629 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@68e965f5"
05 abr 2016 - 16:59:17,629 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:59:17,629 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 16:59:17,629 (main) DEBUG [DataNucleus.Query] - Query "SELECT FROM main.Usuario FetchPlan [default]" de lenguaje "JDOQL" existe, por eso utilizamos la compilacion general de antes.
05 abr 2016 - 16:59:17,629 (main) DEBUG [DataNucleus.Query] - Query "SELECT FROM main.Usuario FetchPlan [default]" de lenguaje "JDOQL" para la base de datos "rdbms-mysql" existe, por eso utilizamos la compilacion de datastore de antes
05 abr 2016 - 16:59:17,630 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 16:59:17,630 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@2e1d27ba, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 16:59:17,630 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 16:59:17,630 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,630 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario" ...
05 abr 2016 - 16:59:17,630 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@152aa092"
05 abr 2016 - 16:59:17,630 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`
05 abr 2016 - 16:59:17,631 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 1 ms
05 abr 2016 - 16:59:17,631 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 1 ms
05 abr 2016 - 16:59:17,631 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 16:59:17,631 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@44a7bfbc" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:59:17,631 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@44a7bfbc" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 16:59:17,631 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Asier" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@44a7bfbc"
05 abr 2016 - 16:59:17,631 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Iker" no esta en la Cache de nivel 1 [tamaño = 1]
05 abr 2016 - 16:59:17,632 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@4ef37659" (id="main.Usuario:Iker") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:59:17,632 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@4ef37659" (id="Iker") ha sido puesto en la cache transaccional
05 abr 2016 - 16:59:17,632 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Iker" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@4ef37659"
05 abr 2016 - 16:59:17,632 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Mikel" no esta en la Cache de nivel 1 [tamaño = 2]
05 abr 2016 - 16:59:17,632 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@776b83cc" (id="main.Usuario:Mikel") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 16:59:17,632 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@776b83cc" (id="Mikel") ha sido puesto en la cache transaccional
05 abr 2016 - 16:59:17,632 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Mikel" usado de la Cache nivel 2 (campos="[0, 1, 2, 3, 4, 5, 6, 7, 8]", version="") - representado como "main.Usuario@776b83cc"
05 abr 2016 - 16:59:17,632 (main) DEBUG [DataNucleus.Persistence] - Borrando el objeto de persistencia : "main.Usuario@44a7bfbc"
05 abr 2016 - 16:59:17,632 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@44a7bfbc" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_CLEAN"->"P_DELETED"
05 abr 2016 - 16:59:17,632 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:59:17,632 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:59:17,633 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@44a7bfbc" va a ser borrado de la tabla "`USUARIO`"
05 abr 2016 - 16:59:17,633 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@44a7bfbc" va a llamar preDelete para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:17,634 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@44a7bfbc" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,636 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,636 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2892dae4" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a"
05 abr 2016 - 16:59:17,637 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAREPRODUCCION` WHERE `NOMBREUSU_OID`=<'Asier'>
05 abr 2016 - 16:59:17,638 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2892dae4"
05 abr 2016 - 16:59:17,638 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@2892dae4"
05 abr 2016 - 16:59:17,638 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@44a7bfbc" va a llamar preDelete para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:17,638 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@44a7bfbc" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,638 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,638 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@6a6afff2" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a"
05 abr 2016 - 16:59:17,638 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_HISTORIALREP` WHERE `NOMBREUSU_OID`=<'Asier'>
05 abr 2016 - 16:59:17,639 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@6a6afff2"
05 abr 2016 - 16:59:17,639 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@6a6afff2"
05 abr 2016 - 16:59:17,639 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@44a7bfbc" va a llamar preDelete para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:17,639 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@44a7bfbc" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,639 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,640 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@4da4253" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a"
05 abr 2016 - 16:59:17,640 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAAMIGOS` WHERE `NOMBREUSU_OID`=<'Asier'>
05 abr 2016 - 16:59:17,640 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@4da4253"
05 abr 2016 - 16:59:17,640 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@4da4253"
05 abr 2016 - 16:59:17,640 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,640 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@503d687a" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a"
05 abr 2016 - 16:59:17,640 (main) DEBUG [DataNucleus.Datastore.Persist] - El statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" ya es batchable
05 abr 2016 - 16:59:17,641 (main) DEBUG [DataNucleus.Datastore.Persist] - Añadiendo statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" al batch para procesar (tamaño de batch = 1)
05 abr 2016 - 16:59:17,641 (main) DEBUG [DataNucleus.Persistence] - Borrando el objeto de persistencia : "main.Usuario@4ef37659"
05 abr 2016 - 16:59:17,641 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@4ef37659" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_CLEAN"->"P_DELETED"
05 abr 2016 - 16:59:17,641 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:59:17,641 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:59:17,641 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@4ef37659" va a ser borrado de la tabla "`USUARIO`"
05 abr 2016 - 16:59:17,641 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@4ef37659" va a llamar preDelete para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:17,641 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@4ef37659" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,641 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,641 (main) DEBUG [DataNucleus.Datastore.Native] - BATCH [DELETE FROM `USUARIO` WHERE `NOMBREUSU`=<'Javier'>]
05 abr 2016 - 16:59:17,642 (main) DEBUG [DataNucleus.Datastore] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = [0]) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@503d687a"
05 abr 2016 - 16:59:17,642 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@26275bef" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a"
05 abr 2016 - 16:59:17,642 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAREPRODUCCION` WHERE `NOMBREUSU_OID`=<'Iker'>
05 abr 2016 - 16:59:17,643 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@26275bef"
05 abr 2016 - 16:59:17,643 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@26275bef"
05 abr 2016 - 16:59:17,643 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@4ef37659" va a llamar preDelete para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:17,643 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@4ef37659" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,643 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,643 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3246fb96" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a"
05 abr 2016 - 16:59:17,643 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_HISTORIALREP` WHERE `NOMBREUSU_OID`=<'Iker'>
05 abr 2016 - 16:59:17,644 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3246fb96"
05 abr 2016 - 16:59:17,644 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@3246fb96"
05 abr 2016 - 16:59:17,644 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@4ef37659" va a llamar preDelete para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:17,644 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@4ef37659" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,644 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,644 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@73ee04c8" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a"
05 abr 2016 - 16:59:17,644 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAAMIGOS` WHERE `NOMBREUSU_OID`=<'Iker'>
05 abr 2016 - 16:59:17,645 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@73ee04c8"
05 abr 2016 - 16:59:17,645 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@73ee04c8"
05 abr 2016 - 16:59:17,645 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,645 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@6b8ca3c8" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a"
05 abr 2016 - 16:59:17,645 (main) DEBUG [DataNucleus.Datastore.Persist] - El statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" ya es batchable
05 abr 2016 - 16:59:17,645 (main) DEBUG [DataNucleus.Datastore.Persist] - Añadiendo statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" al batch para procesar (tamaño de batch = 1)
05 abr 2016 - 16:59:17,645 (main) DEBUG [DataNucleus.Persistence] - Borrando el objeto de persistencia : "main.Usuario@776b83cc"
05 abr 2016 - 16:59:17,645 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@776b83cc" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_CLEAN"->"P_DELETED"
05 abr 2016 - 16:59:17,645 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 16:59:17,645 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:59:17,645 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@776b83cc" va a ser borrado de la tabla "`USUARIO`"
05 abr 2016 - 16:59:17,645 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@776b83cc" va a llamar preDelete para el campo "main.Usuario.listaReproduccion"
05 abr 2016 - 16:59:17,646 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@776b83cc" campo "listaReproduccion" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,646 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,646 (main) DEBUG [DataNucleus.Datastore.Native] - BATCH [DELETE FROM `USUARIO` WHERE `NOMBREUSU`=<'Iker'>]
05 abr 2016 - 16:59:17,649 (main) DEBUG [DataNucleus.Datastore] - Tiempo de cumplir = 3 ms (numero de lineas cambiado = [1]) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@6b8ca3c8"
05 abr 2016 - 16:59:17,650 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@59af0466" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a"
05 abr 2016 - 16:59:17,650 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAREPRODUCCION` WHERE `NOMBREUSU_OID`=<'Mikel'>
05 abr 2016 - 16:59:17,651 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 0 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@59af0466"
05 abr 2016 - 16:59:17,651 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@59af0466"
05 abr 2016 - 16:59:17,651 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@776b83cc" va a llamar preDelete para el campo "main.Usuario.historialRep"
05 abr 2016 - 16:59:17,651 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@776b83cc" campo "historialRep" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,651 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,651 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@55536d9e" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a"
05 abr 2016 - 16:59:17,651 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_HISTORIALREP` WHERE `NOMBREUSU_OID`=<'Mikel'>
05 abr 2016 - 16:59:17,652 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@55536d9e"
05 abr 2016 - 16:59:17,652 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@55536d9e"
05 abr 2016 - 16:59:17,652 (main) DEBUG [DataNucleus.Persistence] - Borra del objeto "main.Usuario@776b83cc" va a llamar preDelete para el campo "main.Usuario.listaAmigos"
05 abr 2016 - 16:59:17,652 (main) DEBUG [DataNucleus.Persistence] - El objeto "main.Usuario@776b83cc" campo "listaAmigos" ha sido reemplazado por un SCO wrapper de tipo "org.datanucleus.store.types.wrappers.backed.ArrayList" [cache-values=true, lazy-loading=true, queued-operations=false, allow-nulls=true]
05 abr 2016 - 16:59:17,652 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,652 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@62230c58" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a"
05 abr 2016 - 16:59:17,652 (main) DEBUG [DataNucleus.Datastore.Native] - DELETE FROM `USUARIO_LISTAAMIGOS` WHERE `NOMBREUSU_OID`=<'Mikel'>
05 abr 2016 - 16:59:17,653 (main) DEBUG [DataNucleus.Datastore.Persist] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = 0) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@62230c58"
05 abr 2016 - 16:59:17,653 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@62230c58"
05 abr 2016 - 16:59:17,653 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion encontrado en el pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,653 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@74455848" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a"
05 abr 2016 - 16:59:17,653 (main) DEBUG [DataNucleus.Datastore.Persist] - El statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" ya es batchable
05 abr 2016 - 16:59:17,653 (main) DEBUG [DataNucleus.Datastore.Persist] - Añadiendo statement "DELETE FROM `USUARIO` WHERE `NOMBREUSU`=?" al batch para procesar (tamaño de batch = 1)
05 abr 2016 - 16:59:17,653 (main) DEBUG [DataNucleus.Datastore.Native] - BATCH [DELETE FROM `USUARIO` WHERE `NOMBREUSU`=<'Mikel'>]
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Datastore] - Tiempo de cumplir = 1 ms (numero de lineas cambiado = [1]) con el PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@74455848"
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Persistence] - Manejar de relaciones : empezando
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Persistence] - Manejar de relaciones : terminado
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@44a7bfbc" (id="Asier") borrado de la Cache de nivel 2
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@4ef37659" (id="Iker") borrado de la Cache de nivel 2
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@776b83cc" (id="Mikel") borrado de la Cache de nivel 2
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@2e1d27ba]]
05 abr 2016 - 16:59:17,654 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 16:59:17,658 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@7e9131d5 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@61d6015a, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@44a7bfbc" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_DELETED"->""
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@44a7bfbc" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@44a7bfbc de StateManager[pc=main.Usuario@44a7bfbc, lifecycle=P_DELETED]
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 3]
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@4ef37659" (id="main.Usuario:Iker") tiene cambio de lifeycle : "P_DELETED"->""
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@4ef37659" (id="main.Usuario:Iker") fue ser borrado de la cache transactional
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@4ef37659 de StateManager[pc=main.Usuario@4ef37659, lifecycle=P_DELETED]
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Iker" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 2]
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@776b83cc" (id="main.Usuario:Mikel") tiene cambio de lifeycle : "P_DELETED"->""
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@776b83cc" (id="main.Usuario:Mikel") fue ser borrado de la cache transactional
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@776b83cc de StateManager[pc=main.Usuario@776b83cc, lifecycle=P_DELETED]
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Mikel" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 16:59:17,659 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 6 ms
05 abr 2016 - 16:59:17,660 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 16:59:17,660 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 17:03:53,871 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:03:53,889 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 17:03:53,901 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:53,903 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:53,905 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 17:03:53,915 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:53,923 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:53,926 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 17:03:53,937 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:53,945 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:53,965 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 17:03:53,989 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 17:03:53,989 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 17:03:54,003 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 17:03:54,003 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,003 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,003 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,003 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,003 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,003 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,003 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,003 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,003 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 17:03:54,003 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:03:54,003 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 17:03:54,004 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 17:03:54,004 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 17:03:54,004 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 17:03:54,004 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 17:03:54,004 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 17:03:54,004 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 17:03:54,004 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:03:54,004 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:03:54,004 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 17:03:54,004 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 17:03:54,004 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:03:54,004 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:03:54,005 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:03:54,005 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 17:03:54,005 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 17:03:54,005 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 17:03:54,005 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 17:03:54,005 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 17:03:54,005 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 17:03:54,005 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 17:03:54,006 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 17:03:54,007 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 17:03:54,007 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 17:03:54,007 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 17:03:54,007 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 17:03:54,007 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 17:03:54,007 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 17:03:54,007 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 17:03:54,007 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 17:03:54,007 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 17:03:54,007 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 17:03:54,008 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 17:03:54,034 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Main, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 17:03:54,078 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:03:54,083 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:03:54,089 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 17:03:54,090 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:54,090 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 17:03:54,090 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 17:03:54,090 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 17:03:54,090 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 17:03:54,091 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 17:03:54,091 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 17:03:54,091 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 17:03:54,091 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 17:03:54,092 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:54,092 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 17:03:54,092 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 17:03:54,092 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 17:03:54,093 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 17:03:54,093 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 17:03:54,093 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 17:03:54,093 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 17:03:54,093 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 17:03:54,093 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:54,094 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 17:03:54,094 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 17:03:54,094 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 17:03:54,094 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 17:03:54,094 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 17:03:54,094 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 17:03:54,095 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 17:03:54,095 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 17:03:54,095 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:54,095 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 17:03:54,096 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 17:03:54,096 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 17:03:54,096 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 17:03:54,097 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 17:03:54,097 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 17:03:54,097 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 17:03:54,097 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:03:54,097 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:03:54,099 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 17:03:54,099 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 17:03:54,099 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,099 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,101 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 17:03:54,101 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,101 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,101 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,101 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,102 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 17:03:54,102 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,102 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,102 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,102 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,102 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,102 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 17:03:54,102 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,102 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,102 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,102 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,102 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,103 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 17:03:54,103 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 17:03:54,104 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 17:03:54,105 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 17:03:54,105 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 17:03:54,105 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 17:03:54,107 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 17:03:54,119 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:03:54,119 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:03:54,119 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:03:54,119 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:03:54,119 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:03:54,119 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:03:54,119 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:03:54,119 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:03:54,119 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:03:54,119 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:03:54,120 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:03:54,121 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:03:54,126 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:03:54,130 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:03:54,131 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:03:54,131 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:03:54,131 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:03:54,131 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:03:54,132 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 17:03:54,133 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:03:54,133 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:03:54,133 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:03:54,134 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:03:54,134 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:03:54,134 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:03:54,134 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:03:54,134 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:03:54,134 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:03:54,135 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:03:54,135 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:03:54,135 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:03:54,135 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:03:54,135 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:03:54,135 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:03:54,135 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:03:54,136 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:03:54,136 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:03:54,136 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:03:54,136 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:03:54,136 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:03:54,136 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:03:54,136 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:03:54,137 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:03:54,137 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:03:54,137 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:03:54,137 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 17:03:54,138 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:03:54,138 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:03:54,138 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:03:54,138 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:03:54,138 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:03:54,138 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:03:54,138 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:03:54,138 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:03:54,139 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:03:54,139 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 17:03:54,139 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 17:03:54,140 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 17:03:54,140 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:03:54,140 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 17:03:54,140 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 17:03:54,141 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 17:03:54,141 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 17:03:54,141 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 17:03:54,142 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:03:54,142 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:03:54,142 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:03:54,142 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:03:54,142 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:03:54,142 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:03:54,142 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:03:54,142 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:03:54,142 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:03:54,142 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:03:54,142 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:03:54,142 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:03:54,143 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 17:03:54,144 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 17:03:54,145 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 17:03:54,146 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 17:03:54,146 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 17:03:54,146 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 17:03:54,146 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 17:03:54,146 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:03:54,146 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:03:54,146 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:03:54,146 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:03:54,146 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:03:54,146 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:03:54,146 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:03:54,146 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:03:54,147 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:03:54,147 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:03:54,147 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 17:03:54,147 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:03:54,147 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:03:54,147 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:03:54,147 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:03:54,147 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:03:54,147 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:03:54,147 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:03:54,147 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:03:54,148 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:03:54,149 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:03:54,149 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:03:54,149 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:03:54,149 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 17:03:54,149 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:03:54,149 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:03:54,149 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:03:54,149 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:03:54,149 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 17:03:54,150 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:03:54,151 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 17:03:54,151 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 17:03:54,151 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 17:03:54,151 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 17:03:54,151 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 17:03:54,151 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:03:54,152 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:03:54,153 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:03:54,154 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:03:54,155 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:03:54,156 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:03:54,157 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:03:54,158 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:03:54,158 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 17:03:54,158 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 17:03:54,158 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 17:03:54,158 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 17:03:54,158 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 17:03:54,158 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 17:03:54,158 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 17:03:54,158 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 17:03:54,158 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 17:03:54,158 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 17:03:54,159 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 17:03:54,159 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 17:03:54,159 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:03:54,160 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:03:54,161 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 17:03:54,162 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:03:54,163 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:03:54,164 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:03:54,165 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:03:54,166 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 17:03:54,167 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 17:03:54,168 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 17:03:54,168 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 17:03:54,168 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 17:03:54,168 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 17:03:54,168 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 17:03:54,394 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 17:03:54,395 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 17:03:54,395 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 17:03:54,395 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 17:03:54,395 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 17:03:54,395 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 17:03:54,396 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 17:03:54,396 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 17:03:54,396 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 17:03:54,396 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 17:03:54,410 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:03:54,426 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 17:03:54,437 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:54,440 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:54,443 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 17:03:54,454 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:54,463 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:54,467 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 17:03:54,479 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:54,484 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:54,496 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 17:03:54,496 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 17:03:54,533 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:03:54,533 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 17:03:54,533 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 17:03:54,555 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:03:54,745 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 17:03:54,755 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,756 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,756 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,756 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,756 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,757 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,757 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,757 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,757 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,758 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,758 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,758 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,759 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,759 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,759 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,759 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,759 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,760 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,760 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,760 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,760 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,760 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,760 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,760 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,760 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,760 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,760 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,760 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,761 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,761 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,761 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,761 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,761 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,762 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,763 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,763 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,763 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,763 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,763 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,764 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,764 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,764 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,764 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,764 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,765 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,765 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,765 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,765 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,765 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,765 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,766 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,766 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,766 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,766 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,766 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,766 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,766 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,766 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,766 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,766 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,766 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,767 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,767 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,767 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,767 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,767 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,768 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,768 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:03:54,768 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,768 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,768 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,768 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:03:54,776 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 17:03:54,776 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 17:03:54,777 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 17:03:54,777 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 17:03:54,787 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459868634784`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 17:03:54,790 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459868634784`
05 abr 2016 - 17:03:54,792 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459868634784`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 17:03:54,826 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 34 ms
05 abr 2016 - 17:03:54,835 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 17:03:54,835 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459868634784`
05 abr 2016 - 17:03:54,835 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459868634784`
05 abr 2016 - 17:03:54,849 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 14 ms
05 abr 2016 - 17:03:54,850 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 17:03:54,850 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 17:03:54,850 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 17:03:54,851 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 17:03:54,852 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 17:03:54,852 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 17:03:54,852 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 17:03:54,852 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 17:03:54,852 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 17:03:54,852 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 17:03:54,852 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:03:54,853 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:03:54,853 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:03:54,855 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 17:03:54,861 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 17:03:54,888 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 17:03:54,889 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 17:03:54,902 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 17:03:54,902 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 17:03:54,903 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 17:03:54,904 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 17:03:54,905 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 17:03:54,905 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 17:03:54,909 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 17:03:54,909 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 17:03:54,913 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 17:03:54,913 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 17:03:54,913 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 17:03:54,913 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:03:54,913 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 17:03:54,913 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 17:03:54,913 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 17:03:54,913 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 17:03:54,914 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 17:03:54,914 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 17:03:54,914 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 17:03:54,914 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 17:03:54,914 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 17:03:54,914 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 17:03:54,914 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Main.class
05 abr 2016 - 17:03:54,914 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 17:03:54,914 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 17:03:54,914 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 17:03:54,914 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 17:03:54,914 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 17:03:54,914 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 8 ficheros (metadata/class) ...
05 abr 2016 - 17:03:54,936 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 17:03:54,936 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 17:03:54,937 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Main, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 17:03:54,939 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 17:03:54,939 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:54,939 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 17:03:54,939 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 17:03:54,940 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 17:03:54,940 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 17:03:54,940 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 17:03:54,940 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 17:03:54,940 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 17:03:54,941 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 17:03:54,941 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:54,941 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 17:03:54,942 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 17:03:54,942 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 17:03:54,942 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 17:03:54,942 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 17:03:54,942 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 17:03:54,942 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 17:03:54,973 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:03:54,976 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 17:03:54,976 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:54,976 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 17:03:54,976 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 17:03:54,977 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 17:03:54,977 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 17:03:54,977 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 17:03:54,977 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 17:03:54,977 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 17:03:54,977 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 17:03:54,978 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:54,978 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 17:03:54,978 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 17:03:54,978 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 17:03:54,978 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 17:03:54,978 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 17:03:54,978 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 17:03:54,978 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 17:03:54,979 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:03:54,984 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:03:54,989 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:03:54,991 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 17:03:54,991 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 17:03:54,991 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:03:54,992 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:03:54,992 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 17:03:54,992 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 17:03:54,992 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 17:03:54,992 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 17:03:54,993 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 17:03:54,993 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,993 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,993 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,993 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,993 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,994 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 17:03:54,995 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 17:03:54,995 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:03:54,995 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 17:03:54,995 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 17:03:54,996 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 17:03:54,996 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 17:03:54,996 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 17:03:54,996 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,996 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,996 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 17:03:54,996 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:03:54,997 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:03:54,997 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 17:03:54,997 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 17:03:54,997 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 17:03:54,997 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 17:03:54,997 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 17:03:54,997 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,997 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,997 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,997 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,998 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 17:03:54,998 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 17:03:54,998 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:03:54,998 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 17:03:54,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 17:03:54,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 17:03:54,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 17:03:54,999 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 17:03:54,999 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,999 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,999 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,999 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:54,999 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:55,000 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 17:03:55,000 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 17:03:55,000 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 17:03:55,001 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 17:03:55,001 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 17:03:55,001 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 17:03:55,002 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 8 ficheros (metadata/class)
05 abr 2016 - 17:03:55,005 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 17:03:55,005 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:55,005 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 17:03:55,008 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 17:03:55,008 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 17:03:55,009 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:03:55,010 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 17:03:55,010 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:03:55,010 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:03:55,010 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 17:03:55,010 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 17:03:55,010 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 17:03:55,011 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 17:03:55,011 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:55,011 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 17:03:55,013 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 17:03:55,013 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 17:03:55,013 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:03:55,014 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 17:03:55,015 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:03:55,015 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:03:55,015 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 17:03:55,015 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 17:03:55,015 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 17:03:55,021 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 17:03:55,021 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,022 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:55,023 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:03:55,024 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,024 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:03:55,024 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,024 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,024 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 17:03:55,025 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,025 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,025 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 17:03:55,026 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,026 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,026 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,026 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,026 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,027 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,027 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,027 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,027 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,027 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:55,027 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 17:03:55,027 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 17:03:55,027 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,028 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:55,032 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 17:03:55,032 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:03:55,032 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,032 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,032 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 17:03:55,032 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:03:55,032 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 17:03:55,032 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:03:55,033 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,033 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,033 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,033 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:55,033 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,033 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 17:03:55,033 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 17:03:55,033 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 17:03:55,033 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,033 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 17:03:55,034 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:03:55,035 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,035 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,035 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,035 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:55,035 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 17:03:55,037 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,037 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:55,037 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,037 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:55,037 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,037 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,037 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 17:03:55,037 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,037 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,038 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,038 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:03:55,038 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,039 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,040 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:03:55,040 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,040 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,040 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,040 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:55,040 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,041 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,041 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 17:03:55,041 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,041 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:55,041 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,041 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:03:55,041 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,041 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,041 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 17:03:55,041 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,041 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:55,041 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,042 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,042 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:03:55,042 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:55,042 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:03:55,044 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 17:03:55,044 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c" y isolacion "serializable"
05 abr 2016 - 17:03:55,045 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:03:55,046 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 17:03:55,079 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 34 ms
05 abr 2016 - 17:03:55,079 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 17:03:55,080 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 17:03:55,081 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 17:03:55,083 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 17:03:55,084 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 17:03:55,085 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:03:55,085 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 17:03:55,087 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 17:03:55,088 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:03:55,092 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 17:03:55,096 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 17:03:55,097 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 17:03:55,098 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 17:03:55,099 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 17:03:55,100 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 17:03:55,101 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 17:03:55,102 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 17:03:55,103 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 17:03:55,104 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 17:03:55,105 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 17:03:55,106 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 17:03:55,107 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:03:55,109 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:03:55,110 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:03:55,112 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:03:55,113 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:03:55,114 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:03:55,115 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:03:55,117 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:03:55,118 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:03:55,119 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:03:55,120 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:03:55,121 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:03:55,122 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:03:55,123 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:03:55,124 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:03:55,124 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 17:03:55,125 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 17:03:55,125 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:03:55,125 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:03:55,126 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 17:03:55,126 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 17:03:55,126 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 17:03:55,127 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 17:03:58,805 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:03:58,821 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 17:03:58,833 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:58,835 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:58,838 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 17:03:58,848 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:58,855 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:58,860 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 17:03:58,877 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:58,883 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:03:58,896 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 17:03:58,906 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 17:03:58,935 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 17:03:58,935 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 17:03:58,951 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 17:03:58,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:58,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:58,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:58,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:58,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:58,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:58,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:58,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 17:03:58,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 17:03:58,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:03:58,952 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Character,java.lang.Integer
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.String,java.lang.Double
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.nio.ByteBuffer,java.lang.String,java.lang.Long
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.lang.String,java.sql.Timestamp,[Ljava.lang.Object;,java.util.Date
05 abr 2016 - 17:03:58,953 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 17:03:58,954 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
05 abr 2016 - 17:03:58,954 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 17:03:58,954 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 17:03:58,954 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 17:03:58,954 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 17:03:58,954 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 17:03:58,955 (main) DEBUG [DataNucleus.MetaData] - Listener found initialisation for persistable class main.Usuario
05 abr 2016 - 17:03:58,956 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /META-INF/package.jdo
05 abr 2016 - 17:03:58,957 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:58,957 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /package.jdo
05 abr 2016 - 17:03:58,958 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/package.jdo
05 abr 2016 - 17:03:58,958 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main.jdo
05 abr 2016 - 17:03:58,959 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/Usuario.jdo
05 abr 2016 - 17:03:58,959 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Usuario"
05 abr 2016 - 17:03:58,990 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:03:59,001 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 17:03:59,002 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 17:03:59,002 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:03:59,002 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 17:03:59,003 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 17:03:59,003 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 17:03:59,003 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 17:03:59,003 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 17:03:59,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,006 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /META-INF/package.jdo
05 abr 2016 - 17:03:59,006 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:59,006 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /package.jdo
05 abr 2016 - 17:03:59,006 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/package.jdo
05 abr 2016 - 17:03:59,007 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main.jdo
05 abr 2016 - 17:03:59,007 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/Reproduccion.jdo
05 abr 2016 - 17:03:59,007 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Reproduccion"
05 abr 2016 - 17:03:59,007 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:03:59,008 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 17:03:59,008 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:03:59,008 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:03:59,009 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 17:03:59,009 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 17:03:59,009 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 17:03:59,009 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 17:03:59,009 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 17:03:59,010 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,010 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,010 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,010 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,010 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,011 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /META-INF/package.jdo
05 abr 2016 - 17:03:59,011 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:59,011 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /package.jdo
05 abr 2016 - 17:03:59,011 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/package.jdo
05 abr 2016 - 17:03:59,012 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main.jdo
05 abr 2016 - 17:03:59,012 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/Cancion.jdo
05 abr 2016 - 17:03:59,012 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Cancion"
05 abr 2016 - 17:03:59,012 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:03:59,014 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 17:03:59,014 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:03:59,015 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:03:59,015 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 17:03:59,015 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 17:03:59,015 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 17:03:59,015 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 17:03:59,015 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 17:03:59,016 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,016 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,016 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,016 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,017 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 17:03:59,019 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 17:03:59,048 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:03:59,048 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 17:03:59,048 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 17:03:59,067 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:03:59,252 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 17:03:59,261 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,262 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,262 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,262 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,263 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,263 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,263 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,263 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,264 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,264 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,265 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,265 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,265 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,265 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,265 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,265 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,266 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,266 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,266 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,266 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,266 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,266 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,266 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,266 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,266 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,266 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,266 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,266 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,267 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,267 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,267 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,267 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,267 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,268 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,269 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,269 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,269 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,269 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,269 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,270 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,270 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,270 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,270 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,270 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,270 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,271 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,271 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,271 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,271 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,271 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,271 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,271 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,271 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,271 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,272 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,272 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,272 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,272 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,272 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,272 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,272 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,272 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,272 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,272 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,272 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,272 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,273 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,273 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:03:59,273 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,273 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,273 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,273 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:03:59,281 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 17:03:59,282 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 17:03:59,282 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 17:03:59,282 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 17:03:59,292 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459868639289`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,293 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459868639289`
05 abr 2016 - 17:03:59,295 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459868639289`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 17:03:59,331 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 36 ms
05 abr 2016 - 17:03:59,341 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 17:03:59,341 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459868639289`
05 abr 2016 - 17:03:59,341 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459868639289`
05 abr 2016 - 17:03:59,352 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 11 ms
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:03:59,353 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 17:03:59,354 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 17:03:59,354 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 17:03:59,354 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 17:03:59,354 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 17:03:59,354 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 17:03:59,354 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 17:03:59,354 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 17:03:59,354 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 17:03:59,354 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:03:59,354 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:03:59,355 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:03:59,355 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 17:03:59,356 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 17:03:59,357 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 17:03:59,360 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 17:03:59,360 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 17:03:59,360 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 17:03:59,360 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:03:59,360 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 17:03:59,360 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 17:03:59,360 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 17:03:59,360 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 17:03:59,360 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 17:03:59,360 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 17:03:59,361 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 17:03:59,372 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@78dd667e"
05 abr 2016 - 17:03:59,373 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 del tipo "soft" inicializada
05 abr 2016 - 17:03:59,375 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:03:59,375 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 17:03:59,376 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@7d3a22a9"
05 abr 2016 - 17:03:59,385 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 17:03:59,386 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 17:03:59,387 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 17:03:59,387 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 17:03:59,390 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /META-INF/package.jdo
05 abr 2016 - 17:03:59,391 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:59,391 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /package.jdo
05 abr 2016 - 17:03:59,392 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/package.jdo
05 abr 2016 - 17:03:59,392 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main.jdo
05 abr 2016 - 17:03:59,392 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/Artista.jdo
05 abr 2016 - 17:03:59,392 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Artista"
05 abr 2016 - 17:03:59,393 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:03:59,393 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 17:03:59,394 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 17:03:59,394 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:03:59,394 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 17:03:59,395 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 17:03:59,395 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 17:03:59,395 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 17:03:59,395 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 17:03:59,395 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,395 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:03:59,396 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 17:03:59,396 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 17:03:59,396 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:59,397 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 17:03:59,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 17:03:59,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 17:03:59,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:03:59,405 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 17:03:59,405 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:03:59,405 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:03:59,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 17:03:59,406 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 17:03:59,406 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 17:03:59,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 17:03:59,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 17:03:59,407 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 17:03:59,409 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 17:03:59,409 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 17:03:59,409 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:03:59,413 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 17:03:59,413 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:03:59,413 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:03:59,414 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 17:03:59,414 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 17:03:59,414 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 17:03:59,421 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 17:03:59,421 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,422 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,423 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:03:59,423 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,423 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,423 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:03:59,423 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,423 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 17:03:59,424 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,425 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:59,425 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 17:03:59,425 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,426 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,426 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,426 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,426 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,426 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,426 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,426 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,426 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,426 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:59,427 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 17:03:59,427 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 17:03:59,428 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:03:59,429 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,429 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:59,429 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 17:03:59,429 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 17:03:59,429 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,429 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:59,429 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,429 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,431 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 17:03:59,431 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:03:59,431 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,432 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 17:03:59,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:03:59,433 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 17:03:59,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:03:59,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:59,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 17:03:59,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 17:03:59,435 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,435 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:59,435 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,435 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,435 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,436 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:03:59,438 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,439 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 17:03:59,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,439 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,439 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:59,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,439 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 17:03:59,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,440 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:59,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,440 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:03:59,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,440 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:03:59,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 17:03:59,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 17:03:59,443 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 17:03:59,443 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8" y isolacion "serializable"
05 abr 2016 - 17:03:59,444 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:03:59,445 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 17:03:59,478 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 33 ms
05 abr 2016 - 17:03:59,478 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 17:03:59,479 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 17:03:59,480 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 17:03:59,481 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 17:03:59,482 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:03:59,483 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:03:59,483 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 17:03:59,484 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 17:03:59,485 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 17:03:59,488 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 17:03:59,493 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 17:03:59,494 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 17:03:59,496 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 17:03:59,497 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 17:03:59,498 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 17:03:59,499 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 17:03:59,500 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 17:03:59,502 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 17:03:59,503 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 17:03:59,504 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 17:03:59,505 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 17:03:59,506 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:03:59,508 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:03:59,510 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:03:59,511 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:03:59,513 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:03:59,514 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:03:59,515 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:03:59,516 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:03:59,518 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:03:59,519 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:03:59,520 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:03:59,521 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:03:59,523 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:03:59,524 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:03:59,525 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:03:59,525 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 17:03:59,526 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 17:03:59,526 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:03:59,526 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:03:59,530 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@7d3a22a9" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 17:03:59,540 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 17:03:59,541 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:03:59,541 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 17:03:59,541 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:03:59,551 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 17:03:59,552 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943781219>,<false>,<'AxiElorza'>,<'1234'>,<'Asier'>)
05 abr 2016 - 17:03:59,557 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8"
05 abr 2016 - 17:03:59,557 (main) WARN  [DataNucleus.Datastore.Persist] - Persistencia del objeto "main.Usuario@7d3a22a9" con SQL "INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (?,?,?,?,?,?)" ha tirado un error : Duplicate entry 'Asier' for key 'PRIMARY'
05 abr 2016 - 17:03:59,560 (main) DEBUG [DataNucleus.Transaction] - Haciendo rollback de la transacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 17:03:59,560 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_NEW"->""
05 abr 2016 - 17:03:59,560 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 17:03:59,560 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@7d3a22a9 de StateManager[pc=main.Usuario@7d3a22a9, lifecycle=P_NEW]
05 abr 2016 - 17:03:59,561 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 17:03:59,561 (main) DEBUG [DataNucleus.Transaction] - Rolling back [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc]]
05 abr 2016 - 17:03:59,561 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a rollback para la transacción "Xid=   "
05 abr 2016 - 17:03:59,562 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:03:59,563 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:03:59,563 (main) DEBUG [DataNucleus.Transaction] - Transacción rolled back en 3 ms
05 abr 2016 - 17:03:59,563 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 17:03:59,564 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 17:03:59,564 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@1bd4fdd"
05 abr 2016 - 17:03:59,564 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:03:59,564 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 17:03:59,566 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.query.cache.SoftQueryCompilationCache" inicializada
05 abr 2016 - 17:03:59,566 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryDatastoreCompilationCache" inicializada
05 abr 2016 - 17:03:59,567 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryResultsCache" inicializada
05 abr 2016 - 17:03:59,576 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario"
05 abr 2016 - 17:03:59,582 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 6 ms
05 abr 2016 - 17:03:59,582 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [symbols: this type=main.Usuario]
05 abr 2016 - 17:03:59,583 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario" para base de datos
05 abr 2016 - 17:03:59,603 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 20
05 abr 2016 - 17:03:59,603 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`"
05 abr 2016 - 17:03:59,605 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 17:03:59,605 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@158a8276, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:03:59,605 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 17:03:59,605 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:03:59,605 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario" ...
05 abr 2016 - 17:03:59,605 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@1e66f1f5"
05 abr 2016 - 17:03:59,605 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`
05 abr 2016 - 17:03:59,606 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 1 ms
05 abr 2016 - 17:03:59,608 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 3 ms
05 abr 2016 - 17:03:59,610 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 17:03:59,610 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 2
05 abr 2016 - 17:03:59,611 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1e178745" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 17:03:59,612 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1e178745" (id="Asier") añadido a la Cache de nivel 2 (campos="[0, 2, 5, 6, 7, 8]", version="")
05 abr 2016 - 17:03:59,613 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 17:03:59,614 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 17:03:59,614 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 17:03:59,614 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 17:03:59,614 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 17:03:59,614 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@158a8276]]
05 abr 2016 - 17:03:59,614 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 17:03:59,615 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:03:59,615 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:03:59,615 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 2 ms
05 abr 2016 - 17:03:59,616 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@1e178745 de StateManager[pc=main.Usuario@1e178745, lifecycle=HOLLOW]
05 abr 2016 - 17:03:59,616 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 17:03:59,616 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 17:03:59,616 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 17:03:59,616 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@757277dc"
05 abr 2016 - 17:03:59,616 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:03:59,616 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 17:03:59,617 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'Asier'"
05 abr 2016 - 17:03:59,623 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 6 ms
05 abr 2016 - 17:03:59,623 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [filter:DyadicExpression{PrimaryExpression{this.nombreUsu}  =  Literal{Asier}}]
  [symbols: this type=main.Usuario]
05 abr 2016 - 17:03:59,624 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'Asier'" para base de datos
05 abr 2016 - 17:03:59,629 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 4
05 abr 2016 - 17:03:59,629 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario WHERE this.nombreUsu == 'Asier' Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0` WHERE `A0`.`NOMBREUSU` = 'Asier'"
05 abr 2016 - 17:03:59,630 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@17a7f733 [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 17:03:59,630 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@68567e20, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:03:59,630 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@17a7f733 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@76ed1b7c, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 17:03:59,630 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@17a7f733 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@76ed1b7c, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:03:59,630 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'Asier'" ...
05 abr 2016 - 17:03:59,631 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@6236eb5f"
05 abr 2016 - 17:03:59,631 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0` WHERE `A0`.`NOMBREUSU` = 'Asier'
05 abr 2016 - 17:03:59,631 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 0 ms
05 abr 2016 - 17:03:59,632 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 2 ms
05 abr 2016 - 17:03:59,632 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 17:03:59,632 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@fa36558" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 17:03:59,633 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@fa36558" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 17:03:59,633 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Asier" usado de la Cache nivel 2 (campos="[0, 2, 5, 6, 7, 8]", version="") - representado como "main.Usuario@fa36558"
05 abr 2016 - 17:03:59,633 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@fa36558" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_CLEAN"->"P_DIRTY"
05 abr 2016 - 17:03:59,634 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 17:03:59,634 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 17:03:59,635 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 17:03:59,635 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 17:03:59,636 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 17:03:59,636 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@fa36558" (id="main.Usuario@fa36558") cambiado en la Cache de nivel 2 (campos="[0, 2, 5, 6, 7, 8]", version="") para campos "[5]"
05 abr 2016 - 17:03:59,636 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@68567e20]]
05 abr 2016 - 17:03:59,636 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@17a7f733 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@76ed1b7c, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 17:03:59,636 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@17a7f733 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@76ed1b7c, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:03:59,637 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@17a7f733 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@76ed1b7c, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:03:59,637 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@fa36558" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_DIRTY"->"HOLLOW"
05 abr 2016 - 17:03:59,638 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@fa36558" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 17:03:59,638 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 4 ms
05 abr 2016 - 17:03:59,638 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@fa36558 de StateManager[pc=main.Usuario@fa36558, lifecycle=HOLLOW]
05 abr 2016 - 17:03:59,638 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 17:03:59,638 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 17:03:59,638 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 17:03:59,638 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@37f1104d"
05 abr 2016 - 17:03:59,638 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:03:59,638 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 17:03:59,638 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'iker'"
05 abr 2016 - 17:03:59,639 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 1 ms
05 abr 2016 - 17:03:59,639 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [filter:DyadicExpression{PrimaryExpression{this.nombreUsu}  =  Literal{iker}}]
  [symbols: this type=main.Usuario]
05 abr 2016 - 17:03:59,639 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'iker'" para base de datos
05 abr 2016 - 17:03:59,640 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 1
05 abr 2016 - 17:03:59,640 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario WHERE this.nombreUsu == 'iker' Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0` WHERE `A0`.`NOMBREUSU` = 'iker'"
05 abr 2016 - 17:03:59,641 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@186f8716 [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 17:03:59,641 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@1d8bd0de, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:03:59,641 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@186f8716 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@45ca843, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 17:03:59,641 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@186f8716 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@45ca843, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:03:59,641 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'iker'" ...
05 abr 2016 - 17:03:59,642 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@36b4fe2a"
05 abr 2016 - 17:03:59,642 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0` WHERE `A0`.`NOMBREUSU` = 'iker'
05 abr 2016 - 17:03:59,642 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 0 ms
05 abr 2016 - 17:03:59,642 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 1 ms
05 abr 2016 - 17:03:59,643 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 17:03:59,643 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 17:03:59,643 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 17:03:59,643 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 17:03:59,643 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 17:03:59,643 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@1d8bd0de]]
05 abr 2016 - 17:03:59,643 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@186f8716 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@45ca843, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 17:03:59,643 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@186f8716 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@45ca843, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:03:59,644 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@186f8716 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@45ca843, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:03:59,644 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 1 ms
05 abr 2016 - 17:03:59,644 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 17:03:59,644 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 17:09:26,192 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:09:26,210 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 17:09:26,221 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:26,224 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:26,226 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 17:09:26,236 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:26,246 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:26,249 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 17:09:26,262 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:26,269 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:26,291 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 17:09:26,316 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 17:09:26,317 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 17:09:26,332 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 17:09:26,332 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:26,333 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:26,333 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:26,333 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:26,333 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:26,333 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:26,333 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:26,333 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:26,333 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 17:09:26,333 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:09:26,333 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 17:09:26,334 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 17:09:26,334 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 17:09:26,334 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 17:09:26,334 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 17:09:26,334 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 17:09:26,334 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 17:09:26,334 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:09:26,334 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:09:26,334 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 17:09:26,334 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 17:09:26,334 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:09:26,335 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:09:26,335 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:09:26,335 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 17:09:26,335 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 17:09:26,335 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 17:09:26,335 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 17:09:26,335 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 17:09:26,335 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 17:09:26,335 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 17:09:26,337 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 17:09:26,337 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 17:09:26,338 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 17:09:26,338 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 17:09:26,338 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 17:09:26,338 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 17:09:26,338 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 17:09:26,338 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 17:09:26,338 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 17:09:26,338 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 17:09:26,339 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 17:09:26,339 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 17:09:26,367 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Main, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 17:09:26,409 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:09:26,414 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:09:26,422 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 17:09:26,422 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:26,422 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 17:09:26,423 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 17:09:26,423 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 17:09:26,423 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 17:09:26,423 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 17:09:26,423 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 17:09:26,423 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 17:09:26,424 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 17:09:26,424 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:26,424 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 17:09:26,424 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 17:09:26,425 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 17:09:26,425 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 17:09:26,425 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 17:09:26,425 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 17:09:26,425 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 17:09:26,426 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 17:09:26,426 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:26,426 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 17:09:26,426 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 17:09:26,426 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 17:09:26,427 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 17:09:26,427 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 17:09:26,427 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 17:09:26,427 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 17:09:26,427 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 17:09:26,427 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:26,428 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 17:09:26,428 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 17:09:26,428 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 17:09:26,428 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 17:09:26,428 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 17:09:26,428 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 17:09:26,428 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 17:09:26,429 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:09:26,429 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:09:26,430 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 17:09:26,430 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 17:09:26,430 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,431 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,432 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 17:09:26,432 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,432 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,432 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,432 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,433 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 17:09:26,433 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,433 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,433 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,433 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,433 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,433 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 17:09:26,433 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,433 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,433 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,434 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,434 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:26,434 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 17:09:26,435 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 17:09:26,436 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 17:09:26,437 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 17:09:26,437 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 17:09:26,437 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 17:09:26,439 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 17:09:26,451 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:09:26,451 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:09:26,452 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:09:26,453 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:09:26,459 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:09:26,462 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 17:09:26,462 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 17:09:26,462 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:09:26,463 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:09:26,464 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:09:26,464 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 17:09:26,465 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:09:26,465 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:09:26,465 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:09:26,466 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:09:26,466 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:09:26,466 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:09:26,466 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:09:26,466 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:09:26,466 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:09:26,467 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:09:26,467 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:09:26,467 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:09:26,467 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:09:26,467 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:09:26,467 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:09:26,467 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:09:26,468 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:09:26,468 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:09:26,468 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:09:26,469 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:09:26,469 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:09:26,469 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:09:26,469 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:09:26,469 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:09:26,469 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:09:26,470 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:09:26,470 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 17:09:26,470 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:09:26,470 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:09:26,470 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:09:26,470 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:09:26,470 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:09:26,471 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:09:26,471 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:09:26,471 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:09:26,471 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:09:26,472 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 17:09:26,472 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 17:09:26,472 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 17:09:26,472 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:09:26,473 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 17:09:26,473 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 17:09:26,473 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 17:09:26,474 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 17:09:26,474 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 17:09:26,474 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:09:26,475 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:09:26,476 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:09:26,477 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:09:26,477 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 17:09:26,477 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 17:09:26,477 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 17:09:26,477 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 17:09:26,477 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 17:09:26,477 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 17:09:26,477 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 17:09:26,477 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 17:09:26,477 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 17:09:26,477 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 17:09:26,477 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 17:09:26,478 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:09:26,478 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 17:09:26,478 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 17:09:26,478 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 17:09:26,478 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 17:09:26,478 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 17:09:26,478 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 17:09:26,478 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 17:09:26,478 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 17:09:26,478 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 17:09:26,478 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:09:26,478 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:09:26,479 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:09:26,480 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:09:26,480 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:09:26,480 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:09:26,480 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:09:26,480 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:09:26,480 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:09:26,480 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:09:26,480 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:09:26,480 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:09:26,480 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:09:26,480 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:09:26,480 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:09:26,481 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:09:26,481 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:09:26,481 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:09:26,481 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:09:26,481 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:09:26,481 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:09:26,481 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:09:26,481 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:09:26,481 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 17:09:26,482 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 17:09:26,483 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 17:09:26,483 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 17:09:26,483 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 17:09:26,483 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 17:09:26,483 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:09:26,483 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 17:09:26,483 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:09:26,483 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 17:09:26,483 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 17:09:26,483 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 17:09:26,483 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 17:09:26,484 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 17:09:26,484 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 17:09:26,484 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 17:09:26,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:09:26,485 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 17:09:26,486 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:09:26,487 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:09:26,488 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:09:26,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:09:26,490 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:09:26,490 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:09:26,490 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 17:09:26,490 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 17:09:26,490 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 17:09:26,490 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 17:09:26,490 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 17:09:26,490 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 17:09:26,490 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 17:09:26,490 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 17:09:26,490 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 17:09:26,490 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 17:09:26,491 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 17:09:26,491 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 17:09:26,491 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 17:09:26,491 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:09:26,492 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:09:26,493 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 17:09:26,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:09:26,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:09:26,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:09:26,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:09:26,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 17:09:26,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 17:09:26,500 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 17:09:26,500 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 17:09:26,500 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 17:09:26,725 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 17:09:26,726 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 17:09:26,726 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 17:09:26,726 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 17:09:26,726 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 17:09:26,726 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 17:09:26,727 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 17:09:26,727 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 17:09:26,727 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 17:09:26,727 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 17:09:26,741 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:09:26,759 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 17:09:26,770 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:26,772 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:26,776 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 17:09:26,788 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:26,796 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:26,800 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 17:09:26,811 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:26,818 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:26,832 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 17:09:26,832 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 17:09:26,868 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:09:26,868 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 17:09:26,868 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 17:09:26,894 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:09:27,088 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 17:09:27,099 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,101 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,101 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,101 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,101 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,102 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,102 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,102 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,103 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,103 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,104 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,104 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,104 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,104 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,104 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,104 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,105 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,105 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,105 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,105 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,105 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,105 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,105 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,105 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,105 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,105 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,106 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,106 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,106 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,106 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,106 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,106 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,107 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,108 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,109 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,109 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,109 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,109 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,109 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,110 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,110 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,110 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,110 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,110 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,110 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,111 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,111 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,111 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,111 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,111 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,111 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,111 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,111 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,112 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,112 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,112 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,112 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,112 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,112 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,112 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,112 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,112 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,112 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,113 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,113 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,113 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,113 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,113 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:09:27,113 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,113 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,114 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,114 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:09:27,123 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 17:09:27,123 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 17:09:27,123 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 17:09:27,123 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 17:09:27,134 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459868967130`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,136 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459868967130`
05 abr 2016 - 17:09:27,138 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459868967130`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 17:09:27,172 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 34 ms
05 abr 2016 - 17:09:27,181 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 17:09:27,181 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459868967130`
05 abr 2016 - 17:09:27,181 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459868967130`
05 abr 2016 - 17:09:27,192 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 11 ms
05 abr 2016 - 17:09:27,192 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 17:09:27,192 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 17:09:27,192 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 17:09:27,192 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 17:09:27,192 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 17:09:27,192 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 17:09:27,193 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 17:09:27,194 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:09:27,194 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:09:27,194 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:09:27,195 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 17:09:27,200 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 17:09:27,224 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 17:09:27,224 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 17:09:27,236 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 17:09:27,236 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:27,236 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:27,236 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:27,236 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:27,236 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 17:09:27,237 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 17:09:27,238 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 17:09:27,238 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 17:09:27,238 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 17:09:27,238 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 17:09:27,241 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 17:09:27,241 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 17:09:27,245 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 17:09:27,245 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 17:09:27,245 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 17:09:27,245 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:09:27,245 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 17:09:27,245 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 17:09:27,246 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 17:09:27,246 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 17:09:27,246 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 17:09:27,246 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 17:09:27,246 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 17:09:27,246 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 17:09:27,246 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 17:09:27,246 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 17:09:27,246 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Main.class
05 abr 2016 - 17:09:27,246 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 17:09:27,246 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 17:09:27,246 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 17:09:27,246 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 17:09:27,246 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 17:09:27,246 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 8 ficheros (metadata/class) ...
05 abr 2016 - 17:09:27,270 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 17:09:27,270 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 17:09:27,271 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Main, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 17:09:27,272 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 17:09:27,273 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:27,273 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 17:09:27,273 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 17:09:27,273 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 17:09:27,274 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 17:09:27,274 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 17:09:27,274 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 17:09:27,274 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 17:09:27,274 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 17:09:27,275 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:27,275 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 17:09:27,275 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 17:09:27,275 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 17:09:27,275 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 17:09:27,275 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 17:09:27,275 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 17:09:27,275 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 17:09:27,306 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:09:27,308 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 17:09:27,309 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:27,309 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 17:09:27,309 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 17:09:27,309 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 17:09:27,309 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 17:09:27,309 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 17:09:27,309 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 17:09:27,310 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 17:09:27,310 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 17:09:27,310 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:27,310 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 17:09:27,311 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 17:09:27,311 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 17:09:27,311 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 17:09:27,311 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 17:09:27,311 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 17:09:27,311 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 17:09:27,312 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:09:27,317 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:09:27,321 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:09:27,323 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 17:09:27,323 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 17:09:27,324 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:09:27,324 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:09:27,324 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 17:09:27,324 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 17:09:27,325 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 17:09:27,325 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 17:09:27,325 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 17:09:27,325 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,325 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,325 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,325 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,325 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,327 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 17:09:27,327 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 17:09:27,327 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:09:27,327 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 17:09:27,327 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 17:09:27,328 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 17:09:27,328 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 17:09:27,328 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 17:09:27,329 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,329 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,329 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 17:09:27,329 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:09:27,329 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:09:27,330 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 17:09:27,330 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 17:09:27,330 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 17:09:27,330 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 17:09:27,330 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 17:09:27,330 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,330 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,330 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,330 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,331 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 17:09:27,331 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 17:09:27,331 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:09:27,331 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 17:09:27,332 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 17:09:27,332 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 17:09:27,332 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 17:09:27,332 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 17:09:27,332 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,332 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,332 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,332 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,332 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:27,333 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 17:09:27,333 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 17:09:27,333 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 17:09:27,334 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 17:09:27,334 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 17:09:27,335 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 17:09:27,335 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 8 ficheros (metadata/class)
05 abr 2016 - 17:09:27,338 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 17:09:27,338 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:27,338 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 17:09:27,341 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 17:09:27,341 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 17:09:27,342 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:09:27,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 17:09:27,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:09:27,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:09:27,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 17:09:27,343 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 17:09:27,343 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 17:09:27,344 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 17:09:27,344 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:27,344 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 17:09:27,345 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 17:09:27,346 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 17:09:27,346 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:09:27,347 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 17:09:27,347 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:09:27,347 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:09:27,347 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 17:09:27,348 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 17:09:27,348 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 17:09:27,353 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 17:09:27,354 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,355 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:27,356 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:09:27,356 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,356 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:09:27,356 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,357 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,357 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 17:09:27,357 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,357 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,357 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 17:09:27,358 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,358 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,358 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,358 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,358 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,358 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,359 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,359 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,359 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,359 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:27,359 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 17:09:27,359 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 17:09:27,359 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,359 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:27,364 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 17:09:27,364 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:09:27,364 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,364 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,364 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 17:09:27,364 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:09:27,365 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 17:09:27,365 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:09:27,365 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,365 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,365 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,365 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:27,365 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,365 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 17:09:27,365 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 17:09:27,365 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 17:09:27,365 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,365 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 17:09:27,366 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:09:27,367 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,367 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,367 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,367 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:27,367 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 17:09:27,368 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,369 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:27,369 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,369 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:27,369 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,369 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,369 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 17:09:27,369 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,369 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,369 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,369 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:09:27,370 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,371 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,371 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:09:27,372 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,372 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,372 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,372 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:27,372 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,372 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,372 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 17:09:27,372 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:27,373 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:09:27,375 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 17:09:27,375 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c" y isolacion "serializable"
05 abr 2016 - 17:09:27,377 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:09:27,377 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 17:09:27,413 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 35 ms
05 abr 2016 - 17:09:27,413 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 17:09:27,414 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 17:09:27,415 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 17:09:27,416 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 17:09:27,417 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 17:09:27,418 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:09:27,419 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 17:09:27,420 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 17:09:27,420 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:09:27,424 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 17:09:27,428 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 17:09:27,430 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 17:09:27,431 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 17:09:27,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 17:09:27,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 17:09:27,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 17:09:27,435 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 17:09:27,436 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 17:09:27,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 17:09:27,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 17:09:27,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 17:09:27,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:09:27,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:09:27,443 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:09:27,444 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:09:27,445 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:09:27,447 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:09:27,448 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:09:27,449 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:09:27,450 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:09:27,451 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:09:27,452 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:09:27,454 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:09:27,455 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:09:27,456 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:09:27,457 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:09:27,457 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 17:09:27,459 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 17:09:27,459 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:09:27,459 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:09:27,460 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 17:09:27,460 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 17:09:27,460 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 17:09:27,461 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 17:09:30,153 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:09:30,170 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 17:09:30,181 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:30,184 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:30,186 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 17:09:30,196 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:30,205 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:30,208 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 17:09:30,220 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:30,227 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:09:30,239 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 17:09:30,248 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 17:09:30,275 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 17:09:30,276 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 17:09:30,292 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 17:09:30,292 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:30,292 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:30,292 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:30,292 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Character,java.lang.Integer
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.String,java.lang.Double
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.nio.ByteBuffer,java.lang.String,java.lang.Long
05 abr 2016 - 17:09:30,293 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.lang.String,java.sql.Timestamp,[Ljava.lang.Object;,java.util.Date
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 17:09:30,294 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 17:09:30,295 (main) DEBUG [DataNucleus.MetaData] - Listener found initialisation for persistable class main.Usuario
05 abr 2016 - 17:09:30,296 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /META-INF/package.jdo
05 abr 2016 - 17:09:30,296 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:30,297 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /package.jdo
05 abr 2016 - 17:09:30,297 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/package.jdo
05 abr 2016 - 17:09:30,297 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main.jdo
05 abr 2016 - 17:09:30,297 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/Usuario.jdo
05 abr 2016 - 17:09:30,297 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Usuario"
05 abr 2016 - 17:09:30,329 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:09:30,340 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 17:09:30,341 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 17:09:30,341 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:09:30,341 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 17:09:30,342 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 17:09:30,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 17:09:30,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 17:09:30,343 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 17:09:30,343 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,343 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,343 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,344 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,344 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,345 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /META-INF/package.jdo
05 abr 2016 - 17:09:30,345 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:30,346 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /package.jdo
05 abr 2016 - 17:09:30,346 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/package.jdo
05 abr 2016 - 17:09:30,346 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main.jdo
05 abr 2016 - 17:09:30,347 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/Reproduccion.jdo
05 abr 2016 - 17:09:30,347 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Reproduccion"
05 abr 2016 - 17:09:30,347 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:09:30,348 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 17:09:30,348 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:09:30,348 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:09:30,348 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 17:09:30,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 17:09:30,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 17:09:30,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 17:09:30,349 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 17:09:30,349 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,349 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,349 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,349 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,350 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,350 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /META-INF/package.jdo
05 abr 2016 - 17:09:30,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:30,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /package.jdo
05 abr 2016 - 17:09:30,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/package.jdo
05 abr 2016 - 17:09:30,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main.jdo
05 abr 2016 - 17:09:30,352 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/Cancion.jdo
05 abr 2016 - 17:09:30,352 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Cancion"
05 abr 2016 - 17:09:30,352 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:09:30,353 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 17:09:30,354 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:09:30,354 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:09:30,354 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 17:09:30,355 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 17:09:30,355 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 17:09:30,355 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 17:09:30,355 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 17:09:30,355 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,355 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,355 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,355 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,356 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 17:09:30,358 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 17:09:30,385 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:09:30,385 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 17:09:30,385 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 17:09:30,403 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:09:30,591 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 17:09:30,601 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,601 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,601 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,602 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,602 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,602 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,602 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,603 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,603 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,604 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,604 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,605 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,605 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,605 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,605 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,605 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,605 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,605 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,605 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,606 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,606 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,606 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,606 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,606 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,606 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,606 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,606 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,606 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,606 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,606 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,606 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,607 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,607 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,608 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,609 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,609 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,609 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,609 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,609 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,609 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,609 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,610 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,610 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,610 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,610 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,611 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,611 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,611 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,611 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,611 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,611 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,611 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,611 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,611 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,612 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,612 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,612 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,612 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,612 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,612 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,612 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,612 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,612 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,612 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,612 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,613 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,613 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,613 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:09:30,613 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,613 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,613 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,613 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:09:30,621 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 17:09:30,622 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 17:09:30,622 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 17:09:30,622 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 17:09:30,632 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459868970629`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,633 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459868970629`
05 abr 2016 - 17:09:30,634 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459868970629`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 17:09:30,669 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 34 ms
05 abr 2016 - 17:09:30,678 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 17:09:30,678 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459868970629`
05 abr 2016 - 17:09:30,678 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459868970629`
05 abr 2016 - 17:09:30,690 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 12 ms
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 17:09:30,691 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 17:09:30,692 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 17:09:30,692 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 17:09:30,692 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 17:09:30,692 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:09:30,692 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:09:30,693 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:09:30,694 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 17:09:30,695 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 17:09:30,696 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 17:09:30,699 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 17:09:30,699 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 17:09:30,699 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 17:09:30,699 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:09:30,699 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 17:09:30,699 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 17:09:30,699 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 17:09:30,699 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 17:09:30,699 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 17:09:30,699 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 17:09:30,699 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 17:09:30,710 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@78dd667e"
05 abr 2016 - 17:09:30,711 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 del tipo "soft" inicializada
05 abr 2016 - 17:09:30,713 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:09:30,713 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 17:09:30,714 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@7d3a22a9"
05 abr 2016 - 17:09:30,723 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 17:09:30,723 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 17:09:30,725 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 17:09:30,725 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 17:09:30,728 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /META-INF/package.jdo
05 abr 2016 - 17:09:30,729 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:30,730 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /package.jdo
05 abr 2016 - 17:09:30,730 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/package.jdo
05 abr 2016 - 17:09:30,730 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main.jdo
05 abr 2016 - 17:09:30,731 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/Artista.jdo
05 abr 2016 - 17:09:30,731 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Artista"
05 abr 2016 - 17:09:30,731 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:09:30,732 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 17:09:30,732 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 17:09:30,733 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:09:30,733 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 17:09:30,733 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 17:09:30,733 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 17:09:30,734 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 17:09:30,734 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 17:09:30,734 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,734 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:09:30,734 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 17:09:30,735 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 17:09:30,735 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:30,735 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 17:09:30,740 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 17:09:30,740 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 17:09:30,740 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:09:30,744 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 17:09:30,744 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:09:30,744 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:09:30,745 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 17:09:30,745 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 17:09:30,745 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 17:09:30,745 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 17:09:30,745 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 17:09:30,746 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 17:09:30,748 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 17:09:30,748 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 17:09:30,748 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:09:30,750 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 17:09:30,751 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:09:30,751 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:09:30,751 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 17:09:30,751 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 17:09:30,751 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 17:09:30,758 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 17:09:30,758 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,758 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,759 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:09:30,760 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,760 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,760 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:09:30,760 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,760 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 17:09:30,761 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,762 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:30,762 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 17:09:30,762 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,763 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,763 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,763 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,763 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,763 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,763 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,763 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,763 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,763 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:30,763 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 17:09:30,763 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 17:09:30,765 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:09:30,765 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,765 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:30,765 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 17:09:30,766 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 17:09:30,766 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,766 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:30,766 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,766 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,768 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 17:09:30,768 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:09:30,768 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,769 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,770 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 17:09:30,770 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:09:30,770 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 17:09:30,770 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:09:30,770 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,770 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,770 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,770 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:30,770 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,771 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 17:09:30,771 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 17:09:30,772 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,772 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:09:30,773 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,774 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:30,774 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,774 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:09:30,775 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,776 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,776 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 17:09:30,776 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,776 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,776 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,776 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:30,777 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,777 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,777 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 17:09:30,777 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,777 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:30,777 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,777 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:09:30,777 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,777 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:09:30,777 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 17:09:30,778 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,778 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 17:09:30,780 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 17:09:30,780 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8" y isolacion "serializable"
05 abr 2016 - 17:09:30,781 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:09:30,782 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 17:09:30,815 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 33 ms
05 abr 2016 - 17:09:30,815 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 17:09:30,816 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 17:09:30,817 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 17:09:30,818 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 17:09:30,819 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:09:30,820 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:09:30,821 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 17:09:30,822 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 17:09:30,823 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 17:09:30,826 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 17:09:30,831 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 17:09:30,833 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 17:09:30,834 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 17:09:30,835 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 17:09:30,836 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 17:09:30,837 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 17:09:30,838 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 17:09:30,839 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 17:09:30,840 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 17:09:30,841 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 17:09:30,842 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 17:09:30,843 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:09:30,845 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:09:30,847 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:09:30,848 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:09:30,850 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:09:30,851 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:09:30,852 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:09:30,854 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:09:30,855 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:09:30,856 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:09:30,858 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:09:30,859 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:09:30,860 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:09:30,861 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:09:30,862 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:09:30,862 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 17:09:30,863 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 17:09:30,863 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:09:30,863 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:09:30,867 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@7d3a22a9" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 17:09:30,879 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 17:09:30,880 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:09:30,880 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 17:09:30,881 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:09:30,889 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 17:09:30,891 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943781219>,<false>,<'AxiElorza'>,<'1234'>,<'Asier'>)
05 abr 2016 - 17:09:30,892 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8"
05 abr 2016 - 17:09:30,892 (main) WARN  [DataNucleus.Datastore.Persist] - Persistencia del objeto "main.Usuario@7d3a22a9" con SQL "INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (?,?,?,?,?,?)" ha tirado un error : Duplicate entry 'Asier' for key 'PRIMARY'
05 abr 2016 - 17:09:30,894 (main) DEBUG [DataNucleus.Transaction] - Haciendo rollback de la transacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 17:09:30,894 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_NEW"->""
05 abr 2016 - 17:09:30,894 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 17:09:30,895 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@7d3a22a9 de StateManager[pc=main.Usuario@7d3a22a9, lifecycle=P_NEW]
05 abr 2016 - 17:09:30,895 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 17:09:30,895 (main) DEBUG [DataNucleus.Transaction] - Rolling back [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc]]
05 abr 2016 - 17:09:30,895 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a rollback para la transacción "Xid=   "
05 abr 2016 - 17:09:30,896 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:09:30,897 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:09:30,897 (main) DEBUG [DataNucleus.Transaction] - Transacción rolled back en 3 ms
05 abr 2016 - 17:09:30,897 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 17:09:30,897 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 17:09:30,898 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@1bd4fdd"
05 abr 2016 - 17:09:30,898 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:09:30,898 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 17:09:30,900 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.query.cache.SoftQueryCompilationCache" inicializada
05 abr 2016 - 17:09:30,900 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryDatastoreCompilationCache" inicializada
05 abr 2016 - 17:09:30,901 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryResultsCache" inicializada
05 abr 2016 - 17:09:30,909 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario"
05 abr 2016 - 17:09:30,914 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 5 ms
05 abr 2016 - 17:09:30,914 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [symbols: this type=main.Usuario]
05 abr 2016 - 17:09:30,915 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario" para base de datos
05 abr 2016 - 17:09:30,931 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 16
05 abr 2016 - 17:09:30,931 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`"
05 abr 2016 - 17:09:30,933 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 17:09:30,933 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@158a8276, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:09:30,933 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 17:09:30,933 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:09:30,933 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario" ...
05 abr 2016 - 17:09:30,934 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@1e66f1f5"
05 abr 2016 - 17:09:30,934 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`
05 abr 2016 - 17:09:30,934 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 0 ms
05 abr 2016 - 17:09:30,937 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 4 ms
05 abr 2016 - 17:09:30,938 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 17:09:30,938 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 2
05 abr 2016 - 17:09:30,939 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1e178745" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 17:09:30,940 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1e178745" (id="Asier") añadido a la Cache de nivel 2 (campos="[0, 2, 5, 6, 7, 8]", version="")
05 abr 2016 - 17:09:30,941 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 17:09:30,941 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 17:09:30,941 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 17:09:30,941 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 17:09:30,941 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 17:09:30,941 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@158a8276]]
05 abr 2016 - 17:09:30,941 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 17:09:30,942 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:09:30,942 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:09:30,943 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 2 ms
05 abr 2016 - 17:09:30,943 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@1e178745 de StateManager[pc=main.Usuario@1e178745, lifecycle=HOLLOW]
05 abr 2016 - 17:09:30,943 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 17:09:30,943 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 17:09:30,943 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 17:09:30,943 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@757277dc"
05 abr 2016 - 17:09:30,943 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:09:30,943 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 17:09:30,945 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'Asier'"
05 abr 2016 - 17:09:30,953 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 8 ms
05 abr 2016 - 17:09:30,953 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [filter:DyadicExpression{PrimaryExpression{this.nombreUsu}  =  Literal{Asier}}]
  [symbols: this type=main.Usuario]
05 abr 2016 - 17:09:30,953 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'Asier'" para base de datos
05 abr 2016 - 17:09:30,958 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 4
05 abr 2016 - 17:09:30,958 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario WHERE this.nombreUsu == 'Asier' Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0` WHERE `A0`.`NOMBREUSU` = 'Asier'"
05 abr 2016 - 17:09:30,959 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@17a7f733 [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 17:09:30,959 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@68567e20, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:09:30,959 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@17a7f733 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@76ed1b7c, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 17:09:30,959 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@17a7f733 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@76ed1b7c, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:09:30,959 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario WHERE this.nombreUsu == 'Asier'" ...
05 abr 2016 - 17:09:30,960 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@6236eb5f"
05 abr 2016 - 17:09:30,960 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0` WHERE `A0`.`NOMBREUSU` = 'Asier'
05 abr 2016 - 17:09:30,960 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 0 ms
05 abr 2016 - 17:09:30,961 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 2 ms
05 abr 2016 - 17:09:30,961 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 17:09:30,961 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@fa36558" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 17:09:30,962 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@fa36558" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 17:09:30,962 (main) DEBUG [DataNucleus.Cache] - Objeto con identidad="main.Usuario:Asier" usado de la Cache nivel 2 (campos="[0, 2, 5, 6, 7, 8]", version="") - representado como "main.Usuario@fa36558"
05 abr 2016 - 17:09:30,962 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@fa36558" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_CLEAN"->"P_DIRTY"
05 abr 2016 - 17:09:30,963 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 17:09:30,963 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 1 objetos registrados
05 abr 2016 - 17:09:30,964 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 17:09:30,965 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 17:09:30,965 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 17:09:30,965 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@fa36558" (id="main.Usuario@fa36558") cambiado en la Cache de nivel 2 (campos="[0, 2, 5, 6, 7, 8]", version="") para campos "[5]"
05 abr 2016 - 17:09:30,965 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@68567e20]]
05 abr 2016 - 17:09:30,965 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@17a7f733 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@76ed1b7c, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 17:09:30,965 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@17a7f733 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@76ed1b7c, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:09:30,966 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@17a7f733 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@76ed1b7c, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:09:30,967 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@fa36558" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_DIRTY"->"HOLLOW"
05 abr 2016 - 17:09:30,967 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@fa36558" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 17:09:30,967 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 4 ms
05 abr 2016 - 17:09:30,967 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@fa36558 de StateManager[pc=main.Usuario@fa36558, lifecycle=HOLLOW]
05 abr 2016 - 17:09:30,967 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 17:09:30,967 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 17:09:30,967 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 17:10:47,054 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:10:47,074 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 17:10:47,085 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:47,087 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:47,090 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 17:10:47,100 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:47,107 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:47,112 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 17:10:47,129 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:47,135 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:47,160 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 17:10:47,188 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 17:10:47,188 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 17:10:47,204 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 17:10:47,205 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:47,205 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:47,205 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:47,205 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:47,205 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:47,205 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:47,205 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:47,206 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:47,206 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 17:10:47,206 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:10:47,206 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 17:10:47,206 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 17:10:47,206 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 17:10:47,206 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 17:10:47,206 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 17:10:47,206 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 17:10:47,206 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 17:10:47,207 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:10:47,207 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:10:47,207 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 17:10:47,207 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 17:10:47,207 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:10:47,207 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:10:47,207 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:10:47,207 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 17:10:47,207 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 17:10:47,207 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 17:10:47,207 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 17:10:47,207 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 17:10:47,208 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 17:10:47,208 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 17:10:47,209 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 17:10:47,210 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 17:10:47,210 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 17:10:47,210 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 17:10:47,210 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 17:10:47,210 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 17:10:47,210 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 17:10:47,210 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 17:10:47,210 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 17:10:47,210 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 17:10:47,210 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 17:10:47,211 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 17:10:47,232 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Main, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 17:10:47,273 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:10:47,278 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:10:47,285 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 17:10:47,285 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:47,286 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 17:10:47,286 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 17:10:47,286 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 17:10:47,286 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 17:10:47,286 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 17:10:47,286 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 17:10:47,287 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 17:10:47,287 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 17:10:47,287 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:47,287 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 17:10:47,288 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 17:10:47,288 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 17:10:47,288 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 17:10:47,288 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 17:10:47,288 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 17:10:47,288 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 17:10:47,289 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 17:10:47,289 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:47,289 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 17:10:47,290 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 17:10:47,290 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 17:10:47,290 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 17:10:47,290 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 17:10:47,290 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 17:10:47,290 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 17:10:47,291 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 17:10:47,291 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:47,291 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 17:10:47,291 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 17:10:47,292 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 17:10:47,292 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 17:10:47,292 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 17:10:47,292 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 17:10:47,292 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 17:10:47,292 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:10:47,293 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:10:47,294 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 17:10:47,294 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 17:10:47,294 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,294 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,296 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 17:10:47,296 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,296 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,296 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,296 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,296 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 17:10:47,297 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,297 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,297 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,297 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,297 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,297 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 17:10:47,297 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,297 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,297 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,297 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,297 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:47,298 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 17:10:47,298 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 17:10:47,299 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 17:10:47,300 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 17:10:47,300 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 17:10:47,300 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 17:10:47,302 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 17:10:47,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:10:47,314 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:10:47,315 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:10:47,321 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:10:47,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 17:10:47,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 17:10:47,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 17:10:47,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 17:10:47,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 17:10:47,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 17:10:47,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 17:10:47,324 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 17:10:47,325 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 17:10:47,325 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:10:47,325 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:10:47,325 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:10:47,325 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:10:47,325 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:10:47,325 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:10:47,325 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:10:47,326 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:10:47,326 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 17:10:47,327 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:10:47,327 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:10:47,327 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:10:47,327 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:10:47,327 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:10:47,328 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:10:47,328 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:10:47,328 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:10:47,328 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:10:47,328 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:10:47,329 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:10:47,329 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:10:47,329 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:10:47,329 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:10:47,329 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:10:47,329 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:10:47,329 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:10:47,330 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:10:47,330 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:10:47,330 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:10:47,330 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:10:47,330 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:10:47,330 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:10:47,330 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:10:47,331 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:10:47,331 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:10:47,331 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 17:10:47,331 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:10:47,331 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:10:47,332 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:10:47,332 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:10:47,332 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:10:47,332 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:10:47,332 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:10:47,332 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:10:47,333 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:10:47,333 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 17:10:47,333 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 17:10:47,334 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 17:10:47,334 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:10:47,335 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 17:10:47,335 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 17:10:47,335 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 17:10:47,335 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 17:10:47,336 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 17:10:47,336 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:10:47,336 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:10:47,336 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:10:47,336 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:10:47,336 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:10:47,336 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:10:47,336 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:10:47,336 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:10:47,337 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:10:47,338 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:10:47,339 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:10:47,339 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:10:47,339 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:10:47,339 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:10:47,339 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:10:47,339 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:10:47,339 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 17:10:47,339 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 17:10:47,339 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 17:10:47,339 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 17:10:47,340 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 17:10:47,340 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 17:10:47,340 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 17:10:47,340 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 17:10:47,340 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 17:10:47,340 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 17:10:47,340 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 17:10:47,340 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:10:47,340 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 17:10:47,340 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 17:10:47,340 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:10:47,341 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:10:47,342 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 17:10:47,342 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:10:47,342 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:10:47,342 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:10:47,342 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:10:47,342 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:10:47,342 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:10:47,343 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:10:47,343 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:10:47,343 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:10:47,343 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:10:47,343 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:10:47,343 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:10:47,343 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:10:47,343 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:10:47,343 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:10:47,343 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:10:47,344 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:10:47,344 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:10:47,344 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:10:47,344 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:10:47,344 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:10:47,344 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:10:47,344 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:10:47,344 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:10:47,344 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:10:47,345 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:10:47,345 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 17:10:47,345 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:10:47,345 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:10:47,345 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:10:47,345 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:10:47,345 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:10:47,346 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:10:47,346 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:10:47,346 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:10:47,346 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:10:47,346 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 17:10:47,346 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 17:10:47,346 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 17:10:47,346 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 17:10:47,346 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 17:10:47,346 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 17:10:47,347 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 17:10:47,347 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:10:47,347 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 17:10:47,347 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:10:47,347 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 17:10:47,347 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 17:10:47,347 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 17:10:47,347 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 17:10:47,348 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 17:10:47,348 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 17:10:47,348 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:10:47,349 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:10:47,350 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:10:47,351 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:10:47,352 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:10:47,353 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 17:10:47,354 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 17:10:47,355 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 17:10:47,355 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 17:10:47,355 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 17:10:47,355 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 17:10:47,355 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:10:47,356 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:10:47,357 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 17:10:47,358 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:10:47,359 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:10:47,360 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:10:47,361 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:10:47,361 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:10:47,361 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:10:47,361 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:10:47,361 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:10:47,361 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:10:47,361 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:10:47,361 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:10:47,361 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:10:47,361 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:10:47,361 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 17:10:47,361 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 17:10:47,362 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:10:47,363 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 17:10:47,363 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:10:47,363 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 17:10:47,363 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 17:10:47,363 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 17:10:47,363 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 17:10:47,363 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 17:10:47,363 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 17:10:47,363 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 17:10:47,363 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 17:10:47,363 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 17:10:47,364 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 17:10:47,364 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 17:10:47,588 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 17:10:47,588 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 17:10:47,589 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 17:10:47,589 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 17:10:47,589 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 17:10:47,589 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 17:10:47,589 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 17:10:47,589 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 17:10:47,589 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 17:10:47,589 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 17:10:47,603 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:10:47,618 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 17:10:47,630 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:47,632 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:47,635 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 17:10:47,645 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:47,653 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:47,656 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 17:10:47,671 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:47,676 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:47,692 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 17:10:47,692 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 17:10:47,730 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:10:47,730 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 17:10:47,730 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 17:10:47,751 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:10:47,951 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 17:10:47,962 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,962 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,962 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,963 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,963 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,964 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,964 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,964 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,964 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,965 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,965 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,966 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,966 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,966 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,966 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,966 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,967 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,967 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,967 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,967 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,967 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,967 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,967 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,967 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,967 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,967 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,967 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,967 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,968 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,968 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,968 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,968 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,968 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,969 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,971 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,971 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,971 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,971 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,971 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,972 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,973 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,974 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,975 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,975 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,975 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,975 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,975 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:10:47,975 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,975 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,975 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,976 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:10:47,984 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 17:10:47,985 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 17:10:47,985 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 17:10:47,985 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 17:10:47,997 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459869047994`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,000 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459869047994`
05 abr 2016 - 17:10:48,001 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459869047994`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 17:10:48,036 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 34 ms
05 abr 2016 - 17:10:48,045 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 17:10:48,045 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459869047994`
05 abr 2016 - 17:10:48,045 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459869047994`
05 abr 2016 - 17:10:48,058 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 13 ms
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:10:48,059 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:10:48,060 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 17:10:48,060 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 17:10:48,060 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 17:10:48,060 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 17:10:48,060 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 17:10:48,060 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 17:10:48,060 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 17:10:48,060 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 17:10:48,060 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 17:10:48,060 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:10:48,061 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:10:48,061 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:10:48,063 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 17:10:48,068 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 17:10:48,091 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 17:10:48,091 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 17:10:48,103 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 17:10:48,104 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 17:10:48,105 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 17:10:48,108 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 17:10:48,108 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 17:10:48,112 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 17:10:48,112 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 17:10:48,112 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 17:10:48,112 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:10:48,112 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 17:10:48,112 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 17:10:48,113 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 17:10:48,113 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 17:10:48,113 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 17:10:48,113 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 17:10:48,113 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 17:10:48,113 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 17:10:48,113 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 17:10:48,113 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 17:10:48,113 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Main.class
05 abr 2016 - 17:10:48,113 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 17:10:48,113 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 17:10:48,113 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 17:10:48,113 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 17:10:48,113 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 17:10:48,113 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 8 ficheros (metadata/class) ...
05 abr 2016 - 17:10:48,123 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 17:10:48,123 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 17:10:48,123 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Main, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 17:10:48,125 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 17:10:48,125 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:48,126 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 17:10:48,126 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 17:10:48,126 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 17:10:48,126 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 17:10:48,126 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 17:10:48,126 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 17:10:48,127 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 17:10:48,127 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 17:10:48,127 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:48,127 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 17:10:48,128 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 17:10:48,128 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 17:10:48,128 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 17:10:48,128 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 17:10:48,128 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 17:10:48,128 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 17:10:48,160 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:10:48,163 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 17:10:48,163 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:48,163 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 17:10:48,163 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 17:10:48,164 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 17:10:48,164 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 17:10:48,164 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 17:10:48,164 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 17:10:48,164 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 17:10:48,164 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 17:10:48,165 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:48,165 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 17:10:48,165 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 17:10:48,165 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 17:10:48,165 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 17:10:48,165 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 17:10:48,165 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 17:10:48,165 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 17:10:48,166 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:10:48,171 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:10:48,176 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:10:48,177 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 17:10:48,177 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 17:10:48,178 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:10:48,178 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:10:48,178 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 17:10:48,178 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 17:10:48,179 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 17:10:48,179 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 17:10:48,179 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 17:10:48,179 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,179 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,179 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,179 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,179 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,181 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 17:10:48,181 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 17:10:48,181 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:10:48,181 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 17:10:48,181 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 17:10:48,182 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 17:10:48,182 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 17:10:48,182 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 17:10:48,182 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,182 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,182 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 17:10:48,182 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:10:48,183 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:10:48,183 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 17:10:48,183 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 17:10:48,183 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 17:10:48,183 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 17:10:48,183 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 17:10:48,183 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,183 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,183 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,183 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,184 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 17:10:48,184 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 17:10:48,184 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:10:48,184 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 17:10:48,184 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 17:10:48,185 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 17:10:48,185 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 17:10:48,185 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 17:10:48,185 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,185 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,185 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,185 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,185 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:48,186 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 17:10:48,186 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 17:10:48,186 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 17:10:48,187 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 17:10:48,187 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 17:10:48,187 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 17:10:48,188 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 8 ficheros (metadata/class)
05 abr 2016 - 17:10:48,190 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 17:10:48,191 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:48,191 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 17:10:48,193 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 17:10:48,194 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 17:10:48,194 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:10:48,195 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 17:10:48,195 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:10:48,195 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:10:48,196 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 17:10:48,196 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 17:10:48,196 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 17:10:48,196 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 17:10:48,196 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:48,196 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 17:10:48,197 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 17:10:48,198 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 17:10:48,198 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:10:48,199 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 17:10:48,199 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:10:48,199 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:10:48,199 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 17:10:48,199 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 17:10:48,199 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 17:10:48,205 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 17:10:48,205 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,207 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:48,208 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:10:48,208 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,208 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:10:48,208 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,208 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,208 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 17:10:48,209 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,209 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,209 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 17:10:48,210 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,210 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,210 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,210 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,210 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,210 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,210 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,210 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,210 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,211 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:48,211 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 17:10:48,211 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 17:10:48,211 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,211 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:48,215 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 17:10:48,216 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:10:48,216 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,216 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,216 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 17:10:48,216 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:10:48,216 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 17:10:48,216 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:10:48,216 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,216 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,216 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,217 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:48,217 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,217 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 17:10:48,217 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 17:10:48,217 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 17:10:48,217 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,217 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:48,217 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,217 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,218 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 17:10:48,218 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:10:48,218 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 17:10:48,218 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:10:48,218 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,218 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,218 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,218 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:48,218 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 17:10:48,218 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 17:10:48,218 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:10:48,218 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,219 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,219 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,219 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:48,219 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 17:10:48,221 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,221 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:48,221 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,221 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:48,221 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,221 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,221 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 17:10:48,222 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,222 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,222 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,222 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:10:48,222 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,224 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,224 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:10:48,224 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,224 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,224 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,225 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:48,226 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,226 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,226 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:10:48,226 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:48,226 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:10:48,228 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 17:10:48,228 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c" y isolacion "serializable"
05 abr 2016 - 17:10:48,229 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:10:48,230 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 17:10:48,262 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 32 ms
05 abr 2016 - 17:10:48,262 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 17:10:48,263 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 17:10:48,264 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 17:10:48,265 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 17:10:48,266 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 17:10:48,267 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:10:48,268 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 17:10:48,269 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 17:10:48,270 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:10:48,275 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 17:10:48,279 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 17:10:48,281 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 17:10:48,282 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 17:10:48,283 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 17:10:48,284 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 17:10:48,286 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 17:10:48,287 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 17:10:48,288 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 17:10:48,289 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 17:10:48,290 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 17:10:48,291 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 17:10:48,292 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:10:48,294 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:10:48,296 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:10:48,297 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:10:48,299 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:10:48,300 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:10:48,301 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:10:48,303 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:10:48,304 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:10:48,306 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:10:48,307 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:10:48,308 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:10:48,309 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:10:48,310 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:10:48,311 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:10:48,311 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 17:10:48,312 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 17:10:48,312 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:10:48,312 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:10:48,313 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 17:10:48,313 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 17:10:48,313 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 17:10:48,314 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 17:10:51,029 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:10:51,046 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 17:10:51,059 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:51,061 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:51,064 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 17:10:51,073 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:51,081 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:51,085 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 17:10:51,095 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:51,101 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:10:51,112 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 17:10:51,121 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 17:10:51,154 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 17:10:51,154 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 17:10:51,175 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 17:10:51,176 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:51,176 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:51,176 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:51,176 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:51,176 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:51,176 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:51,176 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:51,177 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 17:10:51,177 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 17:10:51,177 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:10:51,177 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Character,java.lang.Integer
05 abr 2016 - 17:10:51,177 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 17:10:51,177 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 17:10:51,177 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 17:10:51,177 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 17:10:51,177 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 17:10:51,177 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 17:10:51,178 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.String,java.lang.Double
05 abr 2016 - 17:10:51,178 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.nio.ByteBuffer,java.lang.String,java.lang.Long
05 abr 2016 - 17:10:51,178 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 17:10:51,178 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 17:10:51,178 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 17:10:51,178 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 17:10:51,178 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 17:10:51,178 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 17:10:51,178 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.lang.String,java.sql.Timestamp,[Ljava.lang.Object;,java.util.Date
05 abr 2016 - 17:10:51,178 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 17:10:51,178 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
05 abr 2016 - 17:10:51,178 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 17:10:51,179 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 17:10:51,179 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 17:10:51,179 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 17:10:51,179 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 17:10:51,180 (main) DEBUG [DataNucleus.MetaData] - Listener found initialisation for persistable class main.Usuario
05 abr 2016 - 17:10:51,181 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /META-INF/package.jdo
05 abr 2016 - 17:10:51,181 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:51,182 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /package.jdo
05 abr 2016 - 17:10:51,182 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/package.jdo
05 abr 2016 - 17:10:51,183 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main.jdo
05 abr 2016 - 17:10:51,183 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/Usuario.jdo
05 abr 2016 - 17:10:51,183 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Usuario"
05 abr 2016 - 17:10:51,215 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:10:51,226 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 17:10:51,227 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 17:10:51,227 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:10:51,227 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 17:10:51,228 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 17:10:51,228 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 17:10:51,228 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 17:10:51,228 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 17:10:51,229 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,229 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,229 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,229 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,229 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,230 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /META-INF/package.jdo
05 abr 2016 - 17:10:51,231 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:51,231 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /package.jdo
05 abr 2016 - 17:10:51,231 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/package.jdo
05 abr 2016 - 17:10:51,232 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main.jdo
05 abr 2016 - 17:10:51,232 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/Reproduccion.jdo
05 abr 2016 - 17:10:51,232 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Reproduccion"
05 abr 2016 - 17:10:51,232 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:10:51,233 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 17:10:51,233 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:10:51,233 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:10:51,234 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 17:10:51,234 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 17:10:51,234 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 17:10:51,234 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 17:10:51,234 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 17:10:51,234 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,235 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,235 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,235 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,235 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,236 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /META-INF/package.jdo
05 abr 2016 - 17:10:51,236 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:51,236 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /package.jdo
05 abr 2016 - 17:10:51,237 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/package.jdo
05 abr 2016 - 17:10:51,237 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main.jdo
05 abr 2016 - 17:10:51,237 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/Cancion.jdo
05 abr 2016 - 17:10:51,237 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Cancion"
05 abr 2016 - 17:10:51,237 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:10:51,239 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 17:10:51,240 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:10:51,241 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:10:51,241 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 17:10:51,241 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 17:10:51,241 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 17:10:51,241 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 17:10:51,241 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 17:10:51,242 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,242 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,242 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,242 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,243 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 17:10:51,245 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 17:10:51,274 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:10:51,274 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 17:10:51,275 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 17:10:51,295 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:10:51,483 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 17:10:51,492 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,492 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,493 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,493 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,493 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,494 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,494 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,494 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,494 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,494 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,495 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,495 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,495 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,495 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,495 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,495 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,496 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,496 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,496 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,496 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,496 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,496 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,496 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,496 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,497 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,497 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,497 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,497 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,497 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,497 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,497 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,497 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,498 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,498 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,499 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,499 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,499 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,500 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,500 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,501 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,501 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,501 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,501 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,501 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,501 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,501 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,501 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,502 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,502 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,502 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,502 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,502 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,502 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,502 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,502 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,502 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,503 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,503 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,503 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,503 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,503 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,503 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,503 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,503 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,503 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,503 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,504 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,504 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:10:51,504 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,504 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,504 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,504 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:10:51,512 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 17:10:51,512 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 17:10:51,512 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 17:10:51,513 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 17:10:51,525 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459869051521`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,526 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459869051521`
05 abr 2016 - 17:10:51,528 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459869051521`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 17:10:51,564 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 36 ms
05 abr 2016 - 17:10:51,573 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 17:10:51,573 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459869051521`
05 abr 2016 - 17:10:51,574 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459869051521`
05 abr 2016 - 17:10:51,586 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 12 ms
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 17:10:51,587 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 17:10:51,588 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 17:10:51,588 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 17:10:51,588 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 17:10:51,588 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 17:10:51,588 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 17:10:51,588 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:10:51,588 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:10:51,589 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:10:51,590 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 17:10:51,591 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 17:10:51,592 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 17:10:51,595 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 17:10:51,595 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 17:10:51,595 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 17:10:51,595 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:10:51,595 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 17:10:51,595 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 17:10:51,595 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 17:10:51,595 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 17:10:51,595 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 17:10:51,595 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 17:10:51,595 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 17:10:51,606 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@78dd667e"
05 abr 2016 - 17:10:51,607 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 del tipo "soft" inicializada
05 abr 2016 - 17:10:51,609 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:10:51,609 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 17:10:51,610 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@7d3a22a9"
05 abr 2016 - 17:10:51,620 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 17:10:51,620 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 17:10:51,621 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 17:10:51,622 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 17:10:51,626 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /META-INF/package.jdo
05 abr 2016 - 17:10:51,627 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:51,627 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /package.jdo
05 abr 2016 - 17:10:51,627 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/package.jdo
05 abr 2016 - 17:10:51,628 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main.jdo
05 abr 2016 - 17:10:51,628 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/Artista.jdo
05 abr 2016 - 17:10:51,628 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Artista"
05 abr 2016 - 17:10:51,628 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:10:51,629 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 17:10:51,629 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 17:10:51,630 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:10:51,630 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 17:10:51,630 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 17:10:51,630 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 17:10:51,631 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 17:10:51,631 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 17:10:51,631 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,631 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:10:51,631 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 17:10:51,632 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 17:10:51,632 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:51,632 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 17:10:51,637 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 17:10:51,638 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 17:10:51,638 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:10:51,641 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 17:10:51,641 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:10:51,641 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:10:51,641 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 17:10:51,642 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 17:10:51,642 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 17:10:51,642 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 17:10:51,642 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 17:10:51,643 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 17:10:51,645 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 17:10:51,645 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 17:10:51,645 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:10:51,647 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 17:10:51,648 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:10:51,648 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:10:51,649 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 17:10:51,649 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 17:10:51,649 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 17:10:51,654 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 17:10:51,655 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,655 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,656 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:10:51,656 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,656 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,656 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:10:51,657 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,657 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 17:10:51,657 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,659 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:51,659 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 17:10:51,659 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,660 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,660 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,660 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,660 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,660 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,660 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,660 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,660 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,660 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:51,660 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 17:10:51,660 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 17:10:51,663 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:10:51,663 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,663 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:51,663 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 17:10:51,663 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 17:10:51,663 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,663 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:51,663 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,663 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,666 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 17:10:51,666 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:10:51,666 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 17:10:51,666 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:10:51,666 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,666 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,666 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,666 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:51,666 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 17:10:51,666 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 17:10:51,666 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,667 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:51,667 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 17:10:51,667 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:10:51,667 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,667 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,667 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 17:10:51,667 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:10:51,667 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 17:10:51,667 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:10:51,667 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,667 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,667 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,668 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:51,668 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,668 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 17:10:51,668 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 17:10:51,670 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,670 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:51,670 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,670 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,670 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,670 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,670 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:10:51,670 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,670 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,671 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,671 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:10:51,671 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,671 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,671 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:10:51,671 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,671 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:51,671 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,671 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:10:51,673 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,674 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,674 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 17:10:51,674 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,674 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,674 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,674 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:51,674 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,674 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,675 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 17:10:51,675 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,675 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:51,675 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,675 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:10:51,675 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,675 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:10:51,675 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 17:10:51,675 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,675 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 17:10:51,678 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 17:10:51,678 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8" y isolacion "serializable"
05 abr 2016 - 17:10:51,679 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:10:51,680 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 17:10:51,716 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 37 ms
05 abr 2016 - 17:10:51,716 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 17:10:51,717 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 17:10:51,718 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 17:10:51,719 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 17:10:51,720 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:10:51,721 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:10:51,722 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 17:10:51,723 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 17:10:51,724 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 17:10:51,728 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 17:10:51,732 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 17:10:51,734 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 17:10:51,736 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 17:10:51,736 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 17:10:51,737 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 17:10:51,738 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 17:10:51,740 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 17:10:51,741 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 17:10:51,742 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 17:10:51,743 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 17:10:51,744 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 17:10:51,746 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:10:51,748 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:10:51,749 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:10:51,751 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:10:51,753 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:10:51,754 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:10:51,755 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:10:51,756 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:10:51,758 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:10:51,759 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:10:51,760 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:10:51,762 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:10:51,763 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:10:51,764 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:10:51,765 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:10:51,765 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 17:10:51,766 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 17:10:51,766 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:10:51,766 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:10:51,771 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@7d3a22a9" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 17:10:51,781 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 17:10:51,781 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:10:51,782 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 17:10:51,782 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:10:51,791 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 17:10:51,792 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943781219>,<false>,<'AxiElorza'>,<'1234'>,<'Asier'>)
05 abr 2016 - 17:10:51,794 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8"
05 abr 2016 - 17:10:51,794 (main) WARN  [DataNucleus.Datastore.Persist] - Persistencia del objeto "main.Usuario@7d3a22a9" con SQL "INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (?,?,?,?,?,?)" ha tirado un error : Duplicate entry 'Asier' for key 'PRIMARY'
05 abr 2016 - 17:10:51,795 (main) DEBUG [DataNucleus.Transaction] - Haciendo rollback de la transacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 17:10:51,796 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_NEW"->""
05 abr 2016 - 17:10:51,796 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 17:10:51,796 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@7d3a22a9 de StateManager[pc=main.Usuario@7d3a22a9, lifecycle=P_NEW]
05 abr 2016 - 17:10:51,796 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 17:10:51,797 (main) DEBUG [DataNucleus.Transaction] - Rolling back [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc]]
05 abr 2016 - 17:10:51,797 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a rollback para la transacción "Xid=   "
05 abr 2016 - 17:10:51,798 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:10:51,799 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:10:51,799 (main) DEBUG [DataNucleus.Transaction] - Transacción rolled back en 4 ms
05 abr 2016 - 17:10:51,799 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 17:10:51,799 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 17:10:51,800 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@1bd4fdd"
05 abr 2016 - 17:10:51,800 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:10:51,800 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 17:10:51,802 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.query.cache.SoftQueryCompilationCache" inicializada
05 abr 2016 - 17:10:51,802 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryDatastoreCompilationCache" inicializada
05 abr 2016 - 17:10:51,803 (main) DEBUG [DataNucleus.Cache] - Cache de Query del tipo "org.datanucleus.store.query.cache.SoftQueryResultsCache" inicializada
05 abr 2016 - 17:10:51,812 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario"
05 abr 2016 - 17:10:51,818 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar = 6 ms
05 abr 2016 - 17:10:51,818 (main) DEBUG [DataNucleus.Query] - QueryCompilation:
  [symbols: this type=main.Usuario]
05 abr 2016 - 17:10:51,819 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Compilación de "SELECT FROM main.Usuario" para base de datos
05 abr 2016 - 17:10:51,835 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de compilar para base de datos = 15
05 abr 2016 - 17:10:51,835 (main) DEBUG [DataNucleus.Query] - SELECT FROM main.Usuario Query compilado para base de datos a "SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`"
05 abr 2016 - 17:10:51,836 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 17:10:51,836 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@158a8276, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:10:51,836 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 17:10:51,836 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:10:51,836 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Ejecucion de "SELECT FROM main.Usuario" ...
05 abr 2016 - 17:10:51,837 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.datasource.dbcp.DelegatingPreparedStatement@1e66f1f5"
05 abr 2016 - 17:10:51,837 (main) DEBUG [DataNucleus.Datastore.Native] - SELECT 'main.Usuario' AS NUCLEUS_TYPE,`A0`.`CONTRASENYA_PAYPAL`,`A0`.`IMPORTEMENSUAL`,`A0`.`NOMBREUSU`,`A0`.`NUMTARJCRED`,`A0`.`USUARIO_PAYPAL`,`A0`.`VENTAJOSO` FROM `USUARIO` `A0`
05 abr 2016 - 17:10:51,838 (main) DEBUG [DataNucleus.Datastore.Retrieve] - Tiempo de cumplir = 1 ms
05 abr 2016 - 17:10:51,840 (main) DEBUG [DataNucleus.Query] - Query de JDOQL : Tiempo de ejecutar = 4 ms
05 abr 2016 - 17:10:51,842 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 1 [tamaño = 0]
05 abr 2016 - 17:10:51,842 (main) DEBUG [DataNucleus.Cache] - Objeto con id "main.Usuario:Asier" no esta en la Cache de nivel 2
05 abr 2016 - 17:10:51,843 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1e178745" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[NNNNNYNNN]")
05 abr 2016 - 17:10:51,844 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@1e178745" (id="Asier") añadido a la Cache de nivel 2 (campos="[0, 2, 5, 6, 7, 8]", version="")
05 abr 2016 - 17:10:51,845 (main) DEBUG [DataNucleus.Transaction] - Haciendo commit de la transaacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 17:10:51,845 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() empezado con flush ordenado - 0 objetos registrados
05 abr 2016 - 17:10:51,846 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext.internalFlush() terminado
05 abr 2016 - 17:10:51,846 (main) DEBUG [DataNucleus.Persistence] - Haciendo la comprobación de "persistence-by-reachability" (commit) ...
05 abr 2016 - 17:10:51,846 (main) DEBUG [DataNucleus.Persistence] - Ha terminado la comprobación de "persistence-by-reachability" (commit).
05 abr 2016 - 17:10:51,846 (main) DEBUG [DataNucleus.Transaction] - Committing [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@158a8276]]
05 abr 2016 - 17:10:51,846 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a cometer para la transacción "Xid=   " con onePhase="true"
05 abr 2016 - 17:10:51,846 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:10:51,847 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@13b6aecc [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@3c3d9b6b, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:10:51,848 (main) DEBUG [DataNucleus.Transaction] - Transacción committed en 3 ms
05 abr 2016 - 17:10:51,848 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@1e178745 de StateManager[pc=main.Usuario@1e178745, lifecycle=HOLLOW]
05 abr 2016 - 17:10:51,848 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 17:10:51,848 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 17:10:51,848 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
05 abr 2016 - 17:25:25,368 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:25:25,387 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 17:25:25,399 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:25,401 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:25,404 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 17:25:25,416 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:25,425 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:25,428 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 17:25:25,441 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:25,447 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:25,469 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 17:25:25,497 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 17:25:25,498 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 17:25:25,514 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 17:25:25,514 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:25,514 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:25,514 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:25,514 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:25,514 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:25,515 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:25,515 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:25,515 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:25,515 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 17:25:25,515 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:25:25,515 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 17:25:25,515 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 17:25:25,515 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 17:25:25,515 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 17:25:25,515 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 17:25:25,515 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 17:25:25,516 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 17:25:25,516 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:25:25,516 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:25:25,516 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 17:25:25,516 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 17:25:25,516 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:25:25,516 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:25:25,516 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:25:25,516 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 17:25:25,516 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 17:25:25,516 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 17:25:25,517 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 17:25:25,517 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 17:25:25,517 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 17:25:25,517 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 17:25:25,519 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 17:25:25,519 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 17:25:25,519 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 17:25:25,519 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 17:25:25,519 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 17:25:25,519 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 17:25:25,519 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 17:25:25,520 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 17:25:25,520 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 17:25:25,520 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 17:25:25,520 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 17:25:25,520 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 17:25:25,552 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Main, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 17:25:25,595 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:25:25,601 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:25:25,607 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 17:25:25,608 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:25,608 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 17:25:25,608 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 17:25:25,609 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 17:25:25,609 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 17:25:25,609 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 17:25:25,609 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 17:25:25,609 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 17:25:25,609 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 17:25:25,610 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:25,610 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 17:25:25,610 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 17:25:25,611 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 17:25:25,611 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 17:25:25,611 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 17:25:25,611 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 17:25:25,611 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 17:25:25,612 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 17:25:25,612 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:25,612 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 17:25:25,612 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 17:25:25,612 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 17:25:25,613 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 17:25:25,613 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 17:25:25,613 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 17:25:25,613 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 17:25:25,613 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 17:25:25,614 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:25,614 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 17:25:25,614 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 17:25:25,614 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 17:25:25,614 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 17:25:25,614 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 17:25:25,614 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 17:25:25,614 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 17:25:25,615 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:25:25,615 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:25:25,616 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 17:25:25,617 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 17:25:25,617 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,617 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,619 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 17:25:25,619 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,619 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,619 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,619 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,619 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 17:25:25,619 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,620 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,620 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,620 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,620 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,620 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 17:25:25,620 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,620 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,620 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,620 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,620 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:25,621 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 17:25:25,621 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 17:25:25,622 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 17:25:25,623 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 17:25:25,623 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 17:25:25,623 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 17:25:25,625 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 17:25:25,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:25:25,637 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:25:25,638 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:25:25,639 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:25:25,640 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:25:25,640 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:25:25,640 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:25:25,645 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:25:25,648 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 17:25:25,648 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 17:25:25,648 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 17:25:25,648 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 17:25:25,649 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 17:25:25,649 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 17:25:25,649 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 17:25:25,649 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 17:25:25,649 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 17:25:25,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:25:25,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:25:25,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:25:25,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:25:25,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:25:25,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:25:25,649 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:25:25,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:25:25,650 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 17:25:25,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:25:25,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:25:25,651 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:25:25,652 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:25:25,652 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:25:25,652 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:25:25,652 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:25:25,652 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:25:25,652 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:25:25,653 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:25:25,653 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:25:25,653 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:25:25,653 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:25:25,653 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:25:25,653 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:25:25,653 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:25:25,654 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:25:25,654 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:25:25,654 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:25:25,654 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:25:25,654 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:25:25,654 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:25:25,654 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:25:25,654 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:25:25,655 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:25:25,655 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:25:25,655 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 17:25:25,655 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:25:25,655 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:25:25,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:25:25,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:25:25,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:25:25,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:25:25,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:25:25,656 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:25:25,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:25:25,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 17:25:25,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 17:25:25,657 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 17:25:25,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:25:25,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 17:25:25,658 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 17:25:25,659 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 17:25:25,659 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 17:25:25,659 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 17:25:25,659 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:25:25,660 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:25:25,661 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:25:25,662 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:25:25,663 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:25:25,664 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:25:25,664 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:25:25,664 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 17:25:25,664 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:25:25,664 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:25:25,664 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:25:25,664 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:25:25,664 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:25:25,664 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:25:25,664 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:25:25,664 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:25:25,665 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:25:25,666 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:25:25,666 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:25:25,666 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:25:25,666 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:25:25,666 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 17:25:25,666 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:25:25,666 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:25:25,666 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:25:25,666 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:25:25,666 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:25:25,666 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:25:25,667 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:25:25,667 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:25:25,667 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:25:25,667 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 17:25:25,667 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 17:25:25,667 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 17:25:25,667 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 17:25:25,667 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 17:25:25,667 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 17:25:25,667 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 17:25:25,667 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:25:25,667 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 17:25:25,668 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:25:25,668 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 17:25:25,668 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 17:25:25,668 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 17:25:25,668 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 17:25:25,668 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:25:25,669 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:25:25,670 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:25:25,671 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:25:25,672 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:25:25,673 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:25:25,674 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 17:25:25,675 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 17:25:25,675 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 17:25:25,675 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 17:25:25,675 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 17:25:25,675 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 17:25:25,675 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 17:25:25,675 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 17:25:25,675 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 17:25:25,675 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 17:25:25,675 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 17:25:25,676 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 17:25:25,676 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 17:25:25,677 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 17:25:25,678 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 17:25:25,679 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 17:25:25,680 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 17:25:25,681 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:25:25,682 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 17:25:25,683 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 17:25:25,684 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 17:25:25,684 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 17:25:25,684 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 17:25:25,684 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:25:25,684 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 17:25:25,684 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 17:25:25,684 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 17:25:25,684 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:25:25,684 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 17:25:25,684 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 17:25:25,684 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 17:25:25,685 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 17:25:25,685 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 17:25:25,685 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 17:25:25,685 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 17:25:25,685 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 17:25:25,685 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 17:25:25,685 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 17:25:25,685 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 17:25:25,686 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 17:25:25,686 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 17:25:25,915 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 17:25:25,916 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 17:25:25,917 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 17:25:25,917 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 17:25:25,917 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 17:25:25,917 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 17:25:25,917 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 17:25:25,917 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 17:25:25,917 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 17:25:25,917 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 17:25:25,931 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:25:25,948 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 17:25:25,959 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:25,961 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:25,964 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 17:25:25,973 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:25,982 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:25,985 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 17:25:25,996 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:26,001 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:26,015 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 17:25:26,016 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 17:25:26,055 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:25:26,055 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 17:25:26,056 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 17:25:26,080 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:25:26,275 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 17:25:26,286 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,287 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,287 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,287 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,288 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,288 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,288 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,288 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,289 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,289 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,290 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,290 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,290 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,291 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,291 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,291 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,291 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,291 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,291 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,291 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,291 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,292 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,292 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,292 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,292 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,292 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,292 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,292 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,292 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,292 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,292 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,293 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,293 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,294 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,295 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,295 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,295 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,295 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,295 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,296 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,297 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,297 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,297 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,297 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,297 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,298 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,298 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,298 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,298 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,298 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,299 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,299 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,299 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,299 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,299 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,299 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,299 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,299 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,299 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,299 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,300 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,300 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,300 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,300 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,300 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,301 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,301 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,301 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:25:26,301 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,301 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,301 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,301 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:25:26,310 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 17:25:26,310 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 17:25:26,310 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 17:25:26,311 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 17:25:26,322 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459869926319`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,324 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459869926319`
05 abr 2016 - 17:25:26,326 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459869926319`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 17:25:26,362 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 36 ms
05 abr 2016 - 17:25:26,371 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 17:25:26,371 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459869926319`
05 abr 2016 - 17:25:26,371 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459869926319`
05 abr 2016 - 17:25:26,384 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 13 ms
05 abr 2016 - 17:25:26,384 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 17:25:26,384 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 17:25:26,384 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 17:25:26,384 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 17:25:26,384 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 17:25:26,384 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 17:25:26,385 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 17:25:26,386 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:25:26,386 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:25:26,386 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:25:26,387 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 17:25:26,394 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 17:25:26,417 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 17:25:26,417 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 17:25:26,430 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 17:25:26,430 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:26,430 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:26,430 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:26,430 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:26,430 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:26,430 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:26,430 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:26,430 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:26,430 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 17:25:26,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 17:25:26,432 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 17:25:26,432 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 17:25:26,435 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 17:25:26,435 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 17:25:26,440 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 17:25:26,440 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 17:25:26,440 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 17:25:26,440 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:25:26,440 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 17:25:26,440 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 17:25:26,440 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 17:25:26,440 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 17:25:26,440 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 17:25:26,440 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 17:25:26,440 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 17:25:26,440 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 17:25:26,440 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 17:25:26,440 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 17:25:26,440 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Main.class
05 abr 2016 - 17:25:26,440 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 17:25:26,440 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 17:25:26,440 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 17:25:26,440 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 17:25:26,440 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 17:25:26,440 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 8 ficheros (metadata/class) ...
05 abr 2016 - 17:25:26,458 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 17:25:26,459 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 17:25:26,459 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Main, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 17:25:26,461 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 17:25:26,461 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:26,462 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 17:25:26,462 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 17:25:26,462 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 17:25:26,462 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 17:25:26,462 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 17:25:26,462 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 17:25:26,463 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 17:25:26,463 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 17:25:26,463 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:26,463 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 17:25:26,464 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 17:25:26,464 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 17:25:26,464 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 17:25:26,464 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 17:25:26,464 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 17:25:26,464 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 17:25:26,497 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:25:26,500 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 17:25:26,500 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:26,500 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 17:25:26,500 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 17:25:26,500 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 17:25:26,500 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 17:25:26,500 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 17:25:26,501 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 17:25:26,501 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 17:25:26,501 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /META-INF/package.jdo
05 abr 2016 - 17:25:26,501 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:26,502 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /package.jdo
05 abr 2016 - 17:25:26,502 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/package.jdo
05 abr 2016 - 17:25:26,504 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main.jdo
05 abr 2016 - 17:25:26,504 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Main" en /main/Main.jdo
05 abr 2016 - 17:25:26,504 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Main"
05 abr 2016 - 17:25:26,504 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Main" no tener Meta-Data
05 abr 2016 - 17:25:26,504 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Main" no tiene MetaData o annotaciones.
05 abr 2016 - 17:25:26,505 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:25:26,510 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:25:26,515 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:25:26,516 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 17:25:26,517 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 17:25:26,517 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:25:26,517 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:25:26,517 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 17:25:26,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 17:25:26,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 17:25:26,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 17:25:26,518 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 17:25:26,518 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,518 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,518 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,518 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,518 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,520 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 17:25:26,520 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 17:25:26,520 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:25:26,520 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 17:25:26,520 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 17:25:26,521 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 17:25:26,521 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 17:25:26,521 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 17:25:26,521 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,521 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,521 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 17:25:26,521 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:25:26,522 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:25:26,522 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 17:25:26,522 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 17:25:26,522 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 17:25:26,522 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 17:25:26,522 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 17:25:26,523 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,523 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,523 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,523 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,523 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 17:25:26,523 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 17:25:26,524 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:25:26,524 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 17:25:26,524 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 17:25:26,524 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 17:25:26,524 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 17:25:26,524 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 17:25:26,524 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,524 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,524 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,524 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,524 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:26,525 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 17:25:26,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 17:25:26,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 17:25:26,527 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 17:25:26,527 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 17:25:26,527 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 17:25:26,527 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 8 ficheros (metadata/class)
05 abr 2016 - 17:25:26,530 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 17:25:26,530 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:26,530 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 17:25:26,533 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 17:25:26,533 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 17:25:26,534 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:25:26,535 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 17:25:26,535 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:25:26,535 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:25:26,535 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 17:25:26,536 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 17:25:26,536 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 17:25:26,536 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 17:25:26,536 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:26,536 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 17:25:26,537 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 17:25:26,538 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 17:25:26,538 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:25:26,539 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 17:25:26,539 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:25:26,539 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:25:26,539 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 17:25:26,540 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 17:25:26,540 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 17:25:26,545 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 17:25:26,546 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,547 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:26,548 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:25:26,548 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,549 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:25:26,549 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,549 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,549 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 17:25:26,549 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,549 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,550 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 17:25:26,550 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,551 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:26,555 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 17:25:26,555 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:25:26,555 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,556 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,556 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 17:25:26,556 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:25:26,556 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 17:25:26,556 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:25:26,556 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,556 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,556 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,556 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:26,556 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,557 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 17:25:26,557 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 17:25:26,557 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 17:25:26,557 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,557 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:26,557 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,557 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,557 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 17:25:26,557 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:25:26,557 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 17:25:26,557 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:25:26,557 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,558 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,558 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,558 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:26,558 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 17:25:26,558 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 17:25:26,558 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:25:26,558 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,558 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,558 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,558 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:26,559 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 17:25:26,560 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,560 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:26,561 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,561 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:26,561 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,561 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,561 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 17:25:26,561 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,561 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,561 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,561 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:25:26,561 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,563 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,563 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:25:26,564 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,564 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,564 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,564 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:26,564 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,564 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,564 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 17:25:26,564 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,564 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:26,565 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,565 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:25:26,565 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,565 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,565 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 17:25:26,565 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,565 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:26,565 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,565 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,565 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:25:26,565 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:26,565 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:25:26,568 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 17:25:26,568 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c" y isolacion "serializable"
05 abr 2016 - 17:25:26,569 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:25:26,570 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 17:25:26,604 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 34 ms
05 abr 2016 - 17:25:26,604 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 17:25:26,605 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 17:25:26,606 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 17:25:26,607 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 17:25:26,608 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 17:25:26,609 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:25:26,610 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 17:25:26,611 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 17:25:26,612 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:25:26,616 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 17:25:26,621 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 17:25:26,622 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 17:25:26,624 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 17:25:26,625 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 17:25:26,626 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 17:25:26,627 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 17:25:26,628 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 17:25:26,630 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 17:25:26,631 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 17:25:26,632 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 17:25:26,634 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 17:25:26,635 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:25:26,637 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:25:26,638 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:25:26,639 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:25:26,641 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:25:26,642 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:25:26,643 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:25:26,645 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:25:26,646 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:25:26,648 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:25:26,649 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:25:26,650 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:25:26,651 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:25:26,652 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:25:26,653 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:25:26,654 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 17:25:26,654 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c"
05 abr 2016 - 17:25:26,654 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:25:26,655 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1d082e88 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@60704c, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:25:26,656 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 17:25:26,656 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 17:25:26,656 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 17:25:26,657 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 17:25:30,499 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:25:30,517 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 17:25:30,529 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:30,532 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:30,534 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 17:25:30,545 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:30,553 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:30,557 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 17:25:30,568 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:30,574 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 17:25:30,585 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 17:25:30,594 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 17:25:30,622 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 17:25:30,622 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Character,java.lang.Integer
05 abr 2016 - 17:25:30,639 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.String,java.lang.Double
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.nio.ByteBuffer,java.lang.String,java.lang.Long
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.String,java.lang.Long,java.util.Date
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.lang.String,java.sql.Timestamp,[Ljava.lang.Object;,java.util.Date
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 17:25:30,640 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
05 abr 2016 - 17:25:30,641 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 17:25:30,641 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 17:25:30,641 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 17:25:30,641 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 17:25:30,641 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 17:25:30,642 (main) DEBUG [DataNucleus.MetaData] - Listener found initialisation for persistable class main.Usuario
05 abr 2016 - 17:25:30,642 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /META-INF/package.jdo
05 abr 2016 - 17:25:30,643 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:30,643 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /package.jdo
05 abr 2016 - 17:25:30,643 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/package.jdo
05 abr 2016 - 17:25:30,644 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main.jdo
05 abr 2016 - 17:25:30,644 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Usuario" en /main/Usuario.jdo
05 abr 2016 - 17:25:30,644 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Usuario"
05 abr 2016 - 17:25:30,675 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:25:30,686 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 17:25:30,686 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 17:25:30,687 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:25:30,687 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 17:25:30,687 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 17:25:30,687 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 17:25:30,688 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 17:25:30,688 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 17:25:30,688 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,688 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,688 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,688 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,688 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,690 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /META-INF/package.jdo
05 abr 2016 - 17:25:30,690 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:30,691 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /package.jdo
05 abr 2016 - 17:25:30,691 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/package.jdo
05 abr 2016 - 17:25:30,691 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main.jdo
05 abr 2016 - 17:25:30,691 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Reproduccion" en /main/Reproduccion.jdo
05 abr 2016 - 17:25:30,691 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Reproduccion"
05 abr 2016 - 17:25:30,692 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:25:30,692 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 17:25:30,693 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:25:30,693 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:25:30,693 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 17:25:30,693 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 17:25:30,694 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 17:25:30,694 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 17:25:30,694 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 17:25:30,694 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,694 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,694 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,694 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,694 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,695 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /META-INF/package.jdo
05 abr 2016 - 17:25:30,695 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:30,696 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /package.jdo
05 abr 2016 - 17:25:30,696 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/package.jdo
05 abr 2016 - 17:25:30,696 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main.jdo
05 abr 2016 - 17:25:30,696 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Cancion" en /main/Cancion.jdo
05 abr 2016 - 17:25:30,696 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Cancion"
05 abr 2016 - 17:25:30,697 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:25:30,699 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 17:25:30,699 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 17:25:30,699 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:25:30,700 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 17:25:30,700 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 17:25:30,700 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 17:25:30,700 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 17:25:30,700 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 17:25:30,700 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,700 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,700 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,700 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:30,701 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 17:25:30,703 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 17:25:30,730 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:25:30,730 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 17:25:30,730 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 17:25:30,748 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 17:25:30,928 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 17:25:30,937 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,937 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,938 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,938 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,938 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,939 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,939 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,939 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,939 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,939 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,940 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,940 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,940 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,941 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,941 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,941 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,941 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,941 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,941 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,941 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,941 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,941 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,942 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,943 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,943 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,944 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,945 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,945 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,945 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,945 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,945 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,945 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,946 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,947 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 17:25:30,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,948 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 17:25:30,956 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 17:25:30,956 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 17:25:30,956 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 17:25:30,956 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 17:25:30,967 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459869930964`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 17:25:30,968 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459869930964`
05 abr 2016 - 17:25:30,970 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459869930964`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 17:25:31,002 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 32 ms
05 abr 2016 - 17:25:31,010 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 17:25:31,010 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459869930964`
05 abr 2016 - 17:25:31,010 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459869930964`
05 abr 2016 - 17:25:31,021 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 11 ms
05 abr 2016 - 17:25:31,022 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 17:25:31,022 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 17:25:31,022 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 17:25:31,022 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 17:25:31,022 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 17:25:31,022 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 17:25:31,022 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 17:25:31,022 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:25:31,022 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 17:25:31,023 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:25:31,024 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@32464a14 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@2aece37d, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:25:31,025 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 17:25:31,026 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 17:25:31,026 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 17:25:31,029 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 17:25:31,030 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 17:25:31,030 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 17:25:31,030 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 17:25:31,030 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 17:25:31,030 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 17:25:31,030 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 17:25:31,030 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 17:25:31,030 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 17:25:31,030 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 17:25:31,030 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 17:25:31,041 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se abrió para la base de datos "org.datanucleus.store.rdbms.RDBMSStoreManager@c540f5a" con transaccion="org.datanucleus.TransactionImpl@78dd667e"
05 abr 2016 - 17:25:31,042 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 del tipo "soft" inicializada
05 abr 2016 - 17:25:31,044 (main) DEBUG [DataNucleus.Transaction] - Transaction created [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:25:31,044 (main) DEBUG [DataNucleus.Transaction] - Transacción empezada para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea (optimistic=false)
05 abr 2016 - 17:25:31,045 (main) DEBUG [DataNucleus.Persistence] - Haciendo el objeto persistente : "main.Usuario@7d3a22a9"
05 abr 2016 - 17:25:31,055 (main) DEBUG [DataNucleus.Cache] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") añadido a la Cache de nivel 1 (loadedFlags="[YYYYYYYYY]")
05 abr 2016 - 17:25:31,055 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="Asier") ha sido puesto en la cache transaccional
05 abr 2016 - 17:25:31,057 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 17:25:31,057 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 17:25:31,060 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /META-INF/package.jdo
05 abr 2016 - 17:25:31,061 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:31,061 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /package.jdo
05 abr 2016 - 17:25:31,062 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/package.jdo
05 abr 2016 - 17:25:31,062 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main.jdo
05 abr 2016 - 17:25:31,062 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Artista" en /main/Artista.jdo
05 abr 2016 - 17:25:31,062 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Artista"
05 abr 2016 - 17:25:31,063 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 17:25:31,063 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 17:25:31,064 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 17:25:31,064 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 17:25:31,064 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 17:25:31,065 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 17:25:31,065 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 17:25:31,065 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 17:25:31,065 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 17:25:31,065 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:31,065 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 17:25:31,066 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 17:25:31,066 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 17:25:31,066 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:31,067 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 17:25:31,072 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 17:25:31,072 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 17:25:31,072 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:25:31,075 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 17:25:31,075 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:25:31,076 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:25:31,076 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 17:25:31,076 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 17:25:31,076 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 17:25:31,076 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 17:25:31,077 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 17:25:31,077 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 17:25:31,079 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 17:25:31,079 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 17:25:31,080 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 17:25:31,082 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 17:25:31,083 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 17:25:31,083 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 17:25:31,083 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 17:25:31,083 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 17:25:31,083 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 17:25:31,089 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 17:25:31,089 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,090 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,091 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:25:31,091 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,091 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,091 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 17:25:31,091 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,091 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 17:25:31,092 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,093 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:31,093 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 17:25:31,093 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,094 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,094 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,094 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,094 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,094 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,094 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,094 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,094 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,094 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:31,095 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 17:25:31,095 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 17:25:31,096 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:25:31,097 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,097 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:31,097 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 17:25:31,097 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 17:25:31,097 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,097 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:31,097 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,097 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,099 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 17:25:31,100 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:25:31,101 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,101 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,101 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 17:25:31,101 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:25:31,101 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 17:25:31,101 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 17:25:31,101 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,101 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,101 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,101 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:31,102 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,102 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 17:25:31,102 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 17:25:31,103 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,104 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:31,104 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,104 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,104 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,104 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,104 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:25:31,104 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,104 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,105 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,105 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:25:31,105 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,105 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,105 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 17:25:31,105 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,105 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:31,105 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,105 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 17:25:31,107 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,107 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,107 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 17:25:31,107 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,108 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,108 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,108 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:31,108 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,108 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,108 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 17:25:31,108 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,108 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:31,108 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,108 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 17:25:31,108 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,109 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 17:25:31,109 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 17:25:31,109 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,109 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 17:25:31,111 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 17:25:31,111 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8" y isolacion "serializable"
05 abr 2016 - 17:25:31,112 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:25:31,113 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 17:25:31,145 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 32 ms
05 abr 2016 - 17:25:31,145 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 17:25:31,146 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 17:25:31,147 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 17:25:31,147 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 17:25:31,148 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:25:31,149 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 17:25:31,150 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 17:25:31,151 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 17:25:31,151 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 17:25:31,155 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 17:25:31,160 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 17:25:31,162 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 17:25:31,163 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 17:25:31,164 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 17:25:31,165 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 17:25:31,166 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 17:25:31,167 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 17:25:31,169 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 17:25:31,170 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 17:25:31,171 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 17:25:31,172 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 17:25:31,174 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:25:31,175 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:25:31,177 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 17:25:31,178 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:25:31,180 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:25:31,181 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 17:25:31,182 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:25:31,183 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:25:31,184 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 17:25:31,186 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:25:31,187 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:25:31,188 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 17:25:31,190 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:25:31,191 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:25:31,192 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 17:25:31,192 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 17:25:31,193 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8"
05 abr 2016 - 17:25:31,193 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 17:25:31,193 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@3c130745 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@cd3fee8, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:25:31,198 (main) DEBUG [DataNucleus.Persistence] - Objeto "main.Usuario@7d3a22a9" va a ser añadido a la tabla "`USUARIO`"
05 abr 2016 - 17:25:31,208 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=null, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" abierto con isolación "read-committed" y auto-commit=false
05 abr 2016 - 17:25:31,208 (main) DEBUG [DataNucleus.Transaction] - Running enlist operation on resource: org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc, error code TMNOFLAGS and transaction: [DataNucleus Transaction, ID=Xid=   , enlisted resources=[]]
05 abr 2016 - 17:25:31,209 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" empezando para la transacción "Xid=   " con flags "0"
05 abr 2016 - 17:25:31,209 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion agregado al pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:25:31,218 (main) DEBUG [DataNucleus.Datastore] - Utilizando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8" para la conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065"
05 abr 2016 - 17:25:31,220 (main) DEBUG [DataNucleus.Datastore.Native] - INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (<0>,<943781219>,<false>,<'AxiElorza'>,<'1234'>,<'Asier'>)
05 abr 2016 - 17:25:31,221 (main) DEBUG [DataNucleus.Datastore] - Cerrando PreparedStatement "org.datanucleus.store.rdbms.ParamLoggingPreparedStatement@7f3b84b8"
05 abr 2016 - 17:25:31,222 (main) WARN  [DataNucleus.Datastore.Persist] - Persistencia del objeto "main.Usuario@7d3a22a9" con SQL "INSERT INTO `USUARIO` (`IMPORTEMENSUAL`,`NUMTARJCRED`,`VENTAJOSO`,`USUARIO_PAYPAL`,`CONTRASENYA_PAYPAL`,`NOMBREUSU`) VALUES (?,?,?,?,?,?)" ha tirado un error : Duplicate entry 'Asier' for key 'PRIMARY'
05 abr 2016 - 17:25:31,224 (main) DEBUG [DataNucleus.Transaction] - Haciendo rollback de la transacción para el ExecutionContext org.datanucleus.ExecutionContextImpl@1d76aeea
05 abr 2016 - 17:25:31,224 (main) DEBUG [DataNucleus.Lifecycle] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") tiene cambio de lifeycle : "P_NEW"->""
05 abr 2016 - 17:25:31,224 (main) DEBUG [DataNucleus.Transaction] - Objeto "main.Usuario@7d3a22a9" (id="main.Usuario:Asier") fue ser borrado de la cache transactional
05 abr 2016 - 17:25:31,224 (main) DEBUG [DataNucleus.Persistence] - Disconectando main.Usuario@7d3a22a9 de StateManager[pc=main.Usuario@7d3a22a9, lifecycle=P_NEW]
05 abr 2016 - 17:25:31,225 (main) DEBUG [DataNucleus.Cache] - Objeto con id="main.Usuario:Asier" va a ser borrado de la Cache de nivel 1 [tamaño ahora = 1]
05 abr 2016 - 17:25:31,225 (main) DEBUG [DataNucleus.Transaction] - Rolling back [DataNucleus Transaction, ID=Xid=   , enlisted resources=[org.datanucleus.store.rdbms.ConnectionFactoryImpl$EmulatedXAResource@478190fc]]
05 abr 2016 - 17:25:31,225 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" va a rollback para la transacción "Xid=   "
05 abr 2016 - 17:25:31,226 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 17:25:31,226 (main) DEBUG [DataNucleus.Connection] - ManagedConneccion borrado del pool : "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@595b007d [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@79e2c065, commitOnRelease=false, closeOnRelease=false, closeOnTxnEnd=true]" para clave="org.datanucleus.ExecutionContextImpl@1d76aeea" y fabrica="ConnectionFactory:tx[org.datanucleus.store.rdbms.ConnectionFactoryImpl@1189dd52]"
05 abr 2016 - 17:25:31,226 (main) DEBUG [DataNucleus.Transaction] - Transacción rolled back en 2 ms
05 abr 2016 - 17:25:31,227 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 1 vaciada.
05 abr 2016 - 17:25:31,227 (main) DEBUG [DataNucleus.Persistence] - ExecutionContext "org.datanucleus.ExecutionContextImpl@1d76aeea" se cerró
