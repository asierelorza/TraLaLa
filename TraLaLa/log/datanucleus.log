05 abr 2016 - 15:40:34,023 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:40:34,040 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:40:34,052 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,054 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,060 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:40:34,069 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,077 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,082 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:40:34,093 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,100 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,121 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:40:34,147 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:40:34,147 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,162 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:40:34,163 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:40:34,164 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:40:34,166 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 15:40:34,166 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 15:40:34,166 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 15:40:34,166 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:40:34,166 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:40:34,166 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:40:34,166 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:40:34,167 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:40:34,167 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:40:34,167 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:40:34,167 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:40:34,167 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 15:40:34,188 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 15:40:34,230 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:40:34,236 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:40:34,241 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:40:34,242 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:40:34,242 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:40:34,242 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:40:34,242 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:40:34,243 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:40:34,243 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:40:34,243 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:40:34,243 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:40:34,243 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:40:34,243 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:40:34,244 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:40:34,244 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:40:34,244 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:40:34,244 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:40:34,244 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:40:34,245 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:40:34,245 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:40:34,245 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:40:34,245 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:40:34,246 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:40:34,247 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:40:34,247 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:40:34,248 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:40:34,248 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:40:34,249 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,249 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,250 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:40:34,250 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,250 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,250 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,250 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,251 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:40:34,251 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,251 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,251 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,251 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,251 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,253 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:40:34,253 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,253 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,253 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,253 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,253 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:40:34,254 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:40:34,254 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:40:34,254 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:40:34,254 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:40:34,256 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:40:34,256 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:40:34,258 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:40:34,270 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:40:34,271 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:40:34,272 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:40:34,278 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:40:34,281 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 15:40:34,281 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 15:40:34,281 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 15:40:34,281 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 15:40:34,281 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 15:40:34,282 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 15:40:34,282 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 15:40:34,282 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 15:40:34,282 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:40:34,283 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:40:34,284 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 15:40:34,285 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,285 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,285 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,285 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,285 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:40:34,286 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:40:34,286 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:40:34,286 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:40:34,286 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:40:34,287 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:40:34,287 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:40:34,287 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:40:34,287 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:40:34,287 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,288 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:40:34,289 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,289 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:40:34,289 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:40:34,289 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:40:34,290 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:40:34,291 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:40:34,291 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:40:34,291 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 15:40:34,292 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 15:40:34,292 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 15:40:34,292 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:40:34,293 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 15:40:34,293 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 15:40:34,293 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 15:40:34,294 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 15:40:34,294 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 15:40:34,294 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:40:34,294 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:40:34,294 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,294 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:40:34,295 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:40:34,296 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 15:40:34,297 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:40:34,298 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:40:34,299 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,300 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:40:34,301 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:40:34,302 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,303 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:40:34,303 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,303 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 15:40:34,303 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 15:40:34,303 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:40:34,303 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:40:34,304 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:40:34,305 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 15:40:34,306 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,307 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:40:34,308 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:40:34,309 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 15:40:34,310 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 15:40:34,311 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 15:40:34,311 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 15:40:34,311 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:40:34,312 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:40:34,313 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 15:40:34,314 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:40:34,315 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:40:34,316 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:40:34,317 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:40:34,318 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:40:34,319 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 15:40:34,320 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 15:40:34,320 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 15:40:34,320 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 15:40:34,321 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 15:40:34,545 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 15:40:34,546 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:40:34,547 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:40:34,562 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:40:34,577 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:40:34,588 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,590 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,593 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:40:34,602 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,611 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,614 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:40:34,624 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,629 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:40:34,642 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 15:40:34,642 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 15:40:34,679 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:40:34,679 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 15:40:34,679 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 15:40:34,702 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:40:34,862 (main) ERROR [DataNucleus.Datastore.Schema] - La inicialización del base de datos ha fallado.
Access denied for user 'sd'@'localhost' (using password: YES)
org.datanucleus.exceptions.NucleusDataStoreException: Access denied for user 'sd'@'localhost' (using password: YES)
	at org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl.getConnection(ConnectionFactoryImpl.java:518)
	at org.datanucleus.store.rdbms.RDBMSStoreManager.<init>(RDBMSStoreManager.java:302)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:612)
	at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:301)
	at org.datanucleus.NucleusContextHelper.createStoreManagerForProperties(NucleusContextHelper.java:193)
	at org.datanucleus.PersistenceNucleusContextImpl.initialise(PersistenceNucleusContextImpl.java:428)
	at org.datanucleus.store.schema.SchemaTool.getNucleusContextForMode(SchemaTool.java:693)
	at org.datanucleus.store.schema.SchemaTool.main(SchemaTool.java:281)
Caused by: java.sql.SQLException: Access denied for user 'sd'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1086)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:928)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1750)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1290)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2493)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2311)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:834)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:416)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:347)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at org.datanucleus.store.rdbms.datasource.dbcp.DriverManagerConnectionFactory.createConnection(DriverManagerConnectionFactory.java:78)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.datanucleus.store.rdbms.datasource.dbcp.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1157)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:108)
	at org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl.getConnection(ConnectionFactoryImpl.java:503)
	... 11 more
Nested Throwables StackTrace:
java.sql.SQLException: Access denied for user 'sd'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1086)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:928)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1750)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1290)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2493)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2311)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:834)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:416)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:347)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at org.datanucleus.store.rdbms.datasource.dbcp.DriverManagerConnectionFactory.createConnection(DriverManagerConnectionFactory.java:78)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.datanucleus.store.rdbms.datasource.dbcp.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1157)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:108)
	at org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl.getConnection(ConnectionFactoryImpl.java:503)
	at org.datanucleus.store.rdbms.RDBMSStoreManager.<init>(RDBMSStoreManager.java:302)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:612)
	at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:301)
	at org.datanucleus.NucleusContextHelper.createStoreManagerForProperties(NucleusContextHelper.java:193)
	at org.datanucleus.PersistenceNucleusContextImpl.initialise(PersistenceNucleusContextImpl.java:428)
	at org.datanucleus.store.schema.SchemaTool.getNucleusContextForMode(SchemaTool.java:693)
	at org.datanucleus.store.schema.SchemaTool.main(SchemaTool.java:281)
05 abr 2016 - 15:40:34,864 (main) ERROR [DataNucleus.SchemaTool] - Error creating NucleusContext
Access denied for user 'sd'@'localhost' (using password: YES)
org.datanucleus.exceptions.NucleusDataStoreException: Access denied for user 'sd'@'localhost' (using password: YES)
	at org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl.getConnection(ConnectionFactoryImpl.java:518)
	at org.datanucleus.store.rdbms.RDBMSStoreManager.<init>(RDBMSStoreManager.java:302)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:612)
	at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:301)
	at org.datanucleus.NucleusContextHelper.createStoreManagerForProperties(NucleusContextHelper.java:193)
	at org.datanucleus.PersistenceNucleusContextImpl.initialise(PersistenceNucleusContextImpl.java:428)
	at org.datanucleus.store.schema.SchemaTool.getNucleusContextForMode(SchemaTool.java:693)
	at org.datanucleus.store.schema.SchemaTool.main(SchemaTool.java:281)
Caused by: java.sql.SQLException: Access denied for user 'sd'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1086)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:928)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1750)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1290)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2493)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2311)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:834)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:416)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:347)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at org.datanucleus.store.rdbms.datasource.dbcp.DriverManagerConnectionFactory.createConnection(DriverManagerConnectionFactory.java:78)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.datanucleus.store.rdbms.datasource.dbcp.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1157)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:108)
	at org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl.getConnection(ConnectionFactoryImpl.java:503)
	... 11 more
Nested Throwables StackTrace:
java.sql.SQLException: Access denied for user 'sd'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1086)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:928)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1750)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1290)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2493)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2311)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:834)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:416)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:347)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at org.datanucleus.store.rdbms.datasource.dbcp.DriverManagerConnectionFactory.createConnection(DriverManagerConnectionFactory.java:78)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.datanucleus.store.rdbms.datasource.dbcp.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1157)
	at org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:108)
	at org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl.getConnection(ConnectionFactoryImpl.java:503)
	at org.datanucleus.store.rdbms.RDBMSStoreManager.<init>(RDBMSStoreManager.java:302)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:612)
	at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:301)
	at org.datanucleus.NucleusContextHelper.createStoreManagerForProperties(NucleusContextHelper.java:193)
	at org.datanucleus.PersistenceNucleusContextImpl.initialise(PersistenceNucleusContextImpl.java:428)
	at org.datanucleus.store.schema.SchemaTool.getNucleusContextForMode(SchemaTool.java:693)
	at org.datanucleus.store.schema.SchemaTool.main(SchemaTool.java:281)
05 abr 2016 - 15:41:07,283 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:41:07,301 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:41:07,313 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,316 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,319 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:41:07,330 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,338 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,342 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:41:07,356 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,363 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,388 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:41:07,414 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:41:07,415 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:07,431 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:41:07,432 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:41:07,433 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:41:07,435 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 15:41:07,435 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 15:41:07,435 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:41:07,436 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:41:07,437 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 15:41:07,462 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 15:41:07,504 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:07,509 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:07,516 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:41:07,516 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:07,516 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:41:07,516 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:41:07,517 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:41:07,517 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:41:07,517 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:41:07,517 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:41:07,517 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:41:07,517 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:41:07,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:07,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:41:07,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:41:07,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:41:07,518 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:41:07,519 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:41:07,519 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:41:07,519 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:41:07,520 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:41:07,520 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:07,520 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:41:07,521 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:07,522 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:07,523 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:41:07,523 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:41:07,523 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,523 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,525 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,526 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:07,527 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:41:07,527 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:41:07,528 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:41:07,528 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:41:07,529 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:41:07,529 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:41:07,530 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 15:41:07,542 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:41:07,542 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:41:07,543 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:41:07,544 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,545 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,546 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:41:07,546 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:41:07,546 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:41:07,550 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:41:07,553 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 15:41:07,553 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 15:41:07,553 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 15:41:07,553 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 15:41:07,554 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 15:41:07,554 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 15:41:07,554 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 15:41:07,554 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:41:07,555 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:41:07,556 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:41:07,556 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 15:41:07,557 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,557 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,557 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,557 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,558 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:41:07,558 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:41:07,558 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:41:07,558 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:41:07,558 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:41:07,559 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:41:07,559 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:41:07,559 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:41:07,559 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:41:07,560 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:41:07,560 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:41:07,560 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:41:07,560 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:41:07,560 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:41:07,560 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:41:07,561 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:41:07,561 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,561 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:41:07,561 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,561 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:41:07,561 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:41:07,562 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:41:07,563 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:41:07,563 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:41:07,563 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:41:07,563 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:41:07,564 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 15:41:07,564 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 15:41:07,564 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 15:41:07,564 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:41:07,565 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 15:41:07,565 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 15:41:07,566 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 15:41:07,566 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 15:41:07,566 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 15:41:07,566 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:41:07,566 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:41:07,566 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:41:07,567 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:41:07,568 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 15:41:07,569 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:41:07,570 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:41:07,571 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,572 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:41:07,573 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:41:07,574 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,575 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:41:07,575 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,575 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 15:41:07,575 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 15:41:07,575 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:41:07,575 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,576 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:41:07,577 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 15:41:07,578 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:41:07,579 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:41:07,580 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:41:07,581 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:41:07,582 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 15:41:07,583 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:41:07,583 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 15:41:07,583 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 15:41:07,583 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 15:41:07,583 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:41:07,584 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,585 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 15:41:07,586 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 15:41:07,587 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:41:07,588 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:41:07,589 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:41:07,590 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,591 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 15:41:07,592 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 15:41:07,592 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 15:41:07,593 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 15:41:07,593 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 15:41:07,818 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 15:41:07,819 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 15:41:07,819 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:41:07,819 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:41:07,819 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:41:07,819 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:41:07,820 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:41:07,820 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:41:07,820 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:41:07,820 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:41:07,833 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:41:07,849 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:41:07,860 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,863 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,865 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:41:07,875 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,884 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,887 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:41:07,900 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,906 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:41:07,918 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 15:41:07,918 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 15:41:07,955 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:41:07,955 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 15:41:07,956 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 15:41:07,979 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:41:08,168 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 15:41:08,180 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,180 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,181 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,181 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,181 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,182 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,182 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,182 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,182 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,183 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,183 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,183 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,183 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,184 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,184 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,184 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,184 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,184 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,184 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,185 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,186 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,186 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,186 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,186 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,186 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,187 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,188 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,188 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,188 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,188 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,188 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,189 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,189 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,189 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,189 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,189 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,190 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,191 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,192 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,192 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,192 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,192 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,192 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,193 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,193 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 15:41:08,193 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,193 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,193 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,193 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:41:08,201 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 15:41:08,202 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 15:41:08,202 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 15:41:08,202 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 15:41:08,213 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459863668209`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,215 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459863668209`
05 abr 2016 - 15:41:08,217 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459863668209`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 15:41:08,257 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 40 ms
05 abr 2016 - 15:41:08,266 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 15:41:08,266 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459863668209`
05 abr 2016 - 15:41:08,266 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459863668209`
05 abr 2016 - 15:41:08,279 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 13 ms
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/accountsDB]
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/accountsDB]
05 abr 2016 - 15:41:08,280 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=accountsDB
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 15:41:08,281 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 15:41:08,282 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 15:41:08,282 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 15:41:08,282 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 15:41:08,282 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 15:41:08,283 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 15:41:08,289 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:41:08,314 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:41:08,314 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:41:08,327 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:41:08,327 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:41:08,328 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 15:41:08,329 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 15:41:08,332 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 15:41:08,333 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 15:41:08,336 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 15:41:08,336 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 15:41:08,337 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 15:41:08,337 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 15:41:08,338 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 15:41:08,338 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 7 ficheros (metadata/class) ...
05 abr 2016 - 15:41:08,346 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 15:41:08,347 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:41:08,347 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 15:41:08,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:41:08,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:08,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:41:08,349 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:41:08,350 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:41:08,350 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:41:08,350 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:41:08,350 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:41:08,350 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:41:08,351 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:41:08,352 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:41:08,385 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:08,388 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:41:08,388 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:08,388 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:41:08,388 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:41:08,388 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:41:08,388 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:41:08,389 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:41:08,389 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:41:08,389 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:41:08,389 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:08,394 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:08,399 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:41:08,400 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:41:08,400 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:41:08,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 15:41:08,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:41:08,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 15:41:08,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,402 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,404 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:41:08,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 15:41:08,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:41:08,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 15:41:08,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 15:41:08,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 15:41:08,405 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 15:41:08,405 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 15:41:08,405 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,405 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,405 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:41:08,405 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 15:41:08,406 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:41:08,407 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,408 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:41:08,409 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:41:08,409 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:41:08,410 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:41:08,410 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:41:08,410 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:41:08,411 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:41:08,411 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 7 ficheros (metadata/class)
05 abr 2016 - 15:41:08,413 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 15:41:08,414 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:08,414 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 15:41:08,417 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 15:41:08,417 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 15:41:08,417 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 15:41:08,418 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 15:41:08,418 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 15:41:08,419 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 15:41:08,421 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 15:41:08,421 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 15:41:08,421 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 15:41:08,422 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 15:41:08,423 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 15:41:08,423 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 15:41:08,423 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 15:41:08,423 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 15:41:08,423 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 15:41:08,429 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 15:41:08,429 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,430 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,431 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 15:41:08,431 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,432 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 15:41:08,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,432 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 15:41:08,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 15:41:08,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 15:41:08,434 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,435 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,438 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 15:41:08,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:41:08,438 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:41:08,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,441 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 15:41:08,443 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,443 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,443 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,444 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,446 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 15:41:08,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,447 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:41:08,448 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 15:41:08,451 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 15:41:08,451 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9" y isolacion "serializable"
05 abr 2016 - 15:41:08,452 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned no table
05 abr 2016 - 15:41:08,452 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `REPRODUCCION`
05 abr 2016 - 15:41:08,452 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `REPRODUCCION`
(
    `REPRODUCCION_ID` BIGINT NOT NULL AUTO_INCREMENT,
    `CANCION_ID_CANCION_OID` INTEGER NULL,
    `FECHA_REP` INTEGER NOT NULL,
    `HORA_REP` INTEGER NOT NULL,
    `PRECIO` INTEGER NOT NULL,
    `USUARIO_NOMBREUSU_OID` VARCHAR(255) BINARY NULL,
    CONSTRAINT `REPRODUCCION_PK` PRIMARY KEY (`REPRODUCCION_ID`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,488 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 36 ms
05 abr 2016 - 15:41:08,491 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned no table
05 abr 2016 - 15:41:08,491 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO`
05 abr 2016 - 15:41:08,491 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO`
(
    `NOMBREUSU` VARCHAR(255) BINARY NOT NULL,
    `CONTRASENYA_PAYPAL` VARCHAR(255) BINARY NULL,
    `IMPORTEMENSUAL` INTEGER NOT NULL,
    `NUMTARJCRED` INTEGER NOT NULL,
    `USUARIO_PAYPAL` VARCHAR(255) BINARY NULL,
    `VENTAJOSO` BIT NOT NULL,
    CONSTRAINT `USUARIO_PK` PRIMARY KEY (`NOMBREUSU`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,519 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:41:08,522 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned no table
05 abr 2016 - 15:41:08,522 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `CANCION`
05 abr 2016 - 15:41:08,522 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `CANCION`
(
    `ID_CANCION` INTEGER NOT NULL,
    `ALBUM` VARCHAR(255) BINARY NULL,
    `ARTISTA_ID_ARTISTA_OID` INTEGER NULL,
    `PRECIO` INTEGER NOT NULL,
    `TITULO` VARCHAR(255) BINARY NULL,
    `LISTACANCIONES_ID_ARTISTA_OWN` INTEGER NULL,
    `LISTACANCIONES_INTEGER_IDX` INTEGER NULL,
    CONSTRAINT `CANCION_PK` PRIMARY KEY (`ID_CANCION`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,550 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:41:08,553 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned no table
05 abr 2016 - 15:41:08,553 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `ARTISTA`
05 abr 2016 - 15:41:08,553 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `ARTISTA`
(
    `ID_ARTISTA` INTEGER NOT NULL,
    `NOMARTISTA` VARCHAR(255) BINARY NULL,
    CONSTRAINT `ARTISTA_PK` PRIMARY KEY (`ID_ARTISTA`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,589 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 36 ms
05 abr 2016 - 15:41:08,592 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned no table
05 abr 2016 - 15:41:08,592 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 15:41:08,592 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO_HISTORIALREP`
(
    `NOMBREUSU_OID` VARCHAR(255) BINARY NOT NULL,
    `REPRODUCCION_ID_EID` BIGINT NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `USUARIO_HISTORIALREP_PK` PRIMARY KEY (`NOMBREUSU_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,632 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 40 ms
05 abr 2016 - 15:41:08,637 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned no table
05 abr 2016 - 15:41:08,637 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 15:41:08,638 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO_LISTAREPRODUCCION`
(
    `NOMBREUSU_OID` VARCHAR(255) BINARY NOT NULL,
    `ID_CANCION_EID` INTEGER NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `USUARIO_LISTAREPRODUCCION_PK` PRIMARY KEY (`NOMBREUSU_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,676 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 38 ms
05 abr 2016 - 15:41:08,682 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned no table
05 abr 2016 - 15:41:08,682 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 15:41:08,683 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO_LISTAAMIGOS`
(
    `NOMBREUSU_OID` VARCHAR(255) BINARY NOT NULL,
    `NOMBREUSU_EID` VARCHAR(255) BINARY NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `USUARIO_LISTAAMIGOS_PK` PRIMARY KEY (`NOMBREUSU_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,719 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 36 ms
05 abr 2016 - 15:41:08,724 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned no table
05 abr 2016 - 15:41:08,724 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 15:41:08,724 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `CANCION_LISTAUSUARIO`
(
    `ID_CANCION_OID` INTEGER NOT NULL,
    `NOMBREUSU_EID` VARCHAR(255) BINARY NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `CANCION_LISTAUSUARIO_PK` PRIMARY KEY (`ID_CANCION_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,760 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 36 ms
05 abr 2016 - 15:41:08,765 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned no table
05 abr 2016 - 15:41:08,766 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 15:41:08,766 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `CANCION_LISTAREPRODUCCION`
(
    `ID_CANCION_OID` INTEGER NOT NULL,
    `REPRODUCCION_ID_EID` BIGINT NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `CANCION_LISTAREPRODUCCION_PK` PRIMARY KEY (`ID_CANCION_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:41:08,805 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 39 ms
05 abr 2016 - 15:41:08,812 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "REPRODUCCION_N50" en catalogo "" equema ""
05 abr 2016 - 15:41:08,812 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `REPRODUCCION_N50` ON `REPRODUCCION` (`CANCION_ID_CANCION_OID`)
05 abr 2016 - 15:41:08,850 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 37 ms
05 abr 2016 - 15:41:08,850 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "REPRODUCCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:08,850 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `REPRODUCCION_N49` ON `REPRODUCCION` (`USUARIO_NOMBREUSU_OID`)
05 abr 2016 - 15:41:08,969 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 119 ms
05 abr 2016 - 15:41:08,971 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "REPRODUCCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:08,971 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `REPRODUCCION` ADD CONSTRAINT `REPRODUCCION_FK1` FOREIGN KEY (`USUARIO_NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:41:09,062 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 91 ms
05 abr 2016 - 15:41:09,063 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "REPRODUCCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:09,063 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `REPRODUCCION` ADD CONSTRAINT `REPRODUCCION_FK2` FOREIGN KEY (`CANCION_ID_CANCION_OID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:41:09,162 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 99 ms
05 abr 2016 - 15:41:09,164 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:09,164 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_N49` ON `CANCION` (`ARTISTA_ID_ARTISTA_OID`)
05 abr 2016 - 15:41:09,200 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 35 ms
05 abr 2016 - 15:41:09,201 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:09,201 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION` ADD CONSTRAINT `CANCION_FK1` FOREIGN KEY (`ARTISTA_ID_ARTISTA_OID`) REFERENCES `ARTISTA` (`ID_ARTISTA`) 
05 abr 2016 - 15:41:09,295 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 94 ms
05 abr 2016 - 15:41:09,296 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:09,296 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION` ADD CONSTRAINT `CANCION_FK2` FOREIGN KEY (`LISTACANCIONES_ID_ARTISTA_OWN`) REFERENCES `ARTISTA` (`ID_ARTISTA`) 
05 abr 2016 - 15:41:09,390 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 94 ms
05 abr 2016 - 15:41:09,392 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_HISTORIALREP_N50" en catalogo "" equema ""
05 abr 2016 - 15:41:09,392 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_HISTORIALREP_N50` ON `USUARIO_HISTORIALREP` (`REPRODUCCION_ID_EID`)
05 abr 2016 - 15:41:09,422 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 30 ms
05 abr 2016 - 15:41:09,423 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_HISTORIALREP_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:09,423 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_HISTORIALREP_N49` ON `USUARIO_HISTORIALREP` (`NOMBREUSU_OID`)
05 abr 2016 - 15:41:09,450 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 27 ms
05 abr 2016 - 15:41:09,451 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_HISTORIALREP_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:09,451 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_HISTORIALREP` ADD CONSTRAINT `USUARIO_HISTORIALREP_FK1` FOREIGN KEY (`NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:41:09,536 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 85 ms
05 abr 2016 - 15:41:09,537 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_HISTORIALREP_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:09,537 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_HISTORIALREP` ADD CONSTRAINT `USUARIO_HISTORIALREP_FK2` FOREIGN KEY (`REPRODUCCION_ID_EID`) REFERENCES `REPRODUCCION` (`REPRODUCCION_ID`) 
05 abr 2016 - 15:41:09,613 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 76 ms
05 abr 2016 - 15:41:09,614 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAREPRODUCCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:09,614 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAREPRODUCCION_N49` ON `USUARIO_LISTAREPRODUCCION` (`ID_CANCION_EID`)
05 abr 2016 - 15:41:09,640 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 26 ms
05 abr 2016 - 15:41:09,640 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAREPRODUCCION_N50" en catalogo "" equema ""
05 abr 2016 - 15:41:09,640 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAREPRODUCCION_N50` ON `USUARIO_LISTAREPRODUCCION` (`NOMBREUSU_OID`)
05 abr 2016 - 15:41:09,666 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 26 ms
05 abr 2016 - 15:41:09,667 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAREPRODUCCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:09,667 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAREPRODUCCION` ADD CONSTRAINT `USUARIO_LISTAREPRODUCCION_FK1` FOREIGN KEY (`NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:41:09,738 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 71 ms
05 abr 2016 - 15:41:09,739 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAREPRODUCCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:09,739 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAREPRODUCCION` ADD CONSTRAINT `USUARIO_LISTAREPRODUCCION_FK2` FOREIGN KEY (`ID_CANCION_EID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:41:09,809 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 70 ms
05 abr 2016 - 15:41:09,810 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAAMIGOS_N50" en catalogo "" equema ""
05 abr 2016 - 15:41:09,810 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAAMIGOS_N50` ON `USUARIO_LISTAAMIGOS` (`NOMBREUSU_EID`)
05 abr 2016 - 15:41:09,838 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:41:09,839 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAAMIGOS_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:09,839 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAAMIGOS_N49` ON `USUARIO_LISTAAMIGOS` (`NOMBREUSU_OID`)
05 abr 2016 - 15:41:09,939 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 100 ms
05 abr 2016 - 15:41:09,940 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAAMIGOS_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:09,940 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAAMIGOS` ADD CONSTRAINT `USUARIO_LISTAAMIGOS_FK2` FOREIGN KEY (`NOMBREUSU_EID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:41:10,503 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 563 ms
05 abr 2016 - 15:41:10,504 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAAMIGOS_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:10,504 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAAMIGOS` ADD CONSTRAINT `USUARIO_LISTAAMIGOS_FK1` FOREIGN KEY (`NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:41:10,612 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 108 ms
05 abr 2016 - 15:41:10,614 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAUSUARIO_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:10,614 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAUSUARIO_N49` ON `CANCION_LISTAUSUARIO` (`ID_CANCION_OID`)
05 abr 2016 - 15:41:10,657 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 43 ms
05 abr 2016 - 15:41:10,659 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAUSUARIO_N50" en catalogo "" equema ""
05 abr 2016 - 15:41:10,660 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAUSUARIO_N50` ON `CANCION_LISTAUSUARIO` (`NOMBREUSU_EID`)
05 abr 2016 - 15:41:10,699 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 39 ms
05 abr 2016 - 15:41:10,699 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAUSUARIO_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:10,699 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAUSUARIO` ADD CONSTRAINT `CANCION_LISTAUSUARIO_FK2` FOREIGN KEY (`NOMBREUSU_EID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:41:10,786 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 87 ms
05 abr 2016 - 15:41:10,786 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAUSUARIO_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:10,787 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAUSUARIO` ADD CONSTRAINT `CANCION_LISTAUSUARIO_FK1` FOREIGN KEY (`ID_CANCION_OID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:41:11,170 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 383 ms
05 abr 2016 - 15:41:11,172 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAREPRODUCCION_N50" en catalogo "" equema ""
05 abr 2016 - 15:41:11,172 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAREPRODUCCION_N50` ON `CANCION_LISTAREPRODUCCION` (`ID_CANCION_OID`)
05 abr 2016 - 15:41:11,224 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 52 ms
05 abr 2016 - 15:41:11,225 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAREPRODUCCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:41:11,225 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAREPRODUCCION_N49` ON `CANCION_LISTAREPRODUCCION` (`REPRODUCCION_ID_EID`)
05 abr 2016 - 15:41:11,257 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 32 ms
05 abr 2016 - 15:41:11,257 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAREPRODUCCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:41:11,257 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAREPRODUCCION` ADD CONSTRAINT `CANCION_LISTAREPRODUCCION_FK2` FOREIGN KEY (`REPRODUCCION_ID_EID`) REFERENCES `REPRODUCCION` (`REPRODUCCION_ID`) 
05 abr 2016 - 15:41:11,334 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 77 ms
05 abr 2016 - 15:41:11,334 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAREPRODUCCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:41:11,334 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAREPRODUCCION` ADD CONSTRAINT `CANCION_LISTAREPRODUCCION_FK1` FOREIGN KEY (`ID_CANCION_OID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:41:11,415 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 81 ms
05 abr 2016 - 15:41:11,416 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9"
05 abr 2016 - 15:41:11,417 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9"
05 abr 2016 - 15:41:11,417 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 15:41:11,418 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 15:41:11,419 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 15:41:11,419 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 15:41:11,419 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 15:41:11,420 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 15:43:25,237 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:43:25,255 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:43:25,266 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,268 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,271 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:43:25,282 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,289 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,293 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:43:25,306 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,311 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,333 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:43:25,359 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:43:25,359 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,374 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:43:25,375 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:43:25,376 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:43:25,378 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 15:43:25,378 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:43:25,379 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:43:25,380 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 15:43:25,402 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 15:43:25,445 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:25,450 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:25,456 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:43:25,456 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:25,456 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:43:25,456 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:43:25,457 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:43:25,457 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:43:25,457 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:43:25,457 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:43:25,457 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:43:25,457 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:43:25,458 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:25,458 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:43:25,458 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:43:25,458 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:43:25,459 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:43:25,459 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:43:25,459 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:43:25,459 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:43:25,459 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:43:25,460 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:25,460 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:43:25,460 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:43:25,460 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:43:25,460 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:43:25,460 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:43:25,461 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:43:25,461 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:43:25,461 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:25,462 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:25,463 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:43:25,463 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:43:25,463 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,463 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,465 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:43:25,465 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,465 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,465 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,465 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,466 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,467 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:25,467 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:43:25,468 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:43:25,469 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:43:25,469 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:43:25,469 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:43:25,469 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:43:25,471 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:43:25,482 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:43:25,483 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:43:25,484 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:43:25,489 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:43:25,492 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 15:43:25,493 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 15:43:25,494 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:43:25,495 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:43:25,496 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 15:43:25,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:43:25,497 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:43:25,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:43:25,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:43:25,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:43:25,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:43:25,498 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:43:25,499 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:43:25,500 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:43:25,501 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:43:25,502 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:43:25,502 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:43:25,502 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 15:43:25,503 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 15:43:25,503 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 15:43:25,503 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:43:25,504 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 15:43:25,504 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 15:43:25,504 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:43:25,505 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:43:25,506 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 15:43:25,507 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 15:43:25,508 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:43:25,509 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:43:25,510 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,511 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:43:25,512 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:43:25,513 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,514 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:43:25,514 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,514 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 15:43:25,514 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 15:43:25,514 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:43:25,514 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:43:25,515 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:43:25,516 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 15:43:25,517 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:43:25,518 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,519 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:43:25,520 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 15:43:25,521 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 15:43:25,521 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 15:43:25,522 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 15:43:25,522 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 15:43:25,522 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,523 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 15:43:25,524 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 15:43:25,525 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:43:25,526 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:43:25,527 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:43:25,528 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 15:43:25,529 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 15:43:25,530 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 15:43:25,531 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 15:43:25,531 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 15:43:25,531 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 15:43:25,750 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 15:43:25,751 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:43:25,752 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:43:25,766 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:43:25,782 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:43:25,794 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,796 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,799 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:43:25,811 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,819 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,823 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:43:25,837 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,842 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:43:25,857 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 15:43:25,857 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 15:43:25,898 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:43:25,899 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 15:43:25,899 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 15:43:25,921 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:43:26,113 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 15:43:26,123 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,123 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,123 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,124 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,124 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,124 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,125 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,125 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,125 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,125 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,126 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,126 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,126 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,127 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,128 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,129 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,129 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,129 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,130 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,131 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,131 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,131 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,132 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,132 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,132 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,132 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,132 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,133 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,133 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,133 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,133 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,133 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,134 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,135 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,136 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,137 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:43:26,145 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 15:43:26,145 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 15:43:26,145 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 15:43:26,145 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 15:43:26,157 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459863806153`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,159 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459863806153`
05 abr 2016 - 15:43:26,161 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459863806153`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 15:43:26,195 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 34 ms
05 abr 2016 - 15:43:26,204 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 15:43:26,204 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459863806153`
05 abr 2016 - 15:43:26,204 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459863806153`
05 abr 2016 - 15:43:26,221 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 17 ms
05 abr 2016 - 15:43:26,222 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 15:43:26,223 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 15:43:26,223 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 15:43:26,223 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 15:43:26,223 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 15:43:26,223 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 15:43:26,224 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 15:43:26,224 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 15:43:26,224 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 15:43:26,224 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 15:43:26,224 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 15:43:26,224 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/accountsDB]
05 abr 2016 - 15:43:26,225 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/accountsDB]
05 abr 2016 - 15:43:26,225 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=accountsDB
05 abr 2016 - 15:43:26,225 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 15:43:26,225 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 15:43:26,225 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 15:43:26,226 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 15:43:26,226 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 15:43:26,226 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 15:43:26,226 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 15:43:26,226 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 15:43:26,227 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 15:43:26,227 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 15:43:26,228 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 15:43:26,230 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 15:43:26,248 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:43:26,291 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:43:26,291 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:43:26,307 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:43:26,307 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,307 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,307 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,307 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,307 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 15:43:26,308 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:43:26,309 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:43:26,310 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 15:43:26,310 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 15:43:26,313 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 15:43:26,314 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 15:43:26,318 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 15:43:26,318 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 15:43:26,318 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 15:43:26,319 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 15:43:26,319 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 15:43:26,319 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 15:43:26,319 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 15:43:26,319 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 15:43:26,319 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 15:43:26,319 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 7 ficheros (metadata/class) ...
05 abr 2016 - 15:43:26,340 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 15:43:26,340 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:43:26,341 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 15:43:26,342 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:43:26,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:26,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:43:26,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:43:26,343 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:43:26,344 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:43:26,344 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:43:26,344 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:43:26,344 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:43:26,344 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:43:26,344 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:43:26,345 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:43:26,377 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:26,379 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:43:26,380 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:26,380 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:43:26,380 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:43:26,380 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:43:26,380 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:43:26,380 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:43:26,381 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:43:26,381 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:43:26,382 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:26,386 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:26,392 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:43:26,394 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:43:26,395 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:43:26,395 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 15:43:26,396 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:43:26,396 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 15:43:26,397 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 15:43:26,397 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 15:43:26,397 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 15:43:26,397 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 15:43:26,398 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,398 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,398 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,398 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,398 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,399 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:43:26,400 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 15:43:26,400 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:43:26,400 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 15:43:26,400 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 15:43:26,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 15:43:26,401 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 15:43:26,401 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 15:43:26,401 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,401 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,401 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 15:43:26,402 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 15:43:26,403 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,404 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,405 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,405 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:43:26,405 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:43:26,405 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:43:26,406 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:43:26,407 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:43:26,407 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:43:26,407 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:43:26,407 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 7 ficheros (metadata/class)
05 abr 2016 - 15:43:26,411 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 15:43:26,411 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:26,411 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 15:43:26,414 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 15:43:26,414 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 15:43:26,414 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 15:43:26,415 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 15:43:26,416 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 15:43:26,416 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 15:43:26,416 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 15:43:26,416 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 15:43:26,416 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 15:43:26,417 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 15:43:26,417 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 15:43:26,417 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 15:43:26,418 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 15:43:26,418 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 15:43:26,418 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 15:43:26,419 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 15:43:26,420 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 15:43:26,420 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 15:43:26,420 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 15:43:26,420 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 15:43:26,420 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 15:43:26,426 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 15:43:26,427 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,428 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,429 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 15:43:26,430 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,430 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 15:43:26,430 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,431 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,431 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 15:43:26,431 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,431 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,431 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,432 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 15:43:26,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 15:43:26,433 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,433 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,436 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,437 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,438 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,439 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,440 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,440 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 15:43:26,441 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,442 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,443 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,444 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,444 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,445 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 15:43:26,446 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:43:26,447 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:43:26,447 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 15:43:26,448 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 15:43:26,448 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9" y isolacion "serializable"
05 abr 2016 - 15:43:26,450 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned table type of TABLE
05 abr 2016 - 15:43:26,451 (main) DEBUG [DataNucleus.Datastore.Schema] - Cargando información de columna para las tablas "usuario_historialrep, usuario_listareproduccion, artista, reproduccion, usuario, cancion_listareproduccion, cancion_listausuario, usuario_listaamigos, cancion" por el Catalogo "", el Esquema ""
05 abr 2016 - 15:43:26,501 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por el Catalogo "", el Esquema "", 9 tablas, tiempo = 50 ms
05 abr 2016 - 15:43:26,502 (main) DEBUG [DataNucleus.Datastore.Schema] - Información de columna cargado por la tabla "REPRODUCCION" : hemos encontrado 6 columnas
05 abr 2016 - 15:43:26,504 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned table type of TABLE
05 abr 2016 - 15:43:26,505 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned table type of TABLE
05 abr 2016 - 15:43:26,505 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned table type of TABLE
05 abr 2016 - 15:43:26,506 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned table type of TABLE
05 abr 2016 - 15:43:26,507 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 15:43:26,508 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned table type of TABLE
05 abr 2016 - 15:43:26,509 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned table type of TABLE
05 abr 2016 - 15:43:26,510 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned table type of TABLE
05 abr 2016 - 15:43:26,514 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `REPRODUCCION`
05 abr 2016 - 15:43:26,519 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `REPRODUCCION`
05 abr 2016 - 15:43:26,520 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `REPRODUCCION`
05 abr 2016 - 15:43:26,521 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `USUARIO`
05 abr 2016 - 15:43:26,522 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `USUARIO`
05 abr 2016 - 15:43:26,523 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO`
05 abr 2016 - 15:43:26,524 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION`
05 abr 2016 - 15:43:26,525 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION`
05 abr 2016 - 15:43:26,527 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION`
05 abr 2016 - 15:43:26,528 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 indic(es) de la tabla `ARTISTA`
05 abr 2016 - 15:43:26,528 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 0 foreign key(s) de la tabla `ARTISTA`
05 abr 2016 - 15:43:26,529 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `ARTISTA`
05 abr 2016 - 15:43:26,530 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 15:43:26,532 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 15:43:26,534 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 15:43:26,535 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 15:43:26,536 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 15:43:26,538 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 15:43:26,539 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 15:43:26,540 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 15:43:26,542 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 15:43:26,543 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 15:43:26,544 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 15:43:26,545 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 15:43:26,546 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 3 indic(es) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 15:43:26,548 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 2 foreign key(s) de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 15:43:26,549 (main) DEBUG [DataNucleus.Datastore.Schema] - Validando 1 llaves unicas de la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 15:43:26,549 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9"
05 abr 2016 - 15:43:26,549 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9"
05 abr 2016 - 15:43:26,550 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 15:43:26,550 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 15:43:26,551 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 15:43:26,551 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 15:43:26,551 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 15:43:26,552 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 15:45:56,770 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:45:56,788 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:45:56,801 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:56,803 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:56,806 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:45:56,817 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:56,826 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:56,829 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:45:56,841 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:56,847 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:56,871 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:45:56,898 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:45:56,898 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,913 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:45:56,914 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:45:56,915 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:45:56,916 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 15:45:56,916 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 15:45:56,916 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 15:45:56,916 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:45:56,917 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 15:45:56,941 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 15:45:56,984 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:56,989 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:56,995 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:45:56,995 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:45:56,996 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:45:56,997 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:45:56,997 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:56,997 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:45:56,998 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:45:56,998 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:45:56,998 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:45:56,998 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:45:56,998 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:45:56,998 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:45:56,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:45:56,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:56,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:45:56,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:45:56,999 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:45:57,000 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:45:57,000 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:45:57,000 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:45:57,000 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:45:57,000 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:57,001 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:57,002 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:45:57,002 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:45:57,002 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,002 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,004 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,005 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,006 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:45:57,006 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,007 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,007 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,008 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,008 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:45:57,009 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 15:45:57,020 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:45:57,021 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:45:57,022 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:45:57,023 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:45:57,028 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:45:57,031 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 15:45:57,031 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 15:45:57,031 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 15:45:57,031 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 15:45:57,031 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 15:45:57,031 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 15:45:57,033 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 15:45:57,033 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 15:45:57,033 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:45:57,034 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:45:57,035 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 15:45:57,036 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,036 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,036 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,036 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,036 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:45:57,037 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:45:57,037 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:45:57,037 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:45:57,037 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:45:57,038 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:45:57,038 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:45:57,038 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:45:57,038 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:45:57,038 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:45:57,039 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:45:57,039 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:45:57,039 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:45:57,039 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:45:57,040 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:45:57,040 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:45:57,040 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,040 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:45:57,040 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,040 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:45:57,041 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:45:57,042 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:45:57,042 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:45:57,042 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:45:57,042 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:45:57,043 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 15:45:57,043 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 15:45:57,043 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 15:45:57,043 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:45:57,044 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 15:45:57,044 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 15:45:57,044 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 15:45:57,045 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 15:45:57,045 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 15:45:57,045 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:45:57,045 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:45:57,045 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,045 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:45:57,046 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:45:57,047 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:45:57,048 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:45:57,049 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:45:57,050 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:45:57,051 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:45:57,052 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 15:45:57,053 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 15:45:57,054 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:45:57,054 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 15:45:57,055 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 15:45:57,055 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 15:45:57,055 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:45:57,055 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:45:57,055 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,055 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,056 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 15:45:57,057 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:45:57,058 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,059 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:45:57,060 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 15:45:57,061 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 15:45:57,062 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 15:45:57,062 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 15:45:57,062 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 15:45:57,062 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:45:57,063 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:45:57,064 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 15:45:57,065 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:45:57,066 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:45:57,067 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:45:57,068 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:45:57,069 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 15:45:57,070 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 15:45:57,071 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 15:45:57,071 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 15:45:57,071 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
05 abr 2016 - 15:45:57,294 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Creación del esquema para clases
05 abr 2016 - 15:45:57,294 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Classpath
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:45:57,295 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:45:57,310 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:45:57,325 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:45:57,336 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:57,338 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:57,341 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:45:57,352 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:57,360 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:57,363 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:45:57,377 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:57,383 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/Usuario/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:45:57,396 (main) INFO  [DataNucleus.Persistence] - Propiedad datanucleus.metadata.validate desconocida - vamos a ignorarla
05 abr 2016 - 15:45:57,396 (main) DEBUG [DataNucleus.Datastore] - Creating StoreManager for datastore
05 abr 2016 - 15:45:57,433 (main) DEBUG [DataNucleus.Connection] - Hemos creado tx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:45:57,433 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones transaccionales bajo el nombre "rdbms/tx"
05 abr 2016 - 15:45:57,433 (main) DEBUG [DataNucleus.Connection] - Registrado la factoria de connecciones nontransaccionales bajo el nombre "rdbms/nontx"
05 abr 2016 - 15:45:57,455 (main) DEBUG [DataNucleus.Connection] - Hemos creado nontx data source con pool tipo dbcp-builtin
05 abr 2016 - 15:45:57,644 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto
05 abr 2016 - 15:45:57,654 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BIT, sql-type=BIT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,654 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,655 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BooleanRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,655 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,655 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,656 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,656 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Byte (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,656 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,656 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Character (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,657 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,657 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Double (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,658 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=FLOAT, sql-type=FLOAT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.FloatRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,658 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DOUBLE, sql-type=DOUBLE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DoubleRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,658 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.RealRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,658 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,658 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,658 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Integer (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=INTEGER, sql-type=INT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Long (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=SMALLINT, sql-type=SMALLINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.SmallIntRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,659 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.Short (jdbc-type=TINYINT, sql-type=TINYINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TinyIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,660 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,660 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,660 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,660 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,660 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=CLOB, sql-type=CLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.ClobRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,661 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,662 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=LONGTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,662 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=MEDIUMTEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,662 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=LONGVARCHAR, sql-type=TEXT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,662 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=LONGBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,662 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=BLOB, sql-type=MEDIUMBLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,663 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NVarcharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,663 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NCharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,663 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=DECIMAL, sql-type=DECIMAL, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DecimalRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,663 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigDecimal (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,663 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.math.BigInteger (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,664 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,664 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,664 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,664 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,664 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Time (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.sql.Timestamp (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIMESTAMP, sql-type=TIMESTAMP, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimestampRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,665 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=DATE, sql-type=DATE, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.DateRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.util.Date (jdbc-type=TIME, sql-type=TIME, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.TimeRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.LongVarBinaryRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=BLOB, sql-type=BLOB, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BlobRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,666 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.Serializable (jdbc-type=VARBINARY, sql-type=VARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarBinaryRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,667 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java java.io.File (jdbc-type=LONGVARBINARY, sql-type=LONGVARBINARY, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BinaryStreamRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,667 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=BIGINT, sql-type=BIGINT, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping, default=true)
05 abr 2016 - 15:45:57,667 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=INTEGER, sql-type=INTEGER, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,667 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=NUMERIC, sql-type=NUMERIC, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.NumericRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,667 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=CHAR, sql-type=CHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.CharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,667 (main) DEBUG [DataNucleus.Datastore] - Soportando el tipo RDBMS de Java org.datanucleus.identity.DatastoreId (jdbc-type=VARCHAR, sql-type=VARCHAR, datastore-mapping-type=org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping, default=false)
05 abr 2016 - 15:45:57,675 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Float (jdbc-type=REAL, sql-type=REAL)
05 abr 2016 - 15:45:57,675 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NVARCHAR, sql-type=NVARCHAR)
05 abr 2016 - 15:45:57,676 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.String (jdbc-type=NCHAR, sql-type=NCHAR)
05 abr 2016 - 15:45:57,676 (main) DEBUG [DataNucleus.Datastore] - No Soportando el tipo RDBMS de Java java.lang.Boolean (jdbc-type=BOOLEAN, sql-type=BOOLEAN)
05 abr 2016 - 15:45:57,686 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`DELETEME1459863957683`.`UNUSED`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,688 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `DELETEME1459863957683`
05 abr 2016 - 15:45:57,690 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `DELETEME1459863957683`
(
    `UNUSED` INTEGER NOT NULL
) ENGINE=INNODB
05 abr 2016 - 15:45:57,724 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 34 ms
05 abr 2016 - 15:45:57,732 (main) DEBUG [DataNucleus.Datastore.Schema] - No era posible determinar el nombre del esquema por este DataStore
05 abr 2016 - 15:45:57,732 (main) DEBUG [DataNucleus.Datastore.Schema] - Borrar la tabla `DELETEME1459863957683`
05 abr 2016 - 15:45:57,732 (main) DEBUG [DataNucleus.Datastore.Schema] - DROP TABLE `DELETEME1459863957683`
05 abr 2016 - 15:45:57,743 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 11 ms
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - ======================= Datastore =========================
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - StoreManager : "rdbms" (org.datanucleus.store.rdbms.RDBMSStoreManager)
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Datastore : read-write
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Schema Control : AutoCreate(Tables,Columns,Constraints), Validate(None)
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Schema : NamingFactory=datanucleus2 identifierCase=null
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Query Languages : [JDOQL, JPQL, SQL, STOREDPROC]
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Queries : Timeout=0
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Datastore Adapter : org.datanucleus.store.rdbms.adapter.MySQLAdapter
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Datastore : name="MySQL" version="5.5.5-10.1.9-MariaDB"
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Datastore Driver : name="MySQL Connector Java" version="mysql-connector-java-5.1.28 ( Revision: alexander.soklakov@oracle.com-20131125092425-yvejy3xvci77ru3k )"
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Primary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Secondary Connection Factory : URL[jdbc:mysql://localhost/TraLaLa]
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Datastore Identifiers : factory="datanucleus2" case="UPPERCASE" catalog=TraLaLa
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Cases : lowercase "lowercase" "UPPERCASE" 
05 abr 2016 - 15:45:57,744 (main) DEBUG [DataNucleus.Datastore] - Supported Identifier Lengths (max) : Table=64 Column=64 Constraint=64 Index=64 Delimiter=`
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - Support for Identifiers in DDL : catalog=true schema=false
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - Datastore : checkTableViewExistence, rdbmsConstraintCreateMode=DataNucleus, initialiseColumnInfo=ALL
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - Support Statement Batching : yes (max-batch-size=50)
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - Queries : Results direction=forward, type=forward-only, concurrency=read-only
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - Java-Types : string-default-length=255
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - JDBC-Types : VARCHAR, LONGVARCHAR, BINARY, VARBINARY, LONGVARBINARY, BIGINT, TINYINT, BIT, CHAR, NUMERIC, DECIMAL, INTEGER, CLOB, SMALLINT, BLOB, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Datastore] - ===========================================================
05 abr 2016 - 15:45:57,745 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 15:45:57,746 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@2d3fcdbd [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@13805618, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 15:45:57,747 (main) DEBUG [DataNucleus.Datastore] - StoreManager now created
05 abr 2016 - 15:45:57,752 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:45:57,774 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:45:57,774 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:45:57,788 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:45:57,788 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.nio.ByteBuffer,java.lang.Double,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : java.util.Date,[Ljava.lang.Object;,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery) mapping-name=mysql, JDO-listener=true
05 abr 2016 - 15:45:57,789 (main) DEBUG [DataNucleus.MetaData] - Registering listener for metadata initialisation
05 abr 2016 - 15:45:57,793 (main) DEBUG [DataNucleus.Cache] - Cache de nivel 2 del tipo "soft" inicializada
05 abr 2016 - 15:45:57,794 (main) DEBUG [DataNucleus.Persistence] - Started pool of ExecutionContext (maxPool=20, reaperThread=false)
05 abr 2016 - 15:45:57,798 (main) DEBUG [DataNucleus.Persistence] - ================= NucleusContext ===============
05 abr 2016 - 15:45:57,798 (main) DEBUG [DataNucleus.Persistence] - DataNucleus Context : Versión: "4.0.0.m4" con JRE "1.8.0_73" en "Windows 10"
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - Persistence API : JDO
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - Plugin Registry : org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - ClassLoading : datanucleus
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - Persistence : pm-singlethreaded, nontransactional-read, nontransactional-write, reachability-at-commit, copy-on-attach, managed-relations(checked), deletion-policy=JDO2, serverTimeZone=Europe/Paris
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - AutoStart : mechanism=None, mode=Quiet
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - Transactions : type=RESOURCE_LOCAL, mode=datastore, isolation=read-committed
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - ValueGeneration : txn-isolation=read-committed connection=New
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - Cache : Level1 (soft), Level2 (soft, mode=UNSPECIFIED), QueryResults (soft), Collections/Maps 
05 abr 2016 - 15:45:57,799 (main) DEBUG [DataNucleus.Persistence] - ================================================
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - DataNucleus SchemaTool : Ficheros
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Artista.class
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Cancion.class
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Pago.class
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoConvencional.class
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\PagoVentajoso.class
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class
05 abr 2016 - 15:45:57,799 (main) INFO  [DataNucleus.SchemaTool] - >>  C:\Users\Usuario\git\TraLaLa\TraLaLa\bin\main\Usuario.class
05 abr 2016 - 15:45:57,800 (main) DEBUG [DataNucleus.SchemaTool] - Leyendo 7 ficheros (metadata/class) ...
05 abr 2016 - 15:45:57,821 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de los archivos de metadata "[]" ...
05 abr 2016 - 15:45:57,821 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:45:57,821 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Pago, main.Artista, main.Cancion, main.Usuario]" ...
05 abr 2016 - 15:45:57,823 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:45:57,823 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:57,823 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:45:57,824 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:45:57,824 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:45:57,824 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:45:57,824 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:45:57,825 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:45:57,825 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:45:57,825 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:45:57,825 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:45:57,826 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:45:57,857 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:57,859 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:45:57,860 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:45:57,861 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:57,866 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:57,871 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:45:57,872 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:45:57,873 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:45:57,873 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /META-INF/package-mysql.orm
05 abr 2016 - 15:45:57,873 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:45:57,874 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /package-mysql.orm
05 abr 2016 - 15:45:57,874 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/package-mysql.orm
05 abr 2016 - 15:45:57,874 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main-mysql.orm
05 abr 2016 - 15:45:57,874 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Reproduccion" en /main/Reproduccion-mysql.orm
05 abr 2016 - 15:45:57,874 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Reproduccion"
05 abr 2016 - 15:45:57,875 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,875 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,875 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,875 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,875 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,876 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:45:57,876 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /META-INF/package-mysql.orm
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /package-mysql.orm
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/package-mysql.orm
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main-mysql.orm
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Artista" en /main/Artista-mysql.orm
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Artista"
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,877 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,878 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:45:57,878 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /META-INF/package-mysql.orm
05 abr 2016 - 15:45:57,878 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /package-mysql.orm
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/package-mysql.orm
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main-mysql.orm
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Cancion" en /main/Cancion-mysql.orm
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Cancion"
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,879 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,880 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:45:57,880 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /META-INF/package-mysql.orm
05 abr 2016 - 15:45:57,880 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /WEB-INF/package-mysql.orm
05 abr 2016 - 15:45:57,880 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /package-mysql.orm
05 abr 2016 - 15:45:57,880 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/package-mysql.orm
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main-mysql.orm
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "orm" por la clase "main.Usuario" en /main/Usuario-mysql.orm
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "orm" por la clase "main.Usuario"
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,881 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:45:57,882 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:45:57,882 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,883 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,884 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,884 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:45:57,884 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:45:57,884 (main) DEBUG [DataNucleus.SchemaTool] - Hemos acabado de leer 7 ficheros (metadata/class)
05 abr 2016 - 15:45:57,887 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /META-INF/package.jdo
05 abr 2016 - 15:45:57,887 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:57,887 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /package.jdo
05 abr 2016 - 15:45:57,890 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/package.jdo
05 abr 2016 - 15:45:57,890 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org.jdo
05 abr 2016 - 15:45:57,890 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/package.jdo
05 abr 2016 - 15:45:57,891 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus.jdo
05 abr 2016 - 15:45:57,891 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity.jdo
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId" en /org/datanucleus/identity/StringId.jdo
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.StringId"
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.StringId" no tener Meta-Data
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /META-INF/package.jdo
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /WEB-INF/package.jdo
05 abr 2016 - 15:45:57,892 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /package.jdo
05 abr 2016 - 15:45:57,894 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/package.jdo
05 abr 2016 - 15:45:57,894 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org.jdo
05 abr 2016 - 15:45:57,894 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/package.jdo
05 abr 2016 - 15:45:57,895 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus.jdo
05 abr 2016 - 15:45:57,895 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/package.jdo
05 abr 2016 - 15:45:57,896 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity.jdo
05 abr 2016 - 15:45:57,896 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId" en /org/datanucleus/identity/IntId.jdo
05 abr 2016 - 15:45:57,896 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "org.datanucleus.identity.IntId"
05 abr 2016 - 15:45:57,896 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "org.datanucleus.identity.IntId" no tener Meta-Data
05 abr 2016 - 15:45:57,901 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Usuario [Tabla : `USUARIO`, Estrategia de heredar : new-table]
05 abr 2016 - 15:45:57,902 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NOMBREUSU`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,903 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.nombreUsu] -> Columnas [`USUARIO`.`NOMBREUSU`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,904 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Reproduccion [Tabla : `REPRODUCCION`, Estrategia de heredar : new-table]
05 abr 2016 - 15:45:57,904 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`REPRODUCCION_ID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,905 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Cancion [Tabla : `CANCION`, Estrategia de heredar : new-table]
05 abr 2016 - 15:45:57,905 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ID_CANCION`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,905 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.id_cancion] -> Columnas [`CANCION`.`ID_CANCION`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,905 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Clase : main.Artista [Tabla : `ARTISTA`, Estrategia de heredar : new-table]
05 abr 2016 - 15:45:57,905 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`ID_ARTISTA`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,906 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.id_artista] -> Columnas [`ARTISTA`.`ID_ARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,906 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `REPRODUCCION` va a manejar la persistencia de los campos de la clase main.Reproduccion (estrategia de heredar="new-table")
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`CANCION_ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.cancion] -> Columnas [`REPRODUCCION`.`CANCION_ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`FECHA_REP`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.fecha_rep] -> Columnas [`REPRODUCCION`.`FECHA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`HORA_REP`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.hora_rep] -> Columnas [`REPRODUCCION`.`HORA_REP`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.precio] -> Columnas [`REPRODUCCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Reproduccion.usuario] -> Columnas [`REPRODUCCION`.`USUARIO_NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,907 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `REPRODUCCION` ha sido inicializado
05 abr 2016 - 15:45:57,908 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `USUARIO` va a manejar la persistencia de los campos de la clase main.Usuario (estrategia de heredar="new-table")
05 abr 2016 - 15:45:57,908 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`CONTRASENYA_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,908 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.contrasenya_paypal] -> Columnas [`USUARIO`.`CONTRASENYA_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,912 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.historialRep [Tabla : `USUARIO_HISTORIALREP`]
05 abr 2016 - 15:45:57,912 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.historialRep] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`IMPORTEMENSUAL`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.importeMensual] -> Columnas [`USUARIO`.`IMPORTEMENSUAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaAmigos [Tabla : `USUARIO_LISTAAMIGOS`]
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaAmigos] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Usuario.listaReproduccion [Tabla : `USUARIO_LISTAREPRODUCCION`]
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:45:57,913 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`NUMTARJCRED`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.numTarjCred] -> Columnas [`USUARIO`.`NUMTARJCRED`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`USUARIO_PAYPAL`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.usuario_paypal] -> Columnas [`USUARIO`.`USUARIO_PAYPAL`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO`.`VENTAJOSO`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Usuario.ventajoso] -> Columnas [`USUARIO`.`VENTAJOSO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.BooleanMapping" (org.datanucleus.store.rdbms.mapping.datastore.BitRDBMSMapping)
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO` ha sido inicializado
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `CANCION` va a manejar la persistencia de los campos de la clase main.Cancion (estrategia de heredar="new-table")
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ALBUM`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,914 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.album] -> Columnas [`CANCION`.`ALBUM`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`ARTISTA_ID_ARTISTA_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.artista] -> Columnas [`CANCION`.`ARTISTA_ID_ARTISTA_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaReproduccion [Tabla : `CANCION_LISTAREPRODUCCION`]
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaReproduccion] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Persistence] - Va a manjejar la persistencia de Campo : main.Cancion.listaUsuario [Tabla : `CANCION_LISTAUSUARIO`]
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.listaUsuario] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`PRECIO`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.precio] -> Columnas [`CANCION`.`PRECIO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`TITULO`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Cancion.titulo] -> Columnas [`CANCION`.`TITULO`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,915 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION` ha sido inicializado
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - La tabla `ARTISTA` va a manejar la persistencia de los campos de la clase main.Artista (estrategia de heredar="new-table")
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.listaCanciones] -> Columnas [[none]] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.CollectionMapping" ()
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_ID_ARTISTA_OWN`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION`.`LISTACANCIONES_INTEGER_IDX`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`ARTISTA`.`NOMARTISTA`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - Campo [main.Artista.nomArtista] -> Columnas [`ARTISTA`.`NOMARTISTA`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.StringMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,916 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `ARTISTA` ha sido inicializado
05 abr 2016 - 15:45:57,918 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,918 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_HISTORIALREP`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.historialRep] -> Columnas [`USUARIO_HISTORIALREP`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_HISTORIALREP` ha sido inicializado
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`ID_CANCION_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,919 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,921 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaReproduccion] -> Columnas [`USUARIO_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,921 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`USUARIO_LISTAAMIGOS`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Usuario.listaAmigos] -> Columnas [`USUARIO_LISTAAMIGOS`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `USUARIO_LISTAAMIGOS` ha sido inicializado
05 abr 2016 - 15:45:57,922 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`NOMBREUSU_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.VarCharRDBMSMapping)
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAUSUARIO`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaUsuario] -> Columnas [`CANCION_LISTAUSUARIO`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAUSUARIO` ha sido inicializado
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`ID_CANCION_OID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,923 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,924 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`REPRODUCCION_ID_EID`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.PersistableMapping" (org.datanucleus.store.rdbms.mapping.datastore.BigIntRDBMSMapping)
05 abr 2016 - 15:45:57,924 (main) DEBUG [DataNucleus.Datastore.Schema] - La columna "`CANCION_LISTAREPRODUCCION`.`IDX`" añadió a la representación de la table.
05 abr 2016 - 15:45:57,924 (main) DEBUG [DataNucleus.Datastore] - Campo [main.Cancion.listaReproduccion] -> Columnas [`CANCION_LISTAREPRODUCCION`.`IDX`] usando mapping del tipo "org.datanucleus.store.rdbms.mapping.java.IntegerMapping" (org.datanucleus.store.rdbms.mapping.datastore.IntegerRDBMSMapping)
05 abr 2016 - 15:45:57,924 (main) DEBUG [DataNucleus.Datastore.Schema] - Table/View `CANCION_LISTAREPRODUCCION` ha sido inicializado
05 abr 2016 - 15:45:57,926 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=null, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" abierto con isolación "serializable" y auto-commit=false
05 abr 2016 - 15:45:57,926 (main) DEBUG [DataNucleus.Datastore.Schema] - Empezando transaccion del esquema con conneccion "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9" y isolacion "serializable"
05 abr 2016 - 15:45:57,927 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `REPRODUCCION` returned no table
05 abr 2016 - 15:45:57,927 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `REPRODUCCION`
05 abr 2016 - 15:45:57,928 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `REPRODUCCION`
(
    `REPRODUCCION_ID` BIGINT NOT NULL AUTO_INCREMENT,
    `CANCION_ID_CANCION_OID` INTEGER NULL,
    `FECHA_REP` INTEGER NOT NULL,
    `HORA_REP` INTEGER NOT NULL,
    `PRECIO` INTEGER NOT NULL,
    `USUARIO_NOMBREUSU_OID` VARCHAR(255) BINARY NULL,
    CONSTRAINT `REPRODUCCION_PK` PRIMARY KEY (`REPRODUCCION_ID`)
) ENGINE=INNODB
05 abr 2016 - 15:45:57,956 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:45:57,960 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO` returned no table
05 abr 2016 - 15:45:57,960 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO`
05 abr 2016 - 15:45:57,960 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO`
(
    `NOMBREUSU` VARCHAR(255) BINARY NOT NULL,
    `CONTRASENYA_PAYPAL` VARCHAR(255) BINARY NULL,
    `IMPORTEMENSUAL` INTEGER NOT NULL,
    `NUMTARJCRED` INTEGER NOT NULL,
    `USUARIO_PAYPAL` VARCHAR(255) BINARY NULL,
    `VENTAJOSO` BIT NOT NULL,
    CONSTRAINT `USUARIO_PK` PRIMARY KEY (`NOMBREUSU`)
) ENGINE=INNODB
05 abr 2016 - 15:45:57,994 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 34 ms
05 abr 2016 - 15:45:57,998 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION` returned no table
05 abr 2016 - 15:45:57,998 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `CANCION`
05 abr 2016 - 15:45:57,999 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `CANCION`
(
    `ID_CANCION` INTEGER NOT NULL,
    `ALBUM` VARCHAR(255) BINARY NULL,
    `ARTISTA_ID_ARTISTA_OID` INTEGER NULL,
    `PRECIO` INTEGER NOT NULL,
    `TITULO` VARCHAR(255) BINARY NULL,
    `LISTACANCIONES_ID_ARTISTA_OWN` INTEGER NULL,
    `LISTACANCIONES_INTEGER_IDX` INTEGER NULL,
    CONSTRAINT `CANCION_PK` PRIMARY KEY (`ID_CANCION`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,032 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 33 ms
05 abr 2016 - 15:45:58,037 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `ARTISTA` returned no table
05 abr 2016 - 15:45:58,037 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `ARTISTA`
05 abr 2016 - 15:45:58,037 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `ARTISTA`
(
    `ID_ARTISTA` INTEGER NOT NULL,
    `NOMARTISTA` VARCHAR(255) BINARY NULL,
    CONSTRAINT `ARTISTA_PK` PRIMARY KEY (`ID_ARTISTA`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,069 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 32 ms
05 abr 2016 - 15:45:58,073 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_HISTORIALREP` returned no table
05 abr 2016 - 15:45:58,074 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO_HISTORIALREP`
05 abr 2016 - 15:45:58,074 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO_HISTORIALREP`
(
    `NOMBREUSU_OID` VARCHAR(255) BINARY NOT NULL,
    `REPRODUCCION_ID_EID` BIGINT NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `USUARIO_HISTORIALREP_PK` PRIMARY KEY (`NOMBREUSU_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,102 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:45:58,106 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAREPRODUCCION` returned no table
05 abr 2016 - 15:45:58,106 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO_LISTAREPRODUCCION`
05 abr 2016 - 15:45:58,107 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO_LISTAREPRODUCCION`
(
    `NOMBREUSU_OID` VARCHAR(255) BINARY NOT NULL,
    `ID_CANCION_EID` INTEGER NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `USUARIO_LISTAREPRODUCCION_PK` PRIMARY KEY (`NOMBREUSU_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,137 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 30 ms
05 abr 2016 - 15:45:58,142 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `USUARIO_LISTAAMIGOS` returned no table
05 abr 2016 - 15:45:58,142 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `USUARIO_LISTAAMIGOS`
05 abr 2016 - 15:45:58,142 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `USUARIO_LISTAAMIGOS`
(
    `NOMBREUSU_OID` VARCHAR(255) BINARY NOT NULL,
    `NOMBREUSU_EID` VARCHAR(255) BINARY NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `USUARIO_LISTAAMIGOS_PK` PRIMARY KEY (`NOMBREUSU_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,174 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 32 ms
05 abr 2016 - 15:45:58,179 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAUSUARIO` returned no table
05 abr 2016 - 15:45:58,179 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `CANCION_LISTAUSUARIO`
05 abr 2016 - 15:45:58,180 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `CANCION_LISTAUSUARIO`
(
    `ID_CANCION_OID` INTEGER NOT NULL,
    `NOMBREUSU_EID` VARCHAR(255) BINARY NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `CANCION_LISTAUSUARIO_PK` PRIMARY KEY (`ID_CANCION_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,227 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 47 ms
05 abr 2016 - 15:45:58,234 (main) DEBUG [DataNucleus.Datastore.Schema] - Check of existence of `CANCION_LISTAREPRODUCCION` returned no table
05 abr 2016 - 15:45:58,234 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear la tabla `CANCION_LISTAREPRODUCCION`
05 abr 2016 - 15:45:58,234 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE TABLE `CANCION_LISTAREPRODUCCION`
(
    `ID_CANCION_OID` INTEGER NOT NULL,
    `REPRODUCCION_ID_EID` BIGINT NULL,
    `IDX` INTEGER NOT NULL,
    CONSTRAINT `CANCION_LISTAREPRODUCCION_PK` PRIMARY KEY (`ID_CANCION_OID`,`IDX`)
) ENGINE=INNODB
05 abr 2016 - 15:45:58,269 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 34 ms
05 abr 2016 - 15:45:58,279 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "REPRODUCCION_N50" en catalogo "" equema ""
05 abr 2016 - 15:45:58,279 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `REPRODUCCION_N50` ON `REPRODUCCION` (`CANCION_ID_CANCION_OID`)
05 abr 2016 - 15:45:58,329 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 50 ms
05 abr 2016 - 15:45:58,330 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "REPRODUCCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:58,331 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `REPRODUCCION_N49` ON `REPRODUCCION` (`USUARIO_NOMBREUSU_OID`)
05 abr 2016 - 15:45:58,364 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 33 ms
05 abr 2016 - 15:45:58,367 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "REPRODUCCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:45:58,368 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `REPRODUCCION` ADD CONSTRAINT `REPRODUCCION_FK1` FOREIGN KEY (`USUARIO_NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:45:58,469 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 101 ms
05 abr 2016 - 15:45:58,469 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "REPRODUCCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:58,470 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `REPRODUCCION` ADD CONSTRAINT `REPRODUCCION_FK2` FOREIGN KEY (`CANCION_ID_CANCION_OID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:45:58,555 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 85 ms
05 abr 2016 - 15:45:58,557 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:58,557 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_N49` ON `CANCION` (`ARTISTA_ID_ARTISTA_OID`)
05 abr 2016 - 15:45:58,590 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 33 ms
05 abr 2016 - 15:45:58,591 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:45:58,591 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION` ADD CONSTRAINT `CANCION_FK1` FOREIGN KEY (`ARTISTA_ID_ARTISTA_OID`) REFERENCES `ARTISTA` (`ID_ARTISTA`) 
05 abr 2016 - 15:45:58,675 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 84 ms
05 abr 2016 - 15:45:58,675 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:58,675 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION` ADD CONSTRAINT `CANCION_FK2` FOREIGN KEY (`LISTACANCIONES_ID_ARTISTA_OWN`) REFERENCES `ARTISTA` (`ID_ARTISTA`) 
05 abr 2016 - 15:45:58,766 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 91 ms
05 abr 2016 - 15:45:58,767 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_HISTORIALREP_N50" en catalogo "" equema ""
05 abr 2016 - 15:45:58,767 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_HISTORIALREP_N50` ON `USUARIO_HISTORIALREP` (`REPRODUCCION_ID_EID`)
05 abr 2016 - 15:45:58,798 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 30 ms
05 abr 2016 - 15:45:58,798 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_HISTORIALREP_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:58,798 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_HISTORIALREP_N49` ON `USUARIO_HISTORIALREP` (`NOMBREUSU_OID`)
05 abr 2016 - 15:45:58,826 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:45:58,827 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_HISTORIALREP_FK1" en catalogo "" equema ""
05 abr 2016 - 15:45:58,827 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_HISTORIALREP` ADD CONSTRAINT `USUARIO_HISTORIALREP_FK1` FOREIGN KEY (`NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:45:58,901 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 74 ms
05 abr 2016 - 15:45:58,901 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_HISTORIALREP_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:58,901 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_HISTORIALREP` ADD CONSTRAINT `USUARIO_HISTORIALREP_FK2` FOREIGN KEY (`REPRODUCCION_ID_EID`) REFERENCES `REPRODUCCION` (`REPRODUCCION_ID`) 
05 abr 2016 - 15:45:58,970 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 69 ms
05 abr 2016 - 15:45:58,971 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAREPRODUCCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:58,971 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAREPRODUCCION_N49` ON `USUARIO_LISTAREPRODUCCION` (`ID_CANCION_EID`)
05 abr 2016 - 15:45:58,998 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 27 ms
05 abr 2016 - 15:45:58,999 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAREPRODUCCION_N50" en catalogo "" equema ""
05 abr 2016 - 15:45:58,999 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAREPRODUCCION_N50` ON `USUARIO_LISTAREPRODUCCION` (`NOMBREUSU_OID`)
05 abr 2016 - 15:45:59,053 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 54 ms
05 abr 2016 - 15:45:59,054 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAREPRODUCCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:45:59,054 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAREPRODUCCION` ADD CONSTRAINT `USUARIO_LISTAREPRODUCCION_FK1` FOREIGN KEY (`NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:45:59,313 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 259 ms
05 abr 2016 - 15:45:59,315 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAREPRODUCCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:59,315 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAREPRODUCCION` ADD CONSTRAINT `USUARIO_LISTAREPRODUCCION_FK2` FOREIGN KEY (`ID_CANCION_EID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:45:59,404 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 89 ms
05 abr 2016 - 15:45:59,405 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAAMIGOS_N50" en catalogo "" equema ""
05 abr 2016 - 15:45:59,405 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAAMIGOS_N50` ON `USUARIO_LISTAAMIGOS` (`NOMBREUSU_EID`)
05 abr 2016 - 15:45:59,437 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 32 ms
05 abr 2016 - 15:45:59,438 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "USUARIO_LISTAAMIGOS_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:59,438 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `USUARIO_LISTAAMIGOS_N49` ON `USUARIO_LISTAAMIGOS` (`NOMBREUSU_OID`)
05 abr 2016 - 15:45:59,466 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:45:59,467 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAAMIGOS_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:59,467 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAAMIGOS` ADD CONSTRAINT `USUARIO_LISTAAMIGOS_FK2` FOREIGN KEY (`NOMBREUSU_EID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:45:59,558 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 91 ms
05 abr 2016 - 15:45:59,558 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "USUARIO_LISTAAMIGOS_FK1" en catalogo "" equema ""
05 abr 2016 - 15:45:59,559 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `USUARIO_LISTAAMIGOS` ADD CONSTRAINT `USUARIO_LISTAAMIGOS_FK1` FOREIGN KEY (`NOMBREUSU_OID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:45:59,653 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 94 ms
05 abr 2016 - 15:45:59,654 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAUSUARIO_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:59,654 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAUSUARIO_N49` ON `CANCION_LISTAUSUARIO` (`ID_CANCION_OID`)
05 abr 2016 - 15:45:59,694 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 40 ms
05 abr 2016 - 15:45:59,696 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAUSUARIO_N50" en catalogo "" equema ""
05 abr 2016 - 15:45:59,696 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAUSUARIO_N50` ON `CANCION_LISTAUSUARIO` (`NOMBREUSU_EID`)
05 abr 2016 - 15:45:59,727 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 31 ms
05 abr 2016 - 15:45:59,728 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAUSUARIO_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:59,728 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAUSUARIO` ADD CONSTRAINT `CANCION_LISTAUSUARIO_FK2` FOREIGN KEY (`NOMBREUSU_EID`) REFERENCES `USUARIO` (`NOMBREUSU`) 
05 abr 2016 - 15:45:59,814 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 86 ms
05 abr 2016 - 15:45:59,815 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAUSUARIO_FK1" en catalogo "" equema ""
05 abr 2016 - 15:45:59,815 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAUSUARIO` ADD CONSTRAINT `CANCION_LISTAUSUARIO_FK1` FOREIGN KEY (`ID_CANCION_OID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:45:59,917 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 102 ms
05 abr 2016 - 15:45:59,918 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAREPRODUCCION_N50" en catalogo "" equema ""
05 abr 2016 - 15:45:59,918 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAREPRODUCCION_N50` ON `CANCION_LISTAREPRODUCCION` (`ID_CANCION_OID`)
05 abr 2016 - 15:45:59,948 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 30 ms
05 abr 2016 - 15:45:59,948 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el indice "CANCION_LISTAREPRODUCCION_N49" en catalogo "" equema ""
05 abr 2016 - 15:45:59,948 (main) DEBUG [DataNucleus.Datastore.Schema] - CREATE INDEX `CANCION_LISTAREPRODUCCION_N49` ON `CANCION_LISTAREPRODUCCION` (`REPRODUCCION_ID_EID`)
05 abr 2016 - 15:45:59,976 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 28 ms
05 abr 2016 - 15:45:59,977 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAREPRODUCCION_FK2" en catalogo "" equema ""
05 abr 2016 - 15:45:59,977 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAREPRODUCCION` ADD CONSTRAINT `CANCION_LISTAREPRODUCCION_FK2` FOREIGN KEY (`REPRODUCCION_ID_EID`) REFERENCES `REPRODUCCION` (`REPRODUCCION_ID`) 
05 abr 2016 - 15:46:00,264 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 287 ms
05 abr 2016 - 15:46:00,264 (main) DEBUG [DataNucleus.Datastore.Schema] - Crear el constreñimiento del foreign key "CANCION_LISTAREPRODUCCION_FK1" en catalogo "" equema ""
05 abr 2016 - 15:46:00,264 (main) DEBUG [DataNucleus.Datastore.Schema] - ALTER TABLE `CANCION_LISTAREPRODUCCION` ADD CONSTRAINT `CANCION_LISTAREPRODUCCION_FK1` FOREIGN KEY (`ID_CANCION_OID`) REFERENCES `CANCION` (`ID_CANCION`) 
05 abr 2016 - 15:46:00,340 (main) DEBUG [DataNucleus.Datastore.Schema] - Tiempo de cumplir = 76 ms
05 abr 2016 - 15:46:00,340 (main) DEBUG [DataNucleus.Datastore.Schema] - Committing transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9"
05 abr 2016 - 15:46:00,341 (main) DEBUG [DataNucleus.Datastore.Schema] - Cerrando la conneccion de la transaccion del esquema "org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9"
05 abr 2016 - 15:46:00,341 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" va a cometer
05 abr 2016 - 15:46:00,342 (main) DEBUG [DataNucleus.Connection] - ManagedConnection(non-enlisted) "org.datanucleus.store.rdbms.ConnectionFactoryImpl$ManagedConnectionImpl@1e730495 [conn=org.datanucleus.store.rdbms.datasource.dbcp.PoolingDataSource$PoolGuardConnectionWrapper@7d3a22a9, commitOnRelease=true, closeOnRelease=true, closeOnTxnEnd=true]" cerrado
05 abr 2016 - 15:46:00,343 (main) INFO  [DataNucleus.SchemaTool] - SchemaTool ha terminado con exito
05 abr 2016 - 15:46:00,343 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones tx
05 abr 2016 - 15:46:00,343 (main) DEBUG [DataNucleus.Connection] - Cerrando pool de connecciones nontx
05 abr 2016 - 15:46:00,343 (main) DEBUG [DataNucleus.Persistence] - Desmanejando la persistencia de todas las clases
05 abr 2016 - 15:57:21,148 (main) DEBUG [DataNucleus.General] - Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
05 abr 2016 - 15:57:21,164 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.api.jdo version 4.0.0.m4 at URL file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar.
05 abr 2016 - 15:57:21,174 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:57:21,176 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-api-jdo-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:57:21,178 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus version 4.0.0.m4 at URL file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar.
05 abr 2016 - 15:57:21,187 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:57:21,193 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-core-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:57:21,196 (main) DEBUG [DataNucleus.General] - Registering bundle org.datanucleus.store.rdbms version 4.0.0.m4 at URL file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar.
05 abr 2016 - 15:57:21,207 (main) DEBUG [DataNucleus.General] - Loading extension points from plug-in file jar:file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:57:21,214 (main) DEBUG [DataNucleus.General] - Loading extensions from plug-in file jar:file:/C:/Users/axi_e/git/TraLaLa/TraLaLa/lib/datanucleus-rdbms-4.0.0-m4.jar!/plugin.xml.
05 abr 2016 - 15:57:21,236 (main) DEBUG [DataNucleus.Persistence] - Tipos de Java inicializando ...
05 abr 2016 - 15:57:21,262 (main) DEBUG [DataNucleus.Persistence] - Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
05 abr 2016 - 15:57:21,262 (main) DEBUG [DataNucleus.Persistence] - Inicializando TypeConverters ...
05 abr 2016 - 15:57:21,276 (main) DEBUG [DataNucleus.Persistence] - TypeConverters listo
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for char[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for double[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for float[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for int[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for long[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for short[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.awt.Color to : java.lang.String,int[]
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.io.Serializable to : byte[],java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
05 abr 2016 - 15:57:21,277 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Character to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Class to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Integer to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.Long to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.math.BigInteger to : java.lang.Long,java.nio.ByteBuffer,java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URI to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.net.URL to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Date to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Time to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.sql.Timestamp to : java.lang.Long,java.util.Date,java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.BitSet to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Calendar to : [Ljava.lang.Object;,java.util.Date,java.lang.String,java.sql.Timestamp
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Currency to : java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Date to : java.lang.Long,java.lang.String
05 abr 2016 - 15:57:21,278 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.Locale to : java.lang.String
05 abr 2016 - 15:57:21,279 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.TimeZone to : java.lang.String
05 abr 2016 - 15:57:21,279 (main) DEBUG [DataNucleus.Persistence] - TypeConverter(s) available for java.util.UUID to : java.lang.String
05 abr 2016 - 15:57:21,280 (main) DEBUG [DataNucleus.MetaData] - MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
05 abr 2016 - 15:57:21,281 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer (versión 4.0.0.m4) para el API "JDO" utilisando el JRE "{2}"
05 abr 2016 - 15:57:21,281 (main) DEBUG [DataNucleus.Enhancer] - DataNucleus Enhancer : Classpath
05 abr 2016 - 15:57:21,281 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\lib\datanucleus-api-jdo-4.0.0-m4.jar
05 abr 2016 - 15:57:21,281 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\lib\datanucleus-core-4.0.0-m4.jar
05 abr 2016 - 15:57:21,281 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\lib\datanucleus-rdbms-4.0.0-m4.jar
05 abr 2016 - 15:57:21,281 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\lib\jdo-api-3.1-rc1.jar
05 abr 2016 - 15:57:21,281 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\lib\log4j-1.2.17.jar
05 abr 2016 - 15:57:21,282 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\lib\mysql-connector-java-5.1.28.jar
05 abr 2016 - 15:57:21,282 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\bin
05 abr 2016 - 15:57:21,282 (main) DEBUG [DataNucleus.Enhancer] - >>  C:\Users\axi_e\git\TraLaLa\TraLaLa\resources
05 abr 2016 - 15:57:21,282 (main) DEBUG [DataNucleus.Enhancer] - Enhancing classes
05 abr 2016 - 15:57:21,315 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata de las clases "[main.Artista, main.Cancion, main.Pago, main.PagoConvencional, main.PagoVentajoso, main.Reproduccion, main.Usuario]" ...
05 abr 2016 - 15:57:21,354 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:57:21,359 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:57:21,364 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /META-INF/package.jdo
05 abr 2016 - 15:57:21,365 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /WEB-INF/package.jdo
05 abr 2016 - 15:57:21,365 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /package.jdo
05 abr 2016 - 15:57:21,365 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/package.jdo
05 abr 2016 - 15:57:21,365 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main.jdo
05 abr 2016 - 15:57:21,366 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.Pago" en /main/Pago.jdo
05 abr 2016 - 15:57:21,366 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.Pago"
05 abr 2016 - 15:57:21,366 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.Pago" no tener Meta-Data
05 abr 2016 - 15:57:21,366 (main) DEBUG [DataNucleus.MetaData] - La clase "main.Pago" no tiene MetaData o annotaciones.
05 abr 2016 - 15:57:21,366 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /META-INF/package.jdo
05 abr 2016 - 15:57:21,366 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /WEB-INF/package.jdo
05 abr 2016 - 15:57:21,367 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /package.jdo
05 abr 2016 - 15:57:21,367 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/package.jdo
05 abr 2016 - 15:57:21,367 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main.jdo
05 abr 2016 - 15:57:21,367 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoConvencional" en /main/PagoConvencional.jdo
05 abr 2016 - 15:57:21,367 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoConvencional"
05 abr 2016 - 15:57:21,367 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoConvencional" no tener Meta-Data
05 abr 2016 - 15:57:21,368 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoConvencional" no tiene MetaData o annotaciones.
05 abr 2016 - 15:57:21,368 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /META-INF/package.jdo
05 abr 2016 - 15:57:21,368 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /WEB-INF/package.jdo
05 abr 2016 - 15:57:21,368 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /package.jdo
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/package.jdo
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main.jdo
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - No encontramos el MetaData del tipo "jdo" por la clase "main.PagoVentajoso" en /main/PagoVentajoso.jdo
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - No hemos encontrado el MetaData del tipo "jdo" por la clase "main.PagoVentajoso"
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - Registrando la clase "main.PagoVentajoso" no tener Meta-Data
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - La clase "main.PagoVentajoso" no tiene MetaData o annotaciones.
05 abr 2016 - 15:57:21,369 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:57:21,370 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" tiene anotaciones de JDO y vamos a usarlas.
05 abr 2016 - 15:57:21,370 (main) DEBUG [DataNucleus.MetaData] - Populación del MetaData ...
05 abr 2016 - 15:57:21,371 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Populando Meta-Data
05 abr 2016 - 15:57:21,371 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "nomArtista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,371 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" campo "listaCanciones" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Populando Meta-Data
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "titulo" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "album" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" campo "artista" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Populando Meta-Data
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "fecha_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "hora_rep" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "usuario" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,373 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "cancion" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" campo "precio" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Populando Meta-Data
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "usuario_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "contrasenya_paypal" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "numTarjCred" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "ventajoso" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" campo "importeMensual" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
05 abr 2016 - 15:57:21,374 (main) DEBUG [DataNucleus.MetaData] - Inicialisación del MetaData ...
05 abr 2016 - 15:57:21,375 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Artista" : Inicializando Meta-Data
05 abr 2016 - 15:57:21,376 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Cancion" : Inicializando Meta-Data
05 abr 2016 - 15:57:21,376 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Reproduccion" : Inicializando Meta-Data
05 abr 2016 - 15:57:21,376 (main) DEBUG [DataNucleus.MetaData] - Clase "main.Usuario" : Inicializando Meta-Data
05 abr 2016 - 15:57:21,377 (main) DEBUG [DataNucleus.MetaData] - MetaData Management : Carga de Metadata ya ha terminado
05 abr 2016 - 15:57:21,379 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" empezando ...
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,391 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,392 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:57:21,393 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Artista" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:57:21,398 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.listaCanciones"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.id_artista"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.<init> : ignorando enhance de set del campo "main.Artista.nomArtista"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnGetid_artista()"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setId_artista, cambiando el uso del campo "main.Artista.id_artista" para utilisar "dnSetid_artista()"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnGetnomArtista()"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setNomArtista, cambiando el uso del campo "main.Artista.nomArtista" para utilisar "dnSetnomArtista()"
05 abr 2016 - 15:57:21,401 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.getListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnGetlistaCanciones()"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Artista.setListaCanciones, cambiando el uso del campo "main.Artista.listaCanciones" para utilisar "dnSetlistaCanciones()"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:57:21,402 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:57:21,403 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:57:21,403 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Artista()"
05 abr 2016 - 15:57:21,404 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,404 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,404 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,404 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,404 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:57:21,404 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:57:21,405 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:57:21,405 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:57:21,405 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:57:21,405 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:57:21,405 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:57:21,405 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:57:21,406 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:57:21,407 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Artista obj, int index)"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:57:21,408 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:57:21,409 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:57:21,409 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_artista(class main.Artista objPC)"
05 abr 2016 - 15:57:21,409 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_artista(class main.Artista objPC, int val)"
05 abr 2016 - 15:57:21,409 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaCanciones(class main.Artista objPC)"
05 abr 2016 - 15:57:21,409 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaCanciones(class main.Artista objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:57:21,410 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnomArtista(class main.Artista objPC)"
05 abr 2016 - 15:57:21,410 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnomArtista(class main.Artista objPC, class java.lang.String val)"
05 abr 2016 - 15:57:21,410 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\axi_e\git\TraLaLa\TraLaLa\bin\main\Artista.class" con definicion enhanced
05 abr 2016 - 15:57:21,411 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Artista" ha terminado
05 abr 2016 - 15:57:21,411 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" empezando ...
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:57:21,412 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,413 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,414 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,414 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:57:21,414 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:57:21,414 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Cancion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:57:21,414 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:57:21,414 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaUsuario"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.listaReproduccion"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.titulo"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.id_cancion"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.album"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.precio"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.<init> : ignorando enhance de set del campo "main.Cancion.artista"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnGetartista()"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setArtista, cambiando el uso del campo "main.Cancion.artista" para utilisar "dnSetartista()"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnGetlistaUsuario()"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaUsuario, cambiando el uso del campo "main.Cancion.listaUsuario" para utilisar "dnSetlistaUsuario()"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:57:21,415 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setListaReproduccion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnGettitulo()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setTitulo, cambiando el uso del campo "main.Cancion.titulo" para utilisar "dnSettitulo()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnGetid_cancion()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setId_cancion, cambiando el uso del campo "main.Cancion.id_cancion" para utilisar "dnSetid_cancion()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnGetalbum()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setAlbum, cambiando el uso del campo "main.Cancion.album" para utilisar "dnSetalbum()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnGetprecio()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.setPrecio, cambiando el uso del campo "main.Cancion.precio" para utilisar "dnSetprecio()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.getReproduccionesCancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Cancion.anyadirRepACancion, cambiando el uso del campo "main.Cancion.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:57:21,416 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Cancion()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:57:21,417 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:57:21,418 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Cancion obj, int index)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetalbum(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetalbum(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Artista dnGetartista(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetartista(class main.Cancion objPC, class main.Artista val)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetid_cancion(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,419 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetid_cancion(class main.Cancion objPC, int val)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaUsuario(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaUsuario(class main.Cancion objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Cancion objPC, int val)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGettitulo(class main.Cancion objPC)"
05 abr 2016 - 15:57:21,420 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSettitulo(class main.Cancion objPC, class java.lang.String val)"
05 abr 2016 - 15:57:21,420 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\axi_e\git\TraLaLa\TraLaLa\bin\main\Cancion.class" con definicion enhanced
05 abr 2016 - 15:57:21,421 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Cancion" ha terminado
05 abr 2016 - 15:57:21,421 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" empezando ...
05 abr 2016 - 15:57:21,421 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:57:21,422 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Reproduccion" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.fecha_rep"
05 abr 2016 - 15:57:21,423 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.hora_rep"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.usuario"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.<init> : ignorando enhance de set del campo "main.Reproduccion.cancion"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnGetusuario()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setUsuario, cambiando el uso del campo "main.Reproduccion.usuario" para utilisar "dnSetusuario()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnGetcancion()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setCancion, cambiando el uso del campo "main.Reproduccion.cancion" para utilisar "dnSetcancion()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnGetfecha_rep()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setFecha_rep, cambiando el uso del campo "main.Reproduccion.fecha_rep" para utilisar "dnSetfecha_rep()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.getHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnGethora_rep()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Reproduccion.setHora_rep, cambiando el uso del campo "main.Reproduccion.hora_rep" para utilisar "dnSethora_rep()"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:57:21,424 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Reproduccion()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:57:21,425 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Reproduccion obj, int index)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:57:21,426 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Cancion dnGetcancion(class main.Reproduccion objPC)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcancion(class main.Reproduccion objPC, class main.Cancion val)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetfecha_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetfecha_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGethora_rep(class main.Reproduccion objPC)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethora_rep(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetprecio(class main.Reproduccion objPC)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetprecio(class main.Reproduccion objPC, int val)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "main.Usuario dnGetusuario(class main.Reproduccion objPC)"
05 abr 2016 - 15:57:21,427 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario(class main.Reproduccion objPC, class main.Usuario val)"
05 abr 2016 - 15:57:21,427 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\axi_e\git\TraLaLa\TraLaLa\bin\main\Reproduccion.class" con definicion enhanced
05 abr 2016 - 15:57:21,428 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Reproduccion" ha terminado
05 abr 2016 - 15:57:21,428 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" empezando ...
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no implementa el interfaz "org.datanucleus.enhancer.Persistable"!
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnStateManager" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFlags" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldTypes" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldNames" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnFieldFlags" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el campo "dnPersistableSuperclass" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceField" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsTransactional" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewInstance" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnSuperClone" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideFields" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "___dn$loadClass" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDirty" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceStateManager" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFlags" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDetached" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnMakeDirty" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsDeleted" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnProvideField" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnPreSerialize" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetObjectId" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetVersion" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsNew" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyField" pero lo necesita
05 abr 2016 - 15:57:21,429 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnGetExecutionContext" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnCopyFields" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnIsPersistent" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "dnReplaceFields" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - La clase "main.Usuario" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - Agregando el interfaz: org.datanucleus.enhancer.Persistable
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaReproduccion"
05 abr 2016 - 15:57:21,430 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.historialRep"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.listaAmigos"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.nombreUsu"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.usuario_paypal"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.contrasenya_paypal"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.numTarjCred"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.<init> : ignorando enhance de set del campo "main.Usuario.ventajoso"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnGetnombreUsu()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNombreUsu, cambiando el uso del campo "main.Usuario.nombreUsu" para utilisar "dnSetnombreUsu()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnGetusuario_paypal()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setUsuario_paypal, cambiando el uso del campo "main.Usuario.usuario_paypal" para utilisar "dnSetusuario_paypal()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnGetcontrasenya_paypal()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setContrasenya_paypal, cambiando el uso del campo "main.Usuario.contrasenya_paypal" para utilisar "dnSetcontrasenya_paypal()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnGetnumTarjCred()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setNumTarjCred, cambiando el uso del campo "main.Usuario.numTarjCred" para utilisar "dnSetnumTarjCred()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnGetventajoso()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setVentajoso, cambiando el uso del campo "main.Usuario.ventajoso" para utilisar "dnSetventajoso()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.importeMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnGetimporteMensual()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setimporteMensual, cambiando el uso del campo "main.Usuario.importeMensual" para utilisar "dnSetimporteMensual()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.calculoNumAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:57:21,431 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaReproduccion, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnSetlistaReproduccion()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setHistorialRep, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnSethistorialRep()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.getListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.setListaAmigos, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnSetlistaAmigos()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirCancionALista, cambiando el uso del campo "main.Usuario.listaReproduccion" para utilisar "dnGetlistaReproduccion()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirAmigo, cambiando el uso del campo "main.Usuario.listaAmigos" para utilisar "dnGetlistaAmigos()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Enhancing metodo original main.Usuario.anyadirRepAUsuario, cambiando el uso del campo "main.Usuario.historialRep" para utilisar "dnGethistorialRep()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "org.datanucleus.state.StateManager dnStateManager"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "byte dnFlags"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[B dnFieldFlags"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "java.lang.Class dnPersistableSuperclass"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "[Ljava.lang.String; dnFieldNames"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el campo "int dnInheritedFieldCount"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void <clinit>()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el constructor "main.Usuario()"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldConsumer fc, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsFromObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,432 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(class java.lang.Object oid)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyKeyFieldsToObjectId(interface org.datanucleus.enhancer.Persistable$ObjectIdFieldSupplier fs, class java.lang.Object oid)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetObjectId()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetVersion()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnPreSerialize()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.ExecutionContext dnGetExecutionContext()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDeleted()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDirty()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsNew()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsPersistent()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsTransactional()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnMakeDirty(class java.lang.String fieldName)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnNewObjectIdInstance(class java.lang.Object key)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideFields(class [I indices)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFields(class [I indices)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceFlags()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceStateManager(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnIsDetached()"
05 abr 2016 - 15:57:21,433 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "org.datanucleus.enhancer.Persistable dnNewInstance(interface org.datanucleus.state.StateManager sm, class java.lang.Object obj)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnReplaceField(int index)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnProvideField(int index)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyField(class main.Usuario obj, int index)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnCopyFields(class java.lang.Object obj, class [I indices)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "[B __dnFieldFlagsInit()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int __dnGetInheritedFieldCount()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetManagedFieldCount()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Class ___dn$loadClass(class java.lang.String className)"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.Object dnSuperClone()"
05 abr 2016 - 15:57:21,434 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetcontrasenya_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetcontrasenya_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGethistorialRep(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSethistorialRep(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetimporteMensual(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetimporteMensual(class main.Usuario objPC, int val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaAmigos(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaAmigos(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.util.ArrayList dnGetlistaReproduccion(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetlistaReproduccion(class main.Usuario objPC, class java.util.ArrayList val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetnombreUsu(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnombreUsu(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "int dnGetnumTarjCred(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetnumTarjCred(class main.Usuario objPC, int val)"
05 abr 2016 - 15:57:21,435 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "java.lang.String dnGetusuario_paypal(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,436 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetusuario_paypal(class main.Usuario objPC, class java.lang.String val)"
05 abr 2016 - 15:57:21,436 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "boolean dnGetventajoso(class main.Usuario objPC)"
05 abr 2016 - 15:57:21,436 (main) DEBUG [DataNucleus.Enhancer] - Agregando el metodo "void dnSetventajoso(class main.Usuario objPC, boolean val)"
05 abr 2016 - 15:57:21,436 (main) INFO  [DataNucleus.Enhancer] - Escribiendo el archivo de clase "C:\Users\axi_e\git\TraLaLa\TraLaLa\bin\main\Usuario.class" con definicion enhanced
05 abr 2016 - 15:57:21,437 (main) DEBUG [DataNucleus.Enhancer] - Enhance de la clase "main.Usuario" ha terminado
05 abr 2016 - 15:57:21,437 (main) INFO  [DataNucleus.Enhancer] - DataNucleus Enhancer ha terminado con exito para 4 clases.
